
local CCObjectTypes = {
    "AccelAmplitude",
    "AccelDeccelAmplitude",
    "Action",
    "ActionCamera",
    "ActionEase",
    "ActionInstant",
    "ActionInterval",
    "ActionManager",
    "Animate",
    "Animation",
    "AnimationCache",
    "AnimationData",
    "AnimationFrame",
    "Armature",
    "ArmatureAnimation",
    "ArmatureData",
    "ArmatureDataManager",
    "ArmatureDisplayData",
    "Array",
    "AtlasNode",
    "BatchNode",
    "BezierBy",
    "BezierTo",
    "Blink",
    "Bone",
    "BoneData",
    "Bool",
    "CallFunc",
    "CallFuncN",
    "Camera",
    "CardinalSplineBy",
    "CardinalSplineTo",
    "CatmullRomBy",
    "CatmullRomTo",
    "CircleShape",
    "ClippingNode",
    "ClippingRegionNode",
    "Component",
    "Configuration",
    "Control",
    "ControlButton",
    "ControlColourPicker",
    "ControlHuePicker",
    "ControlPotentiometer",
    "ControlSaturationBrightnessPicker",
    "ControlSlider",
    "ControlStepper",
    "ControlSwitch",
    "DeccelAmplitude",
    "DelayTime",
    "Dictionary",
    "Director",
    "DisplayData",
    "DisplayLinkDirector",
    "Double",
    "DrawNode",
    "EaseBackIn",
    "EaseBackInOut",
    "EaseBackOut",
    "EaseBounce",
    "EaseBounceIn",
    "EaseBounceInOut",
    "EaseBounceOut",
    "EaseElastic",
    "EaseElasticIn",
    "EaseElasticInOut",
    "EaseElasticOut",
    "EaseExponentialIn",
    "EaseExponentialInOut",
    "EaseExponentialOut",
    "EaseIn",
    "EaseInOut",
    "EaseOut",
    "EaseRateAction",
    "EaseSineIn",
    "EaseSineInOut",
    "EaseSineOut",
    "EditBox",
    "FadeIn",
    "FadeOut",
    "FadeOutBLTiles",
    "FadeOutDownTiles",
    "FadeOutTRTiles",
    "FadeOutUpTiles",
    "FadeTo",
    "FiniteTimeAction",
    "FlipX",
    "FlipX3D",
    "FlipY",
    "FlipY3D",
    "Float",
    "Follow",
    "FrameData",
    "GLProgram",
    "GraySprite",
    "Grid3DAction",
    "GridAction",
    "GridBase",
    "Hide",
    "Image",
    "Integer",
    "JumpBy",
    "JumpTiles3D",
    "JumpTo",
    "KeypadDispatcher",
    "LabelAtlas",
    "LabelBMFont",
    "LabelTTF",
    "Layer",
    "LayerColor",
    "LayerGradient",
    "LayerMultiplex",
    "Lens3D",
    "Liquid",
    "Menu",
    "MenuItem",
    "MenuItemAtlasFont",
    "MenuItemFont",
    "MenuItemImage",
    "MenuItemLabel",
    "MenuItemSprite",
    "MenuItemToggle",
    "MotionStreak",
    "MoveBy",
    "MovementBoneData",
    "MovementData",
    "MoveTo",
    "Node",
    "NotificationCenter",
    "Ref",
    "OrbitCamera",
    "PageTurn3D",
    "ParallaxNode",
    "ParticleBatchNode",
    "ParticleDisplayData",
    "ParticleExplosion",
    "ParticleFire",
    "ParticleFireworks",
    "ParticleFlower",
    "ParticleGalaxy",
    "ParticleMeteor",
    "ParticleRain",
    "ParticleSmoke",
    "ParticleSnow",
    "ParticleSpiral",
    "ParticleSun",
    "ParticleSystem",
    "ParticleSystemQuad",
    "Place",
    "PointArray",
    "PointShape",
    "PolygonShape",
    "Profiler",
    "ProfilingTimer",
    "ProgressFromTo",
    "ProgressTimer",
    "ProgressTo",
    "RectShape",
    "RemoveSelf",
    "RenderTexture",
    "Repeat",
    "RepeatForever",
    "ReuseGrid",
    "ReverseTime",
    "Ripple3D",
    "RotateBy",
    "RotateTo",
    "Scale9Sprite",
    "ScaleBy",
    "ScaleTo",
    "Scene",
    "Scheduler",
    "ScrollView",
    "Sequence",
    "Set",
    "Shaky3D",
    "ShakyTiles3D",
    "ShapeNode",
    "ShatteredTiles3D",
    "Show",
    "ShuffleTiles",
    "SkewBy",
    "SkewTo",
    "Spawn",
    "Speed",
    "SplitCols",
    "SplitRows",
    "Sprite",
    "SpriteBatchNode",
    "SpriteDisplayData",
    "SpriteFrame",
    "SpriteFrameCache",
    "StopGrid",
    "String",
    "TableView",
    "TableViewCell",
    "TargetedAction",
    "TextFieldTTF",
    "Texture2D",
    "TextureAtlas",
    "TextureCache",
    "TiledGrid3DAction",
    "TileMapAtlas",
    "TintBy",
    "TintTo",
    "TMXLayer",
    "TMXLayerInfo",
    "TMXMapInfo",
    "TMXObjectGroup",
    "TMXTiledMap",
    "TMXTilesetInfo",
    "ToggleVisibility",
    "TouchDispatcher",
    "TransitionCrossFade",
    "TransitionFade",
    "TransitionFadeBL",
    "TransitionFadeDown",
    "TransitionFadeTR",
    "TransitionFadeUp",
    "TransitionFlipAngular",
    "TransitionFlipX",
    "TransitionFlipY",
    "TransitionJumpZoom",
    "TransitionMoveInB",
    "TransitionMoveInL",
    "TransitionMoveInR",
    "TransitionMoveInT",
    "TransitionPageTurn",
    "TransitionProgress",
    "TransitionProgressHorizontal",
    "TransitionProgressInOut",
    "TransitionProgressOutIn",
    "TransitionProgressRadialCCW",
    "TransitionProgressRadialCW",
    "TransitionProgressVertical",
    "TransitionRotoZoom",
    "TransitionScene",
    "TransitionSceneOriented",
    "TransitionShrinkGrow",
    "TransitionSlideInB",
    "TransitionSlideInL",
    "TransitionSlideInR",
    "TransitionSlideInT",
    "TransitionSplitCols",
    "TransitionSplitRows",
    "TransitionTurnOffTiles",
    "TransitionZoomFlipAngular",
    "TransitionZoomFlipX",
    "TransitionZoomFlipY",
    "TurnOffTiles",
    "Twirl",
    "Waves",
    "Waves3D",
    "WavesTiles3D",
    "HTTPRequest",
    "PlayerMenuItem",
    "PlayerTask",
}

function string.split(str, delimiter)
    if (delimiter=='') then return false end
    local pos,arr = 0, {}
    -- for each divider found
    for st,sp in function() return string.find(str, delimiter, pos, true) end do
        table.insert(arr, string.sub(str, pos, st - 1))
        pos = sp + 1
    end
    table.insert(arr, string.sub(str, pos))
    return arr
end

function string.trim(str)
    str = string.gsub(str, "^[ \t\n\r]+", "")
    return string.gsub(str, "[ \t\n\r]+$", "")
end

if type(_extra_parameters) == "table" then
    if _extra_parameters.CCOBJECTS then
        local arr = string.split(_extra_parameters.CCOBJECTS, ",")
        for i = 1, #arr do
            local v = string.trim(tostring(arr[i]))
            if v ~= "" then
                CCObjectTypes[#CCObjectTypes + 1] = v
            end
        end
    end
end

-- register CCObject types
_push_functions = _push_functions or {}
for i = 1, #CCObjectTypes do
    _push_functions[CCObjectTypes[i]] = "toluafix_pushusertype_ccobject"
end

-- register LUA_FUNCTION, LUA_TABLE, LUA_HANDLE type
_is_functions = _is_functions or {}
_to_functions = _to_functions or {}

_to_functions["LUA_FUNCTION"] = "toluafix_ref_function"
_is_functions["LUA_FUNCTION"] = "toluafix_isfunction"
_to_functions["LUA_TABLE"] = "toluafix_totable"
_is_functions["LUA_TABLE"] = "toluafix_istable"

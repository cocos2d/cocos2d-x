/*
** Lua binding: Cocos2d
** Generated automatically by tolua++-1.0.92 on 11/15/11 15:36:01.
*/

#include "LuaCocos2d.h"

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

/* Exported function */
TOLUA_API int  tolua_Cocos2d_open (lua_State* tolua_S);

#include "LuaCocos2d.h"
using namespace cocos2d;
/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_cocos2d__CCLayer (lua_State* tolua_S)
{
 cocos2d::CCLayer* self = (cocos2d::CCLayer*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCRenderTexture (lua_State* tolua_S)
{
 cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__ccV3F_C4B_T2F_Quad (lua_State* tolua_S)
{
 cocos2d::ccV3F_C4B_T2F_Quad* self = (cocos2d::ccV3F_C4B_T2F_Quad*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCProgressTimer (lua_State* tolua_S)
{
 cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_cocos2d__CCSpriteFrame____iterator (lua_State* tolua_S)
{
 std::vector<cocos2d::CCSpriteFrame*>::iterator* self = (std::vector<cocos2d::CCSpriteFrame*>::iterator*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMutableDictionary_std__string_CCObject__ (lua_State* tolua_S)
{
 cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCSize (lua_State* tolua_S)
{
 cocos2d::CCSize* self = (cocos2d::CCSize*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCSet (lua_State* tolua_S)
{
 cocos2d::CCSet* self = (cocos2d::CCSet*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCStandardTouchDelegate (lua_State* tolua_S)
{
 cocos2d::CCStandardTouchDelegate* self = (cocos2d::CCStandardTouchDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__EGLTouchDelegate (lua_State* tolua_S)
{
 cocos2d::EGLTouchDelegate* self = (cocos2d::EGLTouchDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__ccVertex3F (lua_State* tolua_S)
{
 cocos2d::ccVertex3F* self = (cocos2d::ccVertex3F*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCRepeatForever (lua_State* tolua_S)
{
 cocos2d::CCRepeatForever* self = (cocos2d::CCRepeatForever*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__ccGridSize (lua_State* tolua_S)
{
 cocos2d::ccGridSize* self = (cocos2d::ccGridSize*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionFadeTR (lua_State* tolua_S)
{
 cocos2d::CCTransitionFadeTR* self = (cocos2d::CCTransitionFadeTR*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleExplosion (lua_State* tolua_S)
{
 cocos2d::CCParticleExplosion* self = (cocos2d::CCParticleExplosion*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCObject (lua_State* tolua_S)
{
 cocos2d::CCObject* self = (cocos2d::CCObject*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionSlideInR (lua_State* tolua_S)
{
 cocos2d::CCTransitionSlideInR* self = (cocos2d::CCTransitionSlideInR*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionRadialCCW (lua_State* tolua_S)
{
 cocos2d::CCTransitionRadialCCW* self = (cocos2d::CCTransitionRadialCCW*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTileMapAtlas (lua_State* tolua_S)
{
 cocos2d::CCTileMapAtlas* self = (cocos2d::CCTileMapAtlas*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCCamera (lua_State* tolua_S)
{
 cocos2d::CCCamera* self = (cocos2d::CCCamera*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMenuItemSprite (lua_State* tolua_S)
{
 cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCRibbonSegment (lua_State* tolua_S)
{
 cocos2d::CCRibbonSegment* self = (cocos2d::CCRibbonSegment*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParallaxNode (lua_State* tolua_S)
{
 cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCCallFuncN (lua_State* tolua_S)
{
 cocos2d::CCCallFuncN* self = (cocos2d::CCCallFuncN*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__ccColor4B (lua_State* tolua_S)
{
 cocos2d::ccColor4B* self = (cocos2d::ccColor4B*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__ccBlendFunc (lua_State* tolua_S)
{
 cocos2d::ccBlendFunc* self = (cocos2d::ccBlendFunc*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCSpriteBatchNode (lua_State* tolua_S)
{
 cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionFadeDown (lua_State* tolua_S)
{
 cocos2d::CCTransitionFadeDown* self = (cocos2d::CCTransitionFadeDown*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionFlipX (lua_State* tolua_S)
{
 cocos2d::CCTransitionFlipX* self = (cocos2d::CCTransitionFlipX*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionTurnOffTiles (lua_State* tolua_S)
{
 cocos2d::CCTransitionTurnOffTiles* self = (cocos2d::CCTransitionTurnOffTiles*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionScene (lua_State* tolua_S)
{
 cocos2d::CCTransitionScene* self = (cocos2d::CCTransitionScene*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__ccTex2F (lua_State* tolua_S)
{
 cocos2d::ccTex2F* self = (cocos2d::ccTex2F*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_cocos2d__CCObject____iterator (lua_State* tolua_S)
{
 std::vector<cocos2d::CCObject*>::iterator* self = (std::vector<cocos2d::CCObject*>::iterator*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCCallFunc (lua_State* tolua_S)
{
 cocos2d::CCCallFunc* self = (cocos2d::CCCallFunc*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTMXMapInfo (lua_State* tolua_S)
{
 cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMenuItemLabel (lua_State* tolua_S)
{
 cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionCrossFade (lua_State* tolua_S)
{
 cocos2d::CCTransitionCrossFade* self = (cocos2d::CCTransitionCrossFade*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCScene (lua_State* tolua_S)
{
 cocos2d::CCScene* self = (cocos2d::CCScene*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionFlipAngular (lua_State* tolua_S)
{
 cocos2d::CCTransitionFlipAngular* self = (cocos2d::CCTransitionFlipAngular*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCLabelBMFont (lua_State* tolua_S)
{
 cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCCallFuncO (lua_State* tolua_S)
{
 cocos2d::CCCallFuncO* self = (cocos2d::CCCallFuncO*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCActionCamera (lua_State* tolua_S)
{
 cocos2d::CCActionCamera* self = (cocos2d::CCActionCamera*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCAction (lua_State* tolua_S)
{
 cocos2d::CCAction* self = (cocos2d::CCAction*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__SelectorProtocol (lua_State* tolua_S)
{
 cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCAccelAmplitude (lua_State* tolua_S)
{
 cocos2d::CCAccelAmplitude* self = (cocos2d::CCAccelAmplitude*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCRibbon (lua_State* tolua_S)
{
 cocos2d::CCRibbon* self = (cocos2d::CCRibbon*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionFade (lua_State* tolua_S)
{
 cocos2d::CCTransitionFade* self = (cocos2d::CCTransitionFade*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionFlipY (lua_State* tolua_S)
{
 cocos2d::CCTransitionFlipY* self = (cocos2d::CCTransitionFlipY*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCSpriteFrameCache (lua_State* tolua_S)
{
 cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTexture2D (lua_State* tolua_S)
{
 cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCLayerColor (lua_State* tolua_S)
{
 cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCHide (lua_State* tolua_S)
{
 cocos2d::CCHide* self = (cocos2d::CCHide*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTouchDelegate (lua_State* tolua_S)
{
 cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMenuItemImage (lua_State* tolua_S)
{
 cocos2d::CCMenuItemImage* self = (cocos2d::CCMenuItemImage*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTMXTiledMap (lua_State* tolua_S)
{
 cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionSplitRows (lua_State* tolua_S)
{
 cocos2d::CCTransitionSplitRows* self = (cocos2d::CCTransitionSplitRows*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMutableArray_CCObject__ (lua_State* tolua_S)
{
 cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTextureCache (lua_State* tolua_S)
{
 cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_std__string_ (lua_State* tolua_S)
{
 std::vector<std::string>* self = (std::vector<std::string>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionSlideInB (lua_State* tolua_S)
{
 cocos2d::CCTransitionSlideInB* self = (cocos2d::CCTransitionSlideInB*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionZoomFlipX (lua_State* tolua_S)
{
 cocos2d::CCTransitionZoomFlipX* self = (cocos2d::CCTransitionZoomFlipX*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCActionManager (lua_State* tolua_S)
{
 cocos2d::CCActionManager* self = (cocos2d::CCActionManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCDeccelAmplitude (lua_State* tolua_S)
{
 cocos2d::CCDeccelAmplitude* self = (cocos2d::CCDeccelAmplitude*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_cocos2d__CCSpriteFrame____reverse_iterator (lua_State* tolua_S)
{
 std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator* self = (std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionSplitCols (lua_State* tolua_S)
{
 cocos2d::CCTransitionSplitCols* self = (cocos2d::CCTransitionSplitCols*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionSlideInT (lua_State* tolua_S)
{
 cocos2d::CCTransitionSlideInT* self = (cocos2d::CCTransitionSlideInT*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCLayerMultiplex (lua_State* tolua_S)
{
 cocos2d::CCLayerMultiplex* self = (cocos2d::CCLayerMultiplex*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMutableArray_CCSpriteFrame__ (lua_State* tolua_S)
{
 cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMenuItem (lua_State* tolua_S)
{
 cocos2d::CCMenuItem* self = (cocos2d::CCMenuItem*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionMoveInT (lua_State* tolua_S)
{
 cocos2d::CCTransitionMoveInT* self = (cocos2d::CCTransitionMoveInT*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTextureAtlas (lua_State* tolua_S)
{
 cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCFlipY (lua_State* tolua_S)
{
 cocos2d::CCFlipY* self = (cocos2d::CCFlipY*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CCAffineTransform (lua_State* tolua_S)
{
 CCAffineTransform* self = (CCAffineTransform*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCNode (lua_State* tolua_S)
{
 cocos2d::CCNode* self = (cocos2d::CCNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCString (lua_State* tolua_S)
{
 cocos2d::CCString* self = (cocos2d::CCString*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCAnimationCache (lua_State* tolua_S)
{
 cocos2d::CCAnimationCache* self = (cocos2d::CCAnimationCache*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCDirector (lua_State* tolua_S)
{
 cocos2d::CCDirector* self = (cocos2d::CCDirector*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTouch (lua_State* tolua_S)
{
 cocos2d::CCTouch* self = (cocos2d::CCTouch*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCToggleVisibility (lua_State* tolua_S)
{
 cocos2d::CCToggleVisibility* self = (cocos2d::CCToggleVisibility*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleSnow (lua_State* tolua_S)
{
 cocos2d::CCParticleSnow* self = (cocos2d::CCParticleSnow*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionZoomFlipAngular (lua_State* tolua_S)
{
 cocos2d::CCTransitionZoomFlipAngular* self = (cocos2d::CCTransitionZoomFlipAngular*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_cocos2d__CCFiniteTimeAction____reverse_iterator (lua_State* tolua_S)
{
 std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator* self = (std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionFadeBL (lua_State* tolua_S)
{
 cocos2d::CCTransitionFadeBL* self = (cocos2d::CCTransitionFadeBL*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleSpiral (lua_State* tolua_S)
{
 cocos2d::CCParticleSpiral* self = (cocos2d::CCParticleSpiral*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionFadeUp (lua_State* tolua_S)
{
 cocos2d::CCTransitionFadeUp* self = (cocos2d::CCTransitionFadeUp*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleMeteor (lua_State* tolua_S)
{
 cocos2d::CCParticleMeteor* self = (cocos2d::CCParticleMeteor*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionRadialCW (lua_State* tolua_S)
{
 cocos2d::CCTransitionRadialCW* self = (cocos2d::CCTransitionRadialCW*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleGalaxy (lua_State* tolua_S)
{
 cocos2d::CCParticleGalaxy* self = (cocos2d::CCParticleGalaxy*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleSun (lua_State* tolua_S)
{
 cocos2d::CCParticleSun* self = (cocos2d::CCParticleSun*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__ccColor4F (lua_State* tolua_S)
{
 cocos2d::ccColor4F* self = (cocos2d::ccColor4F*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionZoomFlipY (lua_State* tolua_S)
{
 cocos2d::CCTransitionZoomFlipY* self = (cocos2d::CCTransitionZoomFlipY*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleFireworks (lua_State* tolua_S)
{
 cocos2d::CCParticleFireworks* self = (cocos2d::CCParticleFireworks*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleFire (lua_State* tolua_S)
{
 cocos2d::CCParticleFire* self = (cocos2d::CCParticleFire*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleSystem (lua_State* tolua_S)
{
 cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMotionStreak (lua_State* tolua_S)
{
 cocos2d::CCMotionStreak* self = (cocos2d::CCMotionStreak*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMenuItemToggle (lua_State* tolua_S)
{
 cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCShow (lua_State* tolua_S)
{
 cocos2d::CCShow* self = (cocos2d::CCShow*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMenu (lua_State* tolua_S)
{
 cocos2d::CCMenu* self = (cocos2d::CCMenu*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_cocos2d__CCObject____reverse_iterator (lua_State* tolua_S)
{
 std::vector<cocos2d::CCObject*>::reverse_iterator* self = (std::vector<cocos2d::CCObject*>::reverse_iterator*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMenuItemFont (lua_State* tolua_S)
{
 cocos2d::CCMenuItemFont* self = (cocos2d::CCMenuItemFont*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCFollow (lua_State* tolua_S)
{
 cocos2d::CCFollow* self = (cocos2d::CCFollow*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCPlace (lua_State* tolua_S)
{
 cocos2d::CCPlace* self = (cocos2d::CCPlace*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionMoveInR (lua_State* tolua_S)
{
 cocos2d::CCTransitionMoveInR* self = (cocos2d::CCTransitionMoveInR*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMenuItemAtlasFont (lua_State* tolua_S)
{
 cocos2d::CCMenuItemAtlasFont* self = (cocos2d::CCMenuItemAtlasFont*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionSlideInL (lua_State* tolua_S)
{
 cocos2d::CCTransitionSlideInL* self = (cocos2d::CCTransitionSlideInL*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__ccColor3B (lua_State* tolua_S)
{
 cocos2d::ccColor3B* self = (cocos2d::ccColor3B*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleRain (lua_State* tolua_S)
{
 cocos2d::CCParticleRain* self = (cocos2d::CCParticleRain*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTMXObjectGroup (lua_State* tolua_S)
{
 cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionMoveInB (lua_State* tolua_S)
{
 cocos2d::CCTransitionMoveInB* self = (cocos2d::CCTransitionMoveInB*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCScheduler (lua_State* tolua_S)
{
 cocos2d::CCScheduler* self = (cocos2d::CCScheduler*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCLabelAtlas (lua_State* tolua_S)
{
 cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCKeypadDispatcher (lua_State* tolua_S)
{
 cocos2d::CCKeypadDispatcher* self = (cocos2d::CCKeypadDispatcher*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCEaseRateAction (lua_State* tolua_S)
{
 cocos2d::CCEaseRateAction* self = (cocos2d::CCEaseRateAction*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionMoveInL (lua_State* tolua_S)
{
 cocos2d::CCTransitionMoveInL* self = (cocos2d::CCTransitionMoveInL*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCLabelTTF (lua_State* tolua_S)
{
 cocos2d::CCLabelTTF* self = (cocos2d::CCLabelTTF*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCPoolManager (lua_State* tolua_S)
{
 cocos2d::CCPoolManager* self = (cocos2d::CCPoolManager*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCSpriteFrame (lua_State* tolua_S)
{
 cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCFiniteTimeAction (lua_State* tolua_S)
{
 cocos2d::CCFiniteTimeAction* self = (cocos2d::CCFiniteTimeAction*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTimer (lua_State* tolua_S)
{
 cocos2d::CCTimer* self = (cocos2d::CCTimer*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCAutoreleasePool (lua_State* tolua_S)
{
 cocos2d::CCAutoreleasePool* self = (cocos2d::CCAutoreleasePool*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCAccelDeccelAmplitude (lua_State* tolua_S)
{
 cocos2d::CCAccelDeccelAmplitude* self = (cocos2d::CCAccelDeccelAmplitude*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionShrinkGrow (lua_State* tolua_S)
{
 cocos2d::CCTransitionShrinkGrow* self = (cocos2d::CCTransitionShrinkGrow*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCPoint (lua_State* tolua_S)
{
 cocos2d::CCPoint* self = (cocos2d::CCPoint*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionSceneOriented (lua_State* tolua_S)
{
 cocos2d::CCTransitionSceneOriented* self = (cocos2d::CCTransitionSceneOriented*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCAtlasNode (lua_State* tolua_S)
{
 cocos2d::CCAtlasNode* self = (cocos2d::CCAtlasNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCSkewTo (lua_State* tolua_S)
{
 cocos2d::CCSkewTo* self = (cocos2d::CCSkewTo*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCUserDefault (lua_State* tolua_S)
{
 cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCParticleSmoke (lua_State* tolua_S)
{
 cocos2d::CCParticleSmoke* self = (cocos2d::CCParticleSmoke*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCOrbitCamera (lua_State* tolua_S)
{
 cocos2d::CCOrbitCamera* self = (cocos2d::CCOrbitCamera*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCFlipX (lua_State* tolua_S)
{
 cocos2d::CCFlipX* self = (cocos2d::CCFlipX*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCActionInstant (lua_State* tolua_S)
{
 cocos2d::CCActionInstant* self = (cocos2d::CCActionInstant*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCSpeed (lua_State* tolua_S)
{
 cocos2d::CCSpeed* self = (cocos2d::CCSpeed*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCRect (lua_State* tolua_S)
{
 cocos2d::CCRect* self = (cocos2d::CCRect*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTextFieldTTF (lua_State* tolua_S)
{
 cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTargetedTouchDelegate (lua_State* tolua_S)
{
 cocos2d::CCTargetedTouchDelegate* self = (cocos2d::CCTargetedTouchDelegate*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTMXTilesetInfo (lua_State* tolua_S)
{
 cocos2d::CCTMXTilesetInfo* self = (cocos2d::CCTMXTilesetInfo*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionJumpZoom (lua_State* tolua_S)
{
 cocos2d::CCTransitionJumpZoom* self = (cocos2d::CCTransitionJumpZoom*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCMutableArray_CCFiniteTimeAction__ (lua_State* tolua_S)
{
 cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTMXLayer (lua_State* tolua_S)
{
 cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTouchDispatcher (lua_State* tolua_S)
{
 cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionRotoZoom (lua_State* tolua_S)
{
 cocos2d::CCTransitionRotoZoom* self = (cocos2d::CCTransitionRotoZoom*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTMXLayerInfo (lua_State* tolua_S)
{
 cocos2d::CCTMXLayerInfo* self = (cocos2d::CCTMXLayerInfo*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCBMFontConfiguration (lua_State* tolua_S)
{
 cocos2d::CCBMFontConfiguration* self = (cocos2d::CCBMFontConfiguration*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__vector_cocos2d__CCFiniteTimeAction____iterator (lua_State* tolua_S)
{
 std::vector<cocos2d::CCFiniteTimeAction*>::iterator* self = (std::vector<cocos2d::CCFiniteTimeAction*>::iterator*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__ccVertex2F (lua_State* tolua_S)
{
 cocos2d::ccVertex2F* self = (cocos2d::ccVertex2F*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__set_cocos2d__CCObject____iterator (lua_State* tolua_S)
{
 std::set<cocos2d::CCObject*>::iterator* self = (std::set<cocos2d::CCObject*>::iterator*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCSprite (lua_State* tolua_S)
{
 cocos2d::CCSprite* self = (cocos2d::CCSprite*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_cocos2d__CCTransitionPageTurn (lua_State* tolua_S)
{
 cocos2d::CCTransitionPageTurn* self = (cocos2d::CCTransitionPageTurn*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
#ifndef Mtolua_typeid
#define Mtolua_typeid(L,TI,T)
#endif
 tolua_usertype(tolua_S,"void*");
 Mtolua_typeid(tolua_S,typeid(void*), "void*");
 tolua_usertype(tolua_S,"cocos2d::CCEaseOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseOut), "cocos2d::CCEaseOut");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCTMXTilesetInfo*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCTMXTilesetInfo*>), "cocos2d::CCMutableArray<CCTMXTilesetInfo*>");
 tolua_usertype(tolua_S,"cocos2d::CCZone");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCZone), "cocos2d::CCZone");
 tolua_usertype(tolua_S,"cocos2d::CCProgressTimer");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCProgressTimer), "cocos2d::CCProgressTimer");
 tolua_usertype(tolua_S,"cocos2d::CCScaleBy");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCScaleBy), "cocos2d::CCScaleBy");
 tolua_usertype(tolua_S,"cocos2d::CCArray");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCArray), "cocos2d::CCArray");
 tolua_usertype(tolua_S,"cocos2d::CCProjectionProtocol");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCProjectionProtocol), "cocos2d::CCProjectionProtocol");
 tolua_usertype(tolua_S,"std::vector<cocos2d::CCSpriteFrame*>::iterator");
 Mtolua_typeid(tolua_S,typeid(std::vector<cocos2d::CCSpriteFrame*>::iterator), "std::vector<cocos2d::CCSpriteFrame*>::iterator");
 tolua_usertype(tolua_S,"cocos2d::CCSpriteFrame");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSpriteFrame), "cocos2d::CCSpriteFrame");
 tolua_usertype(tolua_S,"cocos2d::CCDelayTime");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCDelayTime), "cocos2d::CCDelayTime");
 tolua_usertype(tolua_S,"cocos2d::CCSize");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSize), "cocos2d::CCSize");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCNode*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCNode*>), "cocos2d::CCMutableArray<CCNode*>");
 tolua_usertype(tolua_S,"cocos2d::CCOrbitCamera");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCOrbitCamera), "cocos2d::CCOrbitCamera");
 tolua_usertype(tolua_S,"cocos2d::CCRepeatForever");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRepeatForever), "cocos2d::CCRepeatForever");
 tolua_usertype(tolua_S,"cocos2d::CCSkewBy");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSkewBy), "cocos2d::CCSkewBy");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionFadeTR");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionFadeTR), "cocos2d::CCTransitionFadeTR");
 tolua_usertype(tolua_S,"cocos2d::CCGridAction");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCGridAction), "cocos2d::CCGridAction");
 tolua_usertype(tolua_S,"cocos2d::CCParticleExplosion");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleExplosion), "cocos2d::CCParticleExplosion");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCObject*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCObject*>), "cocos2d::CCMutableArray<CCObject*>");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCTMXLayerInfo*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCTMXLayerInfo*>), "cocos2d::CCMutableArray<CCTMXLayerInfo*>");
 tolua_usertype(tolua_S,"cocos2d::CCCamera");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCCamera), "cocos2d::CCCamera");
 tolua_usertype(tolua_S,"CCIMEDispatcher");
 Mtolua_typeid(tolua_S,typeid(CCIMEDispatcher), "CCIMEDispatcher");
 tolua_usertype(tolua_S,"tCCParticle");
 Mtolua_typeid(tolua_S,typeid(tCCParticle), "tCCParticle");
 tolua_usertype(tolua_S,"cocos2d::CCSpawn");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSpawn), "cocos2d::CCSpawn");
 tolua_usertype(tolua_S,"cocos2d::CCCallFuncN");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCCallFuncN), "cocos2d::CCCallFuncN");
 tolua_usertype(tolua_S,"cocos2d::ccTexParams");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccTexParams), "cocos2d::ccTexParams");
 tolua_usertype(tolua_S,"cocos2d::ccBlendFunc");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccBlendFunc), "cocos2d::ccBlendFunc");
 tolua_usertype(tolua_S,"cocos2d::CCJumpBy");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCJumpBy), "cocos2d::CCJumpBy");
 tolua_usertype(tolua_S,"cocos2d::CCRipple3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRipple3D), "cocos2d::CCRipple3D");
 tolua_usertype(tolua_S,"cocos2d::ccQuad2");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccQuad2), "cocos2d::ccQuad2");
 tolua_usertype(tolua_S,"cocos2d::CCTouchHandler");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTouchHandler), "cocos2d::CCTouchHandler");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionScene");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionScene), "cocos2d::CCTransitionScene");
 tolua_usertype(tolua_S,"cocos2d::CCGridBase");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCGridBase), "cocos2d::CCGridBase");
 tolua_usertype(tolua_S,"cocos2d::CCProgressTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCProgressTo), "cocos2d::CCProgressTo");
 tolua_usertype(tolua_S,"cocos2d::CCTMXMapInfo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTMXMapInfo), "cocos2d::CCTMXMapInfo");
 tolua_usertype(tolua_S,"cocos2d::CCMenuItemLabel");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMenuItemLabel), "cocos2d::CCMenuItemLabel");
 tolua_usertype(tolua_S,"cocos2d::ccVertex2F");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccVertex2F), "cocos2d::ccVertex2F");
 tolua_usertype(tolua_S,"cocos2d::CCBezierTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCBezierTo), "cocos2d::CCBezierTo");
 tolua_usertype(tolua_S,"cocos2d::CCCallFuncO");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCCallFuncO), "cocos2d::CCCallFuncO");
 tolua_usertype(tolua_S,"cocos2d::CCFlipX");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFlipX), "cocos2d::CCFlipX");
 tolua_usertype(tolua_S,"cocos2d::CCBlendProtocol");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCBlendProtocol), "cocos2d::CCBlendProtocol");
 tolua_usertype(tolua_S,"cocos2d::CCFadeOutTRTiles");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFadeOutTRTiles), "cocos2d::CCFadeOutTRTiles");
 tolua_usertype(tolua_S,"cocos2d::CCTextureProtocol");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTextureProtocol), "cocos2d::CCTextureProtocol");
 tolua_usertype(tolua_S,"cocos2d::CCFadeTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFadeTo), "cocos2d::CCFadeTo");
 tolua_usertype(tolua_S,"cocos2d::SelectorProtocol");
 Mtolua_typeid(tolua_S,typeid(cocos2d::SelectorProtocol), "cocos2d::SelectorProtocol");
 tolua_usertype(tolua_S,"cocos2d::CCBlink");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCBlink), "cocos2d::CCBlink");
 tolua_usertype(tolua_S,"cocos2d::CCAccelAmplitude");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAccelAmplitude), "cocos2d::CCAccelAmplitude");
 tolua_usertype(tolua_S,"SEL_CallFuncN");
 Mtolua_typeid(tolua_S,typeid(SEL_CallFuncN), "SEL_CallFuncN");
 tolua_usertype(tolua_S,"cocos2d::Tile");
 Mtolua_typeid(tolua_S,typeid(cocos2d::Tile), "cocos2d::Tile");
 tolua_usertype(tolua_S,"cocos2d::CCRibbon");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRibbon), "cocos2d::CCRibbon");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionFade");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionFade), "cocos2d::CCTransitionFade");
 tolua_usertype(tolua_S,"cocos2d::CCFlipX3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFlipX3D), "cocos2d::CCFlipX3D");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionFlipY");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionFlipY), "cocos2d::CCTransitionFlipY");
 tolua_usertype(tolua_S,"cocos2d::CCRotateBy");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRotateBy), "cocos2d::CCRotateBy");
 tolua_usertype(tolua_S,"cocos2d::CCParticleSystem");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleSystem), "cocos2d::CCParticleSystem");
 tolua_usertype(tolua_S,"CCSAXDelegator");
 Mtolua_typeid(tolua_S,typeid(CCSAXDelegator), "CCSAXDelegator");
 tolua_usertype(tolua_S,"cocos2d::CCMoveTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMoveTo), "cocos2d::CCMoveTo");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionMoveInB");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionMoveInB), "cocos2d::CCTransitionMoveInB");
 tolua_usertype(tolua_S,"cocos2d::sImageTGA");
 Mtolua_typeid(tolua_S,typeid(cocos2d::sImageTGA), "cocos2d::sImageTGA");
 tolua_usertype(tolua_S,"CCTiledGrid3DAction");
 Mtolua_typeid(tolua_S,typeid(CCTiledGrid3DAction), "CCTiledGrid3DAction");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionSplitRows");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionSplitRows), "cocos2d::CCTransitionSplitRows");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCObject*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCObject*>), "cocos2d::CCMutableArray<CCObject*>");
 tolua_usertype(tolua_S,"cocos2d::CCFadeOutDownTiles");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFadeOutDownTiles), "cocos2d::CCFadeOutDownTiles");
 tolua_usertype(tolua_S,"cocos2d::CCParticleFire");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleFire), "cocos2d::CCParticleFire");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionShrinkGrow");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionShrinkGrow), "cocos2d::CCTransitionShrinkGrow");
 tolua_usertype(tolua_S,"std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator");
 Mtolua_typeid(tolua_S,typeid(std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator), "std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionSplitCols");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionSplitCols), "cocos2d::CCTransitionSplitCols");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionSlideInT");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionSlideInT), "cocos2d::CCTransitionSlideInT");
 tolua_usertype(tolua_S,"cocos2d::CCEaseBackIn");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseBackIn), "cocos2d::CCEaseBackIn");
 tolua_usertype(tolua_S,"cocos2d::ccV2F_C4B_T2F");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccV2F_C4B_T2F), "cocos2d::ccV2F_C4B_T2F");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCSpriteFrame*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCSpriteFrame*>), "cocos2d::CCMutableArray<CCSpriteFrame*>");
 tolua_usertype(tolua_S,"cocos2d::CCMenuItem");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMenuItem), "cocos2d::CCMenuItem");
 tolua_usertype(tolua_S,"cocos2d::CCFlipY");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFlipY), "cocos2d::CCFlipY");
 tolua_usertype(tolua_S,"cocos2d::CCActionEase");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCActionEase), "cocos2d::CCActionEase");
 tolua_usertype(tolua_S,"cocos2d::CCAtlasNode");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAtlasNode), "cocos2d::CCAtlasNode");
 tolua_usertype(tolua_S,"cocos2d::CCNode");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCNode), "cocos2d::CCNode");
 tolua_usertype(tolua_S,"cocos2d::CCDirector");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCDirector), "cocos2d::CCDirector");
 tolua_usertype(tolua_S,"cocos2d::CCToggleVisibility");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCToggleVisibility), "cocos2d::CCToggleVisibility");
 tolua_usertype(tolua_S,"cocos2d::CCShatteredTiles3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCShatteredTiles3D), "cocos2d::CCShatteredTiles3D");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionFadeBL");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionFadeBL), "cocos2d::CCTransitionFadeBL");
 tolua_usertype(tolua_S,"CCDictionary<std::string,cocos2d::CCString*>");
 Mtolua_typeid(tolua_S,typeid(CCDictionary<std::string,cocos2d::CCString*>), "CCDictionary<std::string,cocos2d::CCString*>");
 tolua_usertype(tolua_S,"cocos2d::CCRepeat");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRepeat), "cocos2d::CCRepeat");
 tolua_usertype(tolua_S,"cocos2d::CCActionInterval");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCActionInterval), "cocos2d::CCActionInterval");
 tolua_usertype(tolua_S,"cocos2d::ccColor4F");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccColor4F), "cocos2d::ccColor4F");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionZoomFlipY");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionZoomFlipY), "cocos2d::CCTransitionZoomFlipY");
 tolua_usertype(tolua_S,"cocos2d::CCImage");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCImage), "cocos2d::CCImage");
 tolua_usertype(tolua_S,"cocos2d::CCShow");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCShow), "cocos2d::CCShow");
 tolua_usertype(tolua_S,"cocos2d::CCFollow");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFollow), "cocos2d::CCFollow");
 tolua_usertype(tolua_S,"cocos2d::CCPlace");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCPlace), "cocos2d::CCPlace");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionMoveInR");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionMoveInR), "cocos2d::CCTransitionMoveInR");
 tolua_usertype(tolua_S,"cocos2d::ccV2F_C4B_T2F_Quad");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccV2F_C4B_T2F_Quad), "cocos2d::ccV2F_C4B_T2F_Quad");
 tolua_usertype(tolua_S,"cocos2d::CCEaseIn");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseIn), "cocos2d::CCEaseIn");
 tolua_usertype(tolua_S,"cocos2d::CCTimer");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTimer), "cocos2d::CCTimer");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCFiniteTimeAction*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCFiniteTimeAction*>), "cocos2d::CCMutableArray<CCFiniteTimeAction*>");
 tolua_usertype(tolua_S,"SEL_MenuHandler");
 Mtolua_typeid(tolua_S,typeid(SEL_MenuHandler), "SEL_MenuHandler");
 tolua_usertype(tolua_S,"cocos2d::CCEaseRateAction");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseRateAction), "cocos2d::CCEaseRateAction");
 tolua_usertype(tolua_S,"cocos2d::CCRect");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRect), "cocos2d::CCRect");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionJumpZoom");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionJumpZoom), "cocos2d::CCTransitionJumpZoom");
 tolua_usertype(tolua_S,"cocos2d::CCTMXLayer");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTMXLayer), "cocos2d::CCTMXLayer");
 tolua_usertype(tolua_S,"CCMutableDictionary<std::string,cocos2d::CCObject*>");
 Mtolua_typeid(tolua_S,typeid(CCMutableDictionary<std::string,cocos2d::CCObject*>), "CCMutableDictionary<std::string,cocos2d::CCObject*>");
 tolua_usertype(tolua_S,"cocos2d::CCBMFontConfiguration");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCBMFontConfiguration), "cocos2d::CCBMFontConfiguration");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCTMXObjectGroup*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCTMXObjectGroup*>), "cocos2d::CCMutableArray<CCTMXObjectGroup*>");
 tolua_usertype(tolua_S,"cocos2d::CCSprite");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSprite), "cocos2d::CCSprite");
 tolua_usertype(tolua_S,"cocos2d::CCEaseExponentialInOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseExponentialInOut), "cocos2d::CCEaseExponentialInOut");
 tolua_usertype(tolua_S,"cocos2d::CCRenderTexture");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRenderTexture), "cocos2d::CCRenderTexture");
 tolua_usertype(tolua_S,"cocos2d::CCTMXObjectGroup");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTMXObjectGroup), "cocos2d::CCTMXObjectGroup");
 tolua_usertype(tolua_S,"cocos2d::_ccArray");
 Mtolua_typeid(tolua_S,typeid(cocos2d::_ccArray), "cocos2d::_ccArray");
 tolua_usertype(tolua_S,"cocos2d::CCFadeOutUpTiles");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFadeOutUpTiles), "cocos2d::CCFadeOutUpTiles");
 tolua_usertype(tolua_S,"cocos2d::CCMutableDictionary<std::string,CCObject*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableDictionary<std::string,CCObject*>), "cocos2d::CCMutableDictionary<std::string,CCObject*>");
 tolua_usertype(tolua_S,"cocos2d::CCEaseBounceInOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseBounceInOut), "cocos2d::CCEaseBounceInOut");
 tolua_usertype(tolua_S,"cocos2d::CCStandardTouchDelegate");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCStandardTouchDelegate), "cocos2d::CCStandardTouchDelegate");
 tolua_usertype(tolua_S,"cocos2d::EGLTouchDelegate");
 Mtolua_typeid(tolua_S,typeid(cocos2d::EGLTouchDelegate), "cocos2d::EGLTouchDelegate");
 tolua_usertype(tolua_S,"cocos2d::CCReverseTime");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCReverseTime), "cocos2d::CCReverseTime");
 tolua_usertype(tolua_S,"SEL_CallFunc");
 Mtolua_typeid(tolua_S,typeid(SEL_CallFunc), "SEL_CallFunc");
 tolua_usertype(tolua_S,"CCDictionary<int,CCStringToStringDictionary*>");
 Mtolua_typeid(tolua_S,typeid(CCDictionary<int,CCStringToStringDictionary*>), "CCDictionary<int,CCStringToStringDictionary*>");
 tolua_usertype(tolua_S,"CCGrid3DAction");
 Mtolua_typeid(tolua_S,typeid(CCGrid3DAction), "CCGrid3DAction");
 tolua_usertype(tolua_S,"cocos2d::CCLens3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLens3D), "cocos2d::CCLens3D");
 tolua_usertype(tolua_S,"cocos2d::CCEaseSineInOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseSineInOut), "cocos2d::CCEaseSineInOut");
 tolua_usertype(tolua_S,"SEL_SCHEDULE");
 Mtolua_typeid(tolua_S,typeid(SEL_SCHEDULE), "SEL_SCHEDULE");
 tolua_usertype(tolua_S,"cocos2d::ccBMFontDef");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccBMFontDef), "cocos2d::ccBMFontDef");
 tolua_usertype(tolua_S,"cocos2d::CCBezierBy");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCBezierBy), "cocos2d::CCBezierBy");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCFiniteTimeAction*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCFiniteTimeAction*>), "cocos2d::CCMutableArray<CCFiniteTimeAction*>");
 tolua_usertype(tolua_S,"cocos2d::CCParticleSystemQuad");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleSystemQuad), "cocos2d::CCParticleSystemQuad");
 tolua_usertype(tolua_S,"cocos2d::_hashElement");
 Mtolua_typeid(tolua_S,typeid(cocos2d::_hashElement), "cocos2d::_hashElement");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionSlideInR");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionSlideInR), "cocos2d::CCTransitionSlideInR");
 tolua_usertype(tolua_S,"SEL_CallFuncO");
 Mtolua_typeid(tolua_S,typeid(SEL_CallFuncO), "SEL_CallFuncO");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionRadialCCW");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionRadialCCW), "cocos2d::CCTransitionRadialCCW");
 tolua_usertype(tolua_S,"cocos2d::CCFadeIn");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFadeIn), "cocos2d::CCFadeIn");
 tolua_usertype(tolua_S,"cocos2d::CCTwirl");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTwirl), "cocos2d::CCTwirl");
 tolua_usertype(tolua_S,"cocos2d::CCTintBy");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTintBy), "cocos2d::CCTintBy");
 tolua_usertype(tolua_S,"cocos2d::CCMenuItemSprite");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMenuItemSprite), "cocos2d::CCMenuItemSprite");
 tolua_usertype(tolua_S,"cocos2d::CCRibbonSegment");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRibbonSegment), "cocos2d::CCRibbonSegment");
 tolua_usertype(tolua_S,"cocos2d::CCParallaxNode");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParallaxNode), "cocos2d::CCParallaxNode");
 tolua_usertype(tolua_S,"cocos2d::CCParticleSystemPoint");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleSystemPoint), "cocos2d::CCParticleSystemPoint");
 tolua_usertype(tolua_S,"cocos2d::CCRotateTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRotateTo), "cocos2d::CCRotateTo");
 tolua_usertype(tolua_S,"cocos2d::ccColor4B");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccColor4B), "cocos2d::ccColor4B");
 tolua_usertype(tolua_S,"cocos2d::CCLabelProtocol");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLabelProtocol), "cocos2d::CCLabelProtocol");
 tolua_usertype(tolua_S,"cocos2d::CCAnimation");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAnimation), "cocos2d::CCAnimation");
 tolua_usertype(tolua_S,"CCData");
 Mtolua_typeid(tolua_S,typeid(CCData), "CCData");
 tolua_usertype(tolua_S,"cocos2d::CCPageTurn3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCPageTurn3D), "cocos2d::CCPageTurn3D");
 tolua_usertype(tolua_S,"CCDictionary<std::string,cocos2d::CCObject*>");
 Mtolua_typeid(tolua_S,typeid(CCDictionary<std::string,cocos2d::CCObject*>), "CCDictionary<std::string,cocos2d::CCObject*>");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionRotoZoom");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionRotoZoom), "cocos2d::CCTransitionRotoZoom");
 tolua_usertype(tolua_S,"cocos2d::CCSplitRows");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSplitRows), "cocos2d::CCSplitRows");
 tolua_usertype(tolua_S,"cocos2d::ccPointSprite");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccPointSprite), "cocos2d::ccPointSprite");
 tolua_usertype(tolua_S,"GLenum");
 Mtolua_typeid(tolua_S,typeid(GLenum), "GLenum");
 tolua_usertype(tolua_S,"cocos2d::CCScaleTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCScaleTo), "cocos2d::CCScaleTo");
 tolua_usertype(tolua_S,"cocos2d::CCCallFunc");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCCallFunc), "cocos2d::CCCallFunc");
 tolua_usertype(tolua_S,"cocos2d::CCCopying");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCCopying), "cocos2d::CCCopying");
 tolua_usertype(tolua_S,"cocos2d::CCScene");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCScene), "cocos2d::CCScene");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionFlipAngular");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionFlipAngular), "cocos2d::CCTransitionFlipAngular");
 tolua_usertype(tolua_S,"cocos2d::CCMoveBy");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMoveBy), "cocos2d::CCMoveBy");
 tolua_usertype(tolua_S,"cocos2d::CCReuseGrid");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCReuseGrid), "cocos2d::CCReuseGrid");
 tolua_usertype(tolua_S,"cocos2d::CCJumpTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCJumpTo), "cocos2d::CCJumpTo");
 tolua_usertype(tolua_S,"cocos2d::CCParticleGalaxy");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleGalaxy), "cocos2d::CCParticleGalaxy");
 tolua_usertype(tolua_S,"cocos2d::CCParticleSpiral");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleSpiral), "cocos2d::CCParticleSpiral");
 tolua_usertype(tolua_S,"cocos2d::CCEaseBackOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseBackOut), "cocos2d::CCEaseBackOut");
 tolua_usertype(tolua_S,"cocos2d::CCAnimate");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAnimate), "cocos2d::CCAnimate");
 tolua_usertype(tolua_S,"cocos2d::ccTex2F");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccTex2F), "cocos2d::ccTex2F");
 tolua_usertype(tolua_S,"cocos2d::CCActionInstant");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCActionInstant), "cocos2d::CCActionInstant");
 tolua_usertype(tolua_S,"cocos2d::CCParticleSnow");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleSnow), "cocos2d::CCParticleSnow");
 tolua_usertype(tolua_S,"cocos2d::CCParticleSmoke");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleSmoke), "cocos2d::CCParticleSmoke");
 tolua_usertype(tolua_S,"cocos2d::CCParticleMeteor");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleMeteor), "cocos2d::CCParticleMeteor");
 tolua_usertype(tolua_S,"cocos2d::CCParticleSun");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleSun), "cocos2d::CCParticleSun");
 tolua_usertype(tolua_S,"cocos2d::CCParticleFireworks");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleFireworks), "cocos2d::CCParticleFireworks");
 tolua_usertype(tolua_S,"cocos2d::CCFileUtils");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFileUtils), "cocos2d::CCFileUtils");
 tolua_usertype(tolua_S,"cocos2d::CCMotionStreak");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMotionStreak), "cocos2d::CCMotionStreak");
 tolua_usertype(tolua_S,"cocos2d::CCSpriteFrameCache");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSpriteFrameCache), "cocos2d::CCSpriteFrameCache");
 tolua_usertype(tolua_S,"cocos2d::CCEaseBounce");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseBounce), "cocos2d::CCEaseBounce");
 tolua_usertype(tolua_S,"cocos2d::CCTexture2D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTexture2D), "cocos2d::CCTexture2D");
 tolua_usertype(tolua_S,"cocos2d::CCAcceleration");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAcceleration), "cocos2d::CCAcceleration");
 tolua_usertype(tolua_S,"cocos2d::CCActionCamera");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCActionCamera), "cocos2d::CCActionCamera");
 tolua_usertype(tolua_S,"cocos2d::CCEaseBackInOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseBackInOut), "cocos2d::CCEaseBackInOut");
 tolua_usertype(tolua_S,"cocos2d::CCLayerColor");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLayerColor), "cocos2d::CCLayerColor");
 tolua_usertype(tolua_S,"cocos2d::CCMenuItemFont");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMenuItemFont), "cocos2d::CCMenuItemFont");
 tolua_usertype(tolua_S,"cocos2d::CCWavesTiles3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCWavesTiles3D), "cocos2d::CCWavesTiles3D");
 tolua_usertype(tolua_S,"cocos2d::CCMenuItemAtlasFont");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMenuItemAtlasFont), "cocos2d::CCMenuItemAtlasFont");
 tolua_usertype(tolua_S,"cocos2d::CCKeypadHandler");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCKeypadHandler), "cocos2d::CCKeypadHandler");
 tolua_usertype(tolua_S,"cocos2d::CCTouchDelegate");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTouchDelegate), "cocos2d::CCTouchDelegate");
 tolua_usertype(tolua_S,"cocos2d::ccBezierConfig");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccBezierConfig), "cocos2d::ccBezierConfig");
 tolua_usertype(tolua_S,"cocos2d::CCMenuItemImage");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMenuItemImage), "cocos2d::CCMenuItemImage");
 tolua_usertype(tolua_S,"va_list");
 Mtolua_typeid(tolua_S,typeid(va_list), "va_list");
 tolua_usertype(tolua_S,"cocos2d::CCTMXTiledMap");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTMXTiledMap), "cocos2d::CCTMXTiledMap");
 tolua_usertype(tolua_S,"CCIMEDelegate");
 Mtolua_typeid(tolua_S,typeid(CCIMEDelegate), "CCIMEDelegate");
 tolua_usertype(tolua_S,"cocos2d::CCLayerGradient");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLayerGradient), "cocos2d::CCLayerGradient");
 tolua_usertype(tolua_S,"cocos2d::_KerningHashElement");
 Mtolua_typeid(tolua_S,typeid(cocos2d::_KerningHashElement), "cocos2d::_KerningHashElement");
 tolua_usertype(tolua_S,"cocos2d::CCEaseElasticInOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseElasticInOut), "cocos2d::CCEaseElasticInOut");
 tolua_usertype(tolua_S,"cocos2d::CCLayer");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLayer), "cocos2d::CCLayer");
 tolua_usertype(tolua_S,"cocos2d::CCLabelBMFont");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLabelBMFont), "cocos2d::CCLabelBMFont");
 tolua_usertype(tolua_S,"cocos2d::CCFiniteTimeAction");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFiniteTimeAction), "cocos2d::CCFiniteTimeAction");
 tolua_usertype(tolua_S,"cocos2d::ccBMFontPadding");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccBMFontPadding), "cocos2d::ccBMFontPadding");
 tolua_usertype(tolua_S,"cocos2d::CCTextureCache");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTextureCache), "cocos2d::CCTextureCache");
 tolua_usertype(tolua_S,"std::vector<std::string>");
 Mtolua_typeid(tolua_S,typeid(std::vector<std::string>), "std::vector<std::string>");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionSlideInB");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionSlideInB), "cocos2d::CCTransitionSlideInB");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionZoomFlipX");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionZoomFlipX), "cocos2d::CCTransitionZoomFlipX");
 tolua_usertype(tolua_S,"cocos2d::CCEaseExponentialOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseExponentialOut), "cocos2d::CCEaseExponentialOut");
 tolua_usertype(tolua_S,"cocos2d::CCShaky3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCShaky3D), "cocos2d::CCShaky3D");
 tolua_usertype(tolua_S,"cocos2d::CCDeccelAmplitude");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCDeccelAmplitude), "cocos2d::CCDeccelAmplitude");
 tolua_usertype(tolua_S,"cocos2d::CCLabelAtlas");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLabelAtlas), "cocos2d::CCLabelAtlas");
 tolua_usertype(tolua_S,"cocos2d::CCKeypadDispatcher");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCKeypadDispatcher), "cocos2d::CCKeypadDispatcher");
 tolua_usertype(tolua_S,"cocos2d::CCKeypadDelegate");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCKeypadDelegate), "cocos2d::CCKeypadDelegate");
 tolua_usertype(tolua_S,"cocos2d::CCShakyTiles3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCShakyTiles3D), "cocos2d::CCShakyTiles3D");
 tolua_usertype(tolua_S,"cocos2d::CCLayerMultiplex");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLayerMultiplex), "cocos2d::CCLayerMultiplex");
 tolua_usertype(tolua_S,"cocos2d::CCEaseSineIn");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseSineIn), "cocos2d::CCEaseSineIn");
 tolua_usertype(tolua_S,"cocos2d::CCAccelerometerDelegate");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAccelerometerDelegate), "cocos2d::CCAccelerometerDelegate");
 tolua_usertype(tolua_S,"CCMutableArray<CCStringToStringDictionary*>");
 Mtolua_typeid(tolua_S,typeid(CCMutableArray<CCStringToStringDictionary*>), "CCMutableArray<CCStringToStringDictionary*>");
 tolua_usertype(tolua_S,"cocos2d::ccV3F_C4B_T2F_Quad");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccV3F_C4B_T2F_Quad), "cocos2d::ccV3F_C4B_T2F_Quad");
 tolua_usertype(tolua_S,"CCRect");
 Mtolua_typeid(tolua_S,typeid(CCRect), "CCRect");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionMoveInT");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionMoveInT), "cocos2d::CCTransitionMoveInT");
 tolua_usertype(tolua_S,"cocos2d::CCEvent");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEvent), "cocos2d::CCEvent");
 tolua_usertype(tolua_S,"cocos2d::CCEGLView");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEGLView), "cocos2d::CCEGLView");
 tolua_usertype(tolua_S,"cocos2d::CCPoint");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCPoint), "cocos2d::CCPoint");
 tolua_usertype(tolua_S,"cocos2d::CCTextureAtlas");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTextureAtlas), "cocos2d::CCTextureAtlas");
 tolua_usertype(tolua_S,"cocos2d::CCTextFieldDelegate");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTextFieldDelegate), "cocos2d::CCTextFieldDelegate");
 tolua_usertype(tolua_S,"cocos2d::CCMenuItemToggle");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMenuItemToggle), "cocos2d::CCMenuItemToggle");
 tolua_usertype(tolua_S,"CC_GLVIEW");
 Mtolua_typeid(tolua_S,typeid(CC_GLVIEW), "CC_GLVIEW");
 tolua_usertype(tolua_S,"cocos2d::CCEaseElasticOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseElasticOut), "cocos2d::CCEaseElasticOut");
 tolua_usertype(tolua_S,"cocos2d::ccV3F_C4B_T2F");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccV3F_C4B_T2F), "cocos2d::ccV3F_C4B_T2F");
 tolua_usertype(tolua_S,"cocos2d::CCSet");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSet), "cocos2d::CCSet");
 tolua_usertype(tolua_S,"cocos2d::CCLabelTTF");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLabelTTF), "cocos2d::CCLabelTTF");
 tolua_usertype(tolua_S,"cocos2d::ccVertex3F");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccVertex3F), "cocos2d::ccVertex3F");
 tolua_usertype(tolua_S,"CCAffineTransform");
 Mtolua_typeid(tolua_S,typeid(CCAffineTransform), "CCAffineTransform");
 tolua_usertype(tolua_S,"cocos2d::CCPoolManager");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCPoolManager), "cocos2d::CCPoolManager");
 tolua_usertype(tolua_S,"cocos2d::CCString");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCString), "cocos2d::CCString");
 tolua_usertype(tolua_S,"cocos2d::CCAutoreleasePool");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAutoreleasePool), "cocos2d::CCAutoreleasePool");
 tolua_usertype(tolua_S,"ccArray");
 Mtolua_typeid(tolua_S,typeid(ccArray), "ccArray");
 tolua_usertype(tolua_S,"cocos2d::CCEaseBounceOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseBounceOut), "cocos2d::CCEaseBounceOut");
 tolua_usertype(tolua_S,"cocos2d::CCTouch");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTouch), "cocos2d::CCTouch");
 tolua_usertype(tolua_S,"cocos2d::ccGridSize");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccGridSize), "cocos2d::ccGridSize");
 tolua_usertype(tolua_S,"cocos2d::CCEaseSineOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseSineOut), "cocos2d::CCEaseSineOut");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionZoomFlipAngular");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionZoomFlipAngular), "cocos2d::CCTransitionZoomFlipAngular");
 tolua_usertype(tolua_S,"cocos2d::CCAnimationCache");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAnimationCache), "cocos2d::CCAnimationCache");
 tolua_usertype(tolua_S,"cocos2d::CCSplitCols");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSplitCols), "cocos2d::CCSplitCols");
 tolua_usertype(tolua_S,"cocos2d::CCObject");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCObject), "cocos2d::CCObject");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionFadeUp");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionFadeUp), "cocos2d::CCTransitionFadeUp");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionTurnOffTiles");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionTurnOffTiles), "cocos2d::CCTransitionTurnOffTiles");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionRadialCW");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionRadialCW), "cocos2d::CCTransitionRadialCW");
 tolua_usertype(tolua_S,"cocos2d::CCSequence");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSequence), "cocos2d::CCSequence");
 tolua_usertype(tolua_S,"CCIMEKeyboardNotificationInfo");
 Mtolua_typeid(tolua_S,typeid(CCIMEKeyboardNotificationInfo), "CCIMEKeyboardNotificationInfo");
 tolua_usertype(tolua_S,"cocos2d::CCTileMapAtlas");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTileMapAtlas), "cocos2d::CCTileMapAtlas");
 tolua_usertype(tolua_S,"CCTransitionEaseScene");
 Mtolua_typeid(tolua_S,typeid(CCTransitionEaseScene), "CCTransitionEaseScene");
 tolua_usertype(tolua_S,"cocos2d::CCTurnOffTiles");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTurnOffTiles), "cocos2d::CCTurnOffTiles");
 tolua_usertype(tolua_S,"cocos2d::CCHide");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCHide), "cocos2d::CCHide");
 tolua_usertype(tolua_S,"cocos2d::CCFadeOutBLTiles");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFadeOutBLTiles), "cocos2d::CCFadeOutBLTiles");
 tolua_usertype(tolua_S,"cocos2d::CCShuffleTiles");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCShuffleTiles), "cocos2d::CCShuffleTiles");
 tolua_usertype(tolua_S,"cocos2d::CCTMXTilesetInfo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTMXTilesetInfo), "cocos2d::CCTMXTilesetInfo");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionFadeDown");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionFadeDown), "cocos2d::CCTransitionFadeDown");
 tolua_usertype(tolua_S,"cocos2d::CCMenu");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMenu), "cocos2d::CCMenu");
 tolua_usertype(tolua_S,"std::vector<cocos2d::CCObject*>::reverse_iterator");
 Mtolua_typeid(tolua_S,typeid(std::vector<cocos2d::CCObject*>::reverse_iterator), "std::vector<cocos2d::CCObject*>::reverse_iterator");
 tolua_usertype(tolua_S,"cocos2d::CCEaseElastic");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseElastic), "cocos2d::CCEaseElastic");
 tolua_usertype(tolua_S,"cocos2d::CCWaves3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCWaves3D), "cocos2d::CCWaves3D");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionFlipX");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionFlipX), "cocos2d::CCTransitionFlipX");
 tolua_usertype(tolua_S,"cocos2d::CCJumpTiles3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCJumpTiles3D), "cocos2d::CCJumpTiles3D");
 tolua_usertype(tolua_S,"cocos2d::CCEaseExponentialIn");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseExponentialIn), "cocos2d::CCEaseExponentialIn");
 tolua_usertype(tolua_S,"std::vector<cocos2d::CCFiniteTimeAction*>::iterator");
 Mtolua_typeid(tolua_S,typeid(std::vector<cocos2d::CCFiniteTimeAction*>::iterator), "std::vector<cocos2d::CCFiniteTimeAction*>::iterator");
 tolua_usertype(tolua_S,"cocos2d::ccColor3B");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccColor3B), "cocos2d::ccColor3B");
 tolua_usertype(tolua_S,"cocos2d::CCParticleRain");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCParticleRain), "cocos2d::CCParticleRain");
 tolua_usertype(tolua_S,"std::vector<cocos2d::CCObject*>::iterator");
 Mtolua_typeid(tolua_S,typeid(std::vector<cocos2d::CCObject*>::iterator), "std::vector<cocos2d::CCObject*>::iterator");
 tolua_usertype(tolua_S,"cocos2d::CCEaseBounceIn");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseBounceIn), "cocos2d::CCEaseBounceIn");
 tolua_usertype(tolua_S,"cocos2d::CCProgressFromTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCProgressFromTo), "cocos2d::CCProgressFromTo");
 tolua_usertype(tolua_S,"cocos2d::_ccCArray");
 Mtolua_typeid(tolua_S,typeid(cocos2d::_ccCArray), "cocos2d::_ccCArray");
 tolua_usertype(tolua_S,"cocos2d::CCActionManager");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCActionManager), "cocos2d::CCActionManager");
 tolua_usertype(tolua_S,"CCDictionary<std::string,cocos2d::CCSpriteFrame*>");
 Mtolua_typeid(tolua_S,typeid(CCDictionary<std::string,cocos2d::CCSpriteFrame*>), "CCDictionary<std::string,cocos2d::CCSpriteFrame*>");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionMoveInL");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionMoveInL), "cocos2d::CCTransitionMoveInL");
 tolua_usertype(tolua_S,"cocos2d::CCScheduler");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCScheduler), "cocos2d::CCScheduler");
 tolua_usertype(tolua_S,"cocos2d::CCAction");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAction), "cocos2d::CCAction");
 tolua_usertype(tolua_S,"GLshort");
 Mtolua_typeid(tolua_S,typeid(GLshort), "GLshort");
 tolua_usertype(tolua_S,"cocos2d::CCTintTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTintTo), "cocos2d::CCTintTo");
 tolua_usertype(tolua_S,"cocos2d::ccTouchHandlerHelperData");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccTouchHandlerHelperData), "cocos2d::ccTouchHandlerHelperData");
 tolua_usertype(tolua_S,"cocos2d::CCFadeOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFadeOut), "cocos2d::CCFadeOut");
 tolua_usertype(tolua_S,"cocos2d::CCAccelDeccelAmplitude");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCAccelDeccelAmplitude), "cocos2d::CCAccelDeccelAmplitude");
 tolua_usertype(tolua_S,"cocos2d::CCSkewTo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSkewTo), "cocos2d::CCSkewTo");
 tolua_usertype(tolua_S,"SEL_CallFuncND");
 Mtolua_typeid(tolua_S,typeid(SEL_CallFuncND), "SEL_CallFuncND");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionSceneOriented");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionSceneOriented), "cocos2d::CCTransitionSceneOriented");
 tolua_usertype(tolua_S,"cocos2d::CCCallFuncND");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCCallFuncND), "cocos2d::CCCallFuncND");
 tolua_usertype(tolua_S,"cocos2d::CCTargetedTouchDelegate");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTargetedTouchDelegate), "cocos2d::CCTargetedTouchDelegate");
 tolua_usertype(tolua_S,"cocos2d::CCUserDefault");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCUserDefault), "cocos2d::CCUserDefault");
 tolua_usertype(tolua_S,"cocos2d::CCLiquid");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCLiquid), "cocos2d::CCLiquid");
 tolua_usertype(tolua_S,"cocos2d::CCEaseElasticIn");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseElasticIn), "cocos2d::CCEaseElasticIn");
 tolua_usertype(tolua_S,"cocos2d::CCRGBAProtocol");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCRGBAProtocol), "cocos2d::CCRGBAProtocol");
 tolua_usertype(tolua_S,"cocos2d::CCStopGrid");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCStopGrid), "cocos2d::CCStopGrid");
 tolua_usertype(tolua_S,"cocos2d::CCSpeed");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSpeed), "cocos2d::CCSpeed");
 tolua_usertype(tolua_S,"cocos2d::ccV2F_C4F_T2F");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccV2F_C4F_T2F), "cocos2d::ccV2F_C4F_T2F");
 tolua_usertype(tolua_S,"cocos2d::ccV2F_C4F_T2F_Quad");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccV2F_C4F_T2F_Quad), "cocos2d::ccV2F_C4F_T2F_Quad");
 tolua_usertype(tolua_S,"cocos2d::CCMutableArray<CCSpriteFrame*>");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCMutableArray<CCSpriteFrame*>), "cocos2d::CCMutableArray<CCSpriteFrame*>");
 tolua_usertype(tolua_S,"cocos2d::CCWaves");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCWaves), "cocos2d::CCWaves");
 tolua_usertype(tolua_S,"cocos2d::CCTextFieldTTF");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTextFieldTTF), "cocos2d::CCTextFieldTTF");
 tolua_usertype(tolua_S,"cocos2d::CCFlipY3D");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCFlipY3D), "cocos2d::CCFlipY3D");
 tolua_usertype(tolua_S,"cocos2d::CCEaseInOut");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCEaseInOut), "cocos2d::CCEaseInOut");
 tolua_usertype(tolua_S,"cocos2d::CCTouchDispatcher");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTouchDispatcher), "cocos2d::CCTouchDispatcher");
 tolua_usertype(tolua_S,"std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator");
 Mtolua_typeid(tolua_S,typeid(std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator), "std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator");
 tolua_usertype(tolua_S,"cocos2d::CCTMXLayerInfo");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTMXLayerInfo), "cocos2d::CCTMXLayerInfo");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionSlideInL");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionSlideInL), "cocos2d::CCTransitionSlideInL");
 tolua_usertype(tolua_S,"cocos2d::ccQuad3");
 Mtolua_typeid(tolua_S,typeid(cocos2d::ccQuad3), "cocos2d::ccQuad3");
 tolua_usertype(tolua_S,"cocos2d::CCSpriteBatchNode");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCSpriteBatchNode), "cocos2d::CCSpriteBatchNode");
 tolua_usertype(tolua_S,"std::set<cocos2d::CCObject*>::iterator");
 Mtolua_typeid(tolua_S,typeid(std::set<cocos2d::CCObject*>::iterator), "std::set<cocos2d::CCObject*>::iterator");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionCrossFade");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionCrossFade), "cocos2d::CCTransitionCrossFade");
 tolua_usertype(tolua_S,"cocos2d::CCTransitionPageTurn");
 Mtolua_typeid(tolua_S,typeid(cocos2d::CCTransitionPageTurn), "cocos2d::CCTransitionPageTurn");
}

/* method: new of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_new00
static int tolua_Cocos2d_cocos2d_CCNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCNode* tolua_ret = (cocos2d::CCNode*)  Mtolua_new((cocos2d::CCNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_new00_local
static int tolua_Cocos2d_cocos2d_CCNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCNode* tolua_ret = (cocos2d::CCNode*)  Mtolua_new((cocos2d::CCNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZOrder of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getZOrder00
static int tolua_Cocos2d_cocos2d_CCNode_getZOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getZOrder'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getZOrder();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVertexZ of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getVertexZ00
static int tolua_Cocos2d_cocos2d_CCNode_getVertexZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVertexZ'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getVertexZ();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVertexZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVertexZ of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setVertexZ00
static int tolua_Cocos2d_cocos2d_CCNode_setVertexZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  float var = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVertexZ'", NULL);
#endif
  {
   self->setVertexZ(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVertexZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotation of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getRotation00
static int tolua_Cocos2d_cocos2d_CCNode_getRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotation'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRotation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setRotation00
static int tolua_Cocos2d_cocos2d_CCNode_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  float newRotation = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'", NULL);
#endif
  {
   self->setRotation(newRotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScale of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getScale00
static int tolua_Cocos2d_cocos2d_CCNode_getScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScale'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getScale();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setScale00
static int tolua_Cocos2d_cocos2d_CCNode_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  float scale = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'", NULL);
#endif
  {
   self->setScale(scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScaleX of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getScaleX00
static int tolua_Cocos2d_cocos2d_CCNode_getScaleX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScaleX'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getScaleX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScaleX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScaleX of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setScaleX00
static int tolua_Cocos2d_cocos2d_CCNode_setScaleX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  float newScaleX = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScaleX'", NULL);
#endif
  {
   self->setScaleX(newScaleX);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScaleX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getScaleY of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getScaleY00
static int tolua_Cocos2d_cocos2d_CCNode_getScaleY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getScaleY'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getScaleY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getScaleY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScaleY of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setScaleY00
static int tolua_Cocos2d_cocos2d_CCNode_setScaleY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  float newScaleY = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScaleY'", NULL);
#endif
  {
   self->setScaleY(newScaleY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScaleY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getPosition00
static int tolua_Cocos2d_cocos2d_CCNode_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setPosition00
static int tolua_Cocos2d_cocos2d_CCNode_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint newPosition = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'", NULL);
#endif
  {
   self->setPosition(newPosition);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkewX of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getSkewX00
static int tolua_Cocos2d_cocos2d_CCNode_getSkewX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkewX'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSkewX();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkewX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkewX of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setSkewX00
static int tolua_Cocos2d_cocos2d_CCNode_setSkewX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  float skewX = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkewX'", NULL);
#endif
  {
   self->setSkewX(skewX);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkewX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSkewY of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getSkewY00
static int tolua_Cocos2d_cocos2d_CCNode_getSkewY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSkewY'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSkewY();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSkewY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkewY of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setSkewY00
static int tolua_Cocos2d_cocos2d_CCNode_setSkewY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  float skewY = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkewY'", NULL);
#endif
  {
   self->setSkewY(skewY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkewY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildren of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getChildren00
static int tolua_Cocos2d_cocos2d_CCNode_getChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildren'", NULL);
#endif
  {
   cocos2d::CCMutableArray<CCNode*>* tolua_ret = (cocos2d::CCMutableArray<CCNode*>*)  self->getChildren();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCNode*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCamera of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getCamera00
static int tolua_Cocos2d_cocos2d_CCNode_getCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCamera'", NULL);
#endif
  {
   cocos2d::CCCamera* tolua_ret = (cocos2d::CCCamera*)  self->getCamera();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCamera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGrid of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getGrid00
static int tolua_Cocos2d_cocos2d_CCNode_getGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGrid'", NULL);
#endif
  {
   cocos2d::CCGridBase* tolua_ret = (cocos2d::CCGridBase*)  self->getGrid();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCGridBase");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGrid of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setGrid00
static int tolua_Cocos2d_cocos2d_CCNode_setGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCGridBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCGridBase* pGrid = ((cocos2d::CCGridBase*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGrid'", NULL);
#endif
  {
   self->setGrid(pGrid);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsVisible of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getIsVisible00
static int tolua_Cocos2d_cocos2d_CCNode_getIsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsVisible'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsVisible();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsVisible of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setIsVisible00
static int tolua_Cocos2d_cocos2d_CCNode_setIsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  bool var = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsVisible'", NULL);
#endif
  {
   self->setIsVisible(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnchorPoint of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getAnchorPoint00
static int tolua_Cocos2d_cocos2d_CCNode_getAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnchorPoint'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getAnchorPoint();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setAnchorPoint00
static int tolua_Cocos2d_cocos2d_CCNode_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint point = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnchorPointInPixels of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getAnchorPointInPixels00
static int tolua_Cocos2d_cocos2d_CCNode_getAnchorPointInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnchorPointInPixels'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getAnchorPointInPixels();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnchorPointInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSizeInPixels of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getContentSizeInPixels00
static int tolua_Cocos2d_cocos2d_CCNode_getContentSizeInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSizeInPixels'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getContentSizeInPixels();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSizeInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContentSizeInPixels of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setContentSizeInPixels00
static int tolua_Cocos2d_cocos2d_CCNode_setContentSizeInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize sz = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContentSizeInPixels'", NULL);
#endif
  {
   self->setContentSizeInPixels(sz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContentSizeInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getContentSize00
static int tolua_Cocos2d_cocos2d_CCNode_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getContentSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContentSize of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setContentSize00
static int tolua_Cocos2d_cocos2d_CCNode_setContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize size = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContentSize'", NULL);
#endif
  {
   self->setContentSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsRunning of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getIsRunning00
static int tolua_Cocos2d_cocos2d_CCNode_getIsRunning00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsRunning'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsRunning();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsRunning'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParent of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getParent00
static int tolua_Cocos2d_cocos2d_CCNode_getParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParent'", NULL);
#endif
  {
   cocos2d::CCNode* tolua_ret = (cocos2d::CCNode*)  self->getParent();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParent of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setParent00
static int tolua_Cocos2d_cocos2d_CCNode_setParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* var = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParent'", NULL);
#endif
  {
   self->setParent(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsRelativeAnchorPoint of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getIsRelativeAnchorPoint00
static int tolua_Cocos2d_cocos2d_CCNode_getIsRelativeAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsRelativeAnchorPoint'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsRelativeAnchorPoint();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsRelativeAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsRelativeAnchorPoint of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setIsRelativeAnchorPoint00
static int tolua_Cocos2d_cocos2d_CCNode_setIsRelativeAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  bool newValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsRelativeAnchorPoint'", NULL);
#endif
  {
   self->setIsRelativeAnchorPoint(newValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsRelativeAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTag of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getTag00
static int tolua_Cocos2d_cocos2d_CCNode_getTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTag'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getTag();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTag of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setTag00
static int tolua_Cocos2d_cocos2d_CCNode_setTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  int var = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTag'", NULL);
#endif
  {
   self->setTag(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUserData of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getUserData00
static int tolua_Cocos2d_cocos2d_CCNode_getUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUserData'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->getUserData();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUserData of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_setUserData00
static int tolua_Cocos2d_cocos2d_CCNode_setUserData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  void* var = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUserData'", NULL);
#endif
  {
   self->setUserData(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUserData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_onEnter00
static int tolua_Cocos2d_cocos2d_CCNode_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnterTransitionDidFinish of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_onEnterTransitionDidFinish00
static int tolua_Cocos2d_cocos2d_CCNode_onEnterTransitionDidFinish00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnterTransitionDidFinish'", NULL);
#endif
  {
   self->onEnterTransitionDidFinish();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnterTransitionDidFinish'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_onExit00
static int tolua_Cocos2d_cocos2d_CCNode_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_addChild00
static int tolua_Cocos2d_cocos2d_CCNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_addChild01
static int tolua_Cocos2d_cocos2d_CCNode_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCNode_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_addChild02
static int tolua_Cocos2d_cocos2d_CCNode_addChild02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCNode_addChild01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_removeChild00
static int tolua_Cocos2d_cocos2d_CCNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child,cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildrenWithCleanup of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_removeAllChildrenWithCleanup00
static int tolua_Cocos2d_cocos2d_CCNode_removeAllChildrenWithCleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildrenWithCleanup'", NULL);
#endif
  {
   self->removeAllChildrenWithCleanup(cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildrenWithCleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reorderChild of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_reorderChild00
static int tolua_Cocos2d_cocos2d_CCNode_reorderChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reorderChild'", NULL);
#endif
  {
   self->reorderChild(child,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reorderChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cleanup of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_cleanup00
static int tolua_Cocos2d_cocos2d_CCNode_cleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cleanup'", NULL);
#endif
  {
   self->cleanup();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_draw00
static int tolua_Cocos2d_cocos2d_CCNode_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_visit00
static int tolua_Cocos2d_cocos2d_CCNode_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectorProtocolRetain of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_selectorProtocolRetain00
static int tolua_Cocos2d_cocos2d_CCNode_selectorProtocolRetain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectorProtocolRetain'", NULL);
#endif
  {
   self->selectorProtocolRetain();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectorProtocolRetain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectorProtocolRelease of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_selectorProtocolRelease00
static int tolua_Cocos2d_cocos2d_CCNode_selectorProtocolRelease00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectorProtocolRelease'", NULL);
#endif
  {
   self->selectorProtocolRelease();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectorProtocolRelease'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCNode_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToLabelProtocol of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_convertToLabelProtocol00
static int tolua_Cocos2d_cocos2d_CCNode_convertToLabelProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToLabelProtocol'", NULL);
#endif
  {
   cocos2d::CCLabelProtocol* tolua_ret = (cocos2d::CCLabelProtocol*)  self->convertToLabelProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToLabelProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transform of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_transform00
static int tolua_Cocos2d_cocos2d_CCNode_transform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transform'", NULL);
#endif
  {
   self->transform();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformAncestors of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_transformAncestors00
static int tolua_Cocos2d_cocos2d_CCNode_transformAncestors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transformAncestors'", NULL);
#endif
  {
   self->transformAncestors();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformAncestors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: boundingBox of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_boundingBox00
static int tolua_Cocos2d_cocos2d_CCNode_boundingBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'boundingBox'", NULL);
#endif
  {
   cocos2d::CCRect tolua_ret = (cocos2d::CCRect)  self->boundingBox();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'boundingBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: runAction of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_runAction00
static int tolua_Cocos2d_cocos2d_CCNode_runAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAction* action = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'runAction'", NULL);
#endif
  {
   cocos2d::CCAction* tolua_ret = (cocos2d::CCAction*)  self->runAction(action);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'runAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopAllActions of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_stopAllActions00
static int tolua_Cocos2d_cocos2d_CCNode_stopAllActions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopAllActions'", NULL);
#endif
  {
   self->stopAllActions();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopAllActions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopAction of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_stopAction00
static int tolua_Cocos2d_cocos2d_CCNode_stopAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAction* action = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopAction'", NULL);
#endif
  {
   self->stopAction(action);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopActionByTag of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_stopActionByTag00
static int tolua_Cocos2d_cocos2d_CCNode_stopActionByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopActionByTag'", NULL);
#endif
  {
   self->stopActionByTag(tag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopActionByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActionByTag of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getActionByTag00
static int tolua_Cocos2d_cocos2d_CCNode_getActionByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActionByTag'", NULL);
#endif
  {
   cocos2d::CCAction* tolua_ret = (cocos2d::CCAction*)  self->getActionByTag(tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActionByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: description of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_description00
static int tolua_Cocos2d_cocos2d_CCNode_description00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'description'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->description();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'description'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getChildByTag of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_getChildByTag00
static int tolua_Cocos2d_cocos2d_CCNode_getChildByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getChildByTag'", NULL);
#endif
  {
   cocos2d::CCNode* tolua_ret = (cocos2d::CCNode*)  self->getChildByTag(tag);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getChildByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: numberOfRunningActions of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_numberOfRunningActions00
static int tolua_Cocos2d_cocos2d_CCNode_numberOfRunningActions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'numberOfRunningActions'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->numberOfRunningActions();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'numberOfRunningActions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scheduleUpdate of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_scheduleUpdate00
static int tolua_Cocos2d_cocos2d_CCNode_scheduleUpdate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scheduleUpdate'", NULL);
#endif
  {
   self->scheduleUpdate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scheduleUpdate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scheduleUpdateWithPriority of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_scheduleUpdateWithPriority00
static int tolua_Cocos2d_cocos2d_CCNode_scheduleUpdateWithPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  int priority = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scheduleUpdateWithPriority'", NULL);
#endif
  {
   self->scheduleUpdateWithPriority(priority);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scheduleUpdateWithPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unscheduleUpdate of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_unscheduleUpdate00
static int tolua_Cocos2d_cocos2d_CCNode_unscheduleUpdate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unscheduleUpdate'", NULL);
#endif
  {
   self->unscheduleUpdate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unscheduleUpdate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unscheduleAllSelectors of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_unscheduleAllSelectors00
static int tolua_Cocos2d_cocos2d_CCNode_unscheduleAllSelectors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unscheduleAllSelectors'", NULL);
#endif
  {
   self->unscheduleAllSelectors();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unscheduleAllSelectors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resumeSchedulerAndActions of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_resumeSchedulerAndActions00
static int tolua_Cocos2d_cocos2d_CCNode_resumeSchedulerAndActions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resumeSchedulerAndActions'", NULL);
#endif
  {
   self->resumeSchedulerAndActions();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resumeSchedulerAndActions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pauseSchedulerAndActions of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_pauseSchedulerAndActions00
static int tolua_Cocos2d_cocos2d_CCNode_pauseSchedulerAndActions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pauseSchedulerAndActions'", NULL);
#endif
  {
   self->pauseSchedulerAndActions();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pauseSchedulerAndActions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeToParentTransform of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_nodeToParentTransform00
static int tolua_Cocos2d_cocos2d_CCNode_nodeToParentTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nodeToParentTransform'", NULL);
#endif
  {
   CCAffineTransform tolua_ret = (CCAffineTransform)  self->nodeToParentTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCAffineTransform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCAffineTransform));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeToParentTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: parentToNodeTransform of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_parentToNodeTransform00
static int tolua_Cocos2d_cocos2d_CCNode_parentToNodeTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'parentToNodeTransform'", NULL);
#endif
  {
   CCAffineTransform tolua_ret = (CCAffineTransform)  self->parentToNodeTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCAffineTransform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCAffineTransform));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'parentToNodeTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: nodeToWorldTransform of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_nodeToWorldTransform00
static int tolua_Cocos2d_cocos2d_CCNode_nodeToWorldTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'nodeToWorldTransform'", NULL);
#endif
  {
   CCAffineTransform tolua_ret = (CCAffineTransform)  self->nodeToWorldTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCAffineTransform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCAffineTransform));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'nodeToWorldTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: worldToNodeTransform of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_worldToNodeTransform00
static int tolua_Cocos2d_cocos2d_CCNode_worldToNodeTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'worldToNodeTransform'", NULL);
#endif
  {
   CCAffineTransform tolua_ret = (CCAffineTransform)  self->worldToNodeTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((CCAffineTransform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(CCAffineTransform));
     tolua_pushusertype(tolua_S,tolua_obj,"CCAffineTransform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'worldToNodeTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToNodeSpace of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_convertToNodeSpace00
static int tolua_Cocos2d_cocos2d_CCNode_convertToNodeSpace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint worldPoint = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToNodeSpace'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->convertToNodeSpace(worldPoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToNodeSpace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToWorldSpace of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_convertToWorldSpace00
static int tolua_Cocos2d_cocos2d_CCNode_convertToWorldSpace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint nodePoint = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToWorldSpace'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->convertToWorldSpace(nodePoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToWorldSpace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToNodeSpaceAR of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_convertToNodeSpaceAR00
static int tolua_Cocos2d_cocos2d_CCNode_convertToNodeSpaceAR00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint worldPoint = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToNodeSpaceAR'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->convertToNodeSpaceAR(worldPoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToNodeSpaceAR'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToWorldSpaceAR of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_convertToWorldSpaceAR00
static int tolua_Cocos2d_cocos2d_CCNode_convertToWorldSpaceAR00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint nodePoint = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToWorldSpaceAR'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->convertToWorldSpaceAR(nodePoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToWorldSpaceAR'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertTouchToNodeSpace of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_convertTouchToNodeSpace00
static int tolua_Cocos2d_cocos2d_CCNode_convertTouchToNodeSpace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* touch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertTouchToNodeSpace'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->convertTouchToNodeSpace(touch);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertTouchToNodeSpace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertTouchToNodeSpaceAR of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_convertTouchToNodeSpaceAR00
static int tolua_Cocos2d_cocos2d_CCNode_convertTouchToNodeSpaceAR00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* touch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertTouchToNodeSpaceAR'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->convertTouchToNodeSpaceAR(touch);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertTouchToNodeSpaceAR'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeFromParentAndCleanup of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_removeFromParentAndCleanup00
static int tolua_Cocos2d_cocos2d_CCNode_removeFromParentAndCleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeFromParentAndCleanup'", NULL);
#endif
  {
   self->removeFromParentAndCleanup(cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeFromParentAndCleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChildByTag of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_removeChildByTag00
static int tolua_Cocos2d_cocos2d_CCNode_removeChildByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChildByTag'", NULL);
#endif
  {
   self->removeChildByTag(tag,cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChildByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCNode_node00
static int tolua_Cocos2d_cocos2d_CCNode_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCNode* tolua_ret = (cocos2d::CCNode*)  cocos2d::CCNode::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __SelectorProtocol__ of class  cocos2d::CCNode */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCNode___SelectorProtocol__
static int tolua_get_cocos2d__CCNode___SelectorProtocol__(lua_State* tolua_S)
{
  cocos2d::CCNode* self = (cocos2d::CCNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__SelectorProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::SelectorProtocol*>(self), "cocos2d::SelectorProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::SelectorProtocol*)self), "cocos2d::SelectorProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCCopying */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCopying_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCCopying_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCopying",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCopying* self = (cocos2d::CCCopying*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_new00
static int tolua_Cocos2d_cocos2d_CCObject_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  Mtolua_new((cocos2d::CCObject)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_new00_local
static int tolua_Cocos2d_cocos2d_CCObject_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  Mtolua_new((cocos2d::CCObject)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_delete00
static int tolua_Cocos2d_cocos2d_CCObject_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCObject* self = (cocos2d::CCObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: release of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_release00
static int tolua_Cocos2d_cocos2d_CCObject_release00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCObject* self = (cocos2d::CCObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'release'", NULL);
#endif
  {
   self->release();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'release'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: retain of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_retain00
static int tolua_Cocos2d_cocos2d_CCObject_retain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCObject* self = (cocos2d::CCObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'retain'", NULL);
#endif
  {
   self->retain();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'retain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: autorelease of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_autorelease00
static int tolua_Cocos2d_cocos2d_CCObject_autorelease00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCObject* self = (cocos2d::CCObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'autorelease'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->autorelease();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'autorelease'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_copy00
static int tolua_Cocos2d_cocos2d_CCObject_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCObject* self = (cocos2d::CCObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copy();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSingleRefrence of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_isSingleRefrence00
static int tolua_Cocos2d_cocos2d_CCObject_isSingleRefrence00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCObject* self = (cocos2d::CCObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSingleRefrence'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSingleRefrence();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSingleRefrence'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: retainCount of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_retainCount00
static int tolua_Cocos2d_cocos2d_CCObject_retainCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCObject* self = (cocos2d::CCObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'retainCount'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->retainCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'retainCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEqual of class  cocos2d::CCObject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCObject_isEqual00
static int tolua_Cocos2d_cocos2d_CCObject_isEqual00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCObject* self = (cocos2d::CCObject*)  tolua_tousertype(tolua_S,1,0);
  const cocos2d::CCObject* pObject = ((const cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEqual'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEqual(pObject);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEqual'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParallaxArray of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_getParallaxArray00
static int tolua_Cocos2d_cocos2d_CCParallaxNode_getParallaxArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParallaxArray'", NULL);
#endif
  {
   struct cocos2d::_ccArray* tolua_ret = (struct cocos2d::_ccArray*)  self->getParallaxArray();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::_ccArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParallaxArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParallaxArray of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_setParallaxArray00
static int tolua_Cocos2d_cocos2d_CCParallaxNode_setParallaxArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::_ccArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
  struct cocos2d::_ccArray* pval = ((struct cocos2d::_ccArray*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParallaxArray'", NULL);
#endif
  {
   self->setParallaxArray(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParallaxArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_new00
static int tolua_Cocos2d_cocos2d_CCParallaxNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParallaxNode* tolua_ret = (cocos2d::CCParallaxNode*)  Mtolua_new((cocos2d::CCParallaxNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParallaxNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_new00_local
static int tolua_Cocos2d_cocos2d_CCParallaxNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParallaxNode* tolua_ret = (cocos2d::CCParallaxNode*)  Mtolua_new((cocos2d::CCParallaxNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParallaxNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_delete00
static int tolua_Cocos2d_cocos2d_CCParallaxNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_node00
static int tolua_Cocos2d_cocos2d_CCParallaxNode_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParallaxNode* tolua_ret = (cocos2d::CCParallaxNode*)  cocos2d::CCParallaxNode::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParallaxNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_addChild00
static int tolua_Cocos2d_cocos2d_CCParallaxNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  unsigned int z = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  cocos2d::CCPoint parallaxRatio = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,4,0));
  cocos2d::CCPoint positionOffset = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,z,parallaxRatio,positionOffset);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_addChild01
static int tolua_Cocos2d_cocos2d_CCParallaxNode_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  unsigned int zOrder = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCParallaxNode_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_removeChild00
static int tolua_Cocos2d_cocos2d_CCParallaxNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child,cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildrenWithCleanup of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_removeAllChildrenWithCleanup00
static int tolua_Cocos2d_cocos2d_CCParallaxNode_removeAllChildrenWithCleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildrenWithCleanup'", NULL);
#endif
  {
   self->removeAllChildrenWithCleanup(cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildrenWithCleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_visit00
static int tolua_Cocos2d_cocos2d_CCParallaxNode_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParallaxArray of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_getParallaxArray01
static int tolua_Cocos2d_cocos2d_CCParallaxNode_getParallaxArray01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParallaxArray'", NULL);
#endif
  {
   struct cocos2d::_ccArray* tolua_ret = (struct cocos2d::_ccArray*)  self->getParallaxArray();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::_ccArray");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCParallaxNode_getParallaxArray00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParallaxArray of class  cocos2d::CCParallaxNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParallaxNode_setParallaxArray01
static int tolua_Cocos2d_cocos2d_CCParallaxNode_setParallaxArray01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParallaxNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::_ccArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCParallaxNode* self = (cocos2d::CCParallaxNode*)  tolua_tousertype(tolua_S,1,0);
  struct cocos2d::_ccArray* val = ((struct cocos2d::_ccArray*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParallaxArray'", NULL);
#endif
  {
   self->setParallaxArray(val);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCParallaxNode_setParallaxArray00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpNeg */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpNeg00
static int tolua_Cocos2d_cocos2d_ccpNeg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpNeg(*v);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpNeg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpAdd */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpAdd00
static int tolua_Cocos2d_cocos2d_ccpAdd00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* v2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpAdd(*v1,*v2);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpAdd'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpSub */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpSub00
static int tolua_Cocos2d_cocos2d_ccpSub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* v2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpSub(*v1,*v2);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpSub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpMult */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpMult00
static int tolua_Cocos2d_cocos2d_ccpMult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CGFloat s = ((const cocos2d::CGFloat)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpMult(*v,s);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpMult'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpMidpoint */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpMidpoint00
static int tolua_Cocos2d_cocos2d_ccpMidpoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* v2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpMidpoint(*v1,*v2);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpMidpoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpDot */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpDot00
static int tolua_Cocos2d_cocos2d_ccpDot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* v2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CGFloat tolua_ret = (cocos2d::CGFloat)  cocos2d::ccpDot(*v1,*v2);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpDot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpCross */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpCross00
static int tolua_Cocos2d_cocos2d_ccpCross00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* v2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CGFloat tolua_ret = (cocos2d::CGFloat)  cocos2d::ccpCross(*v1,*v2);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpCross'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpPerp */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpPerp00
static int tolua_Cocos2d_cocos2d_ccpPerp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpPerp(*v);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpPerp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpRPerp */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpRPerp00
static int tolua_Cocos2d_cocos2d_ccpRPerp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpRPerp(*v);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpRPerp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpProject */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpProject00
static int tolua_Cocos2d_cocos2d_ccpProject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* v2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpProject(*v1,*v2);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpProject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpRotate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpRotate00
static int tolua_Cocos2d_cocos2d_ccpRotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* v2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpRotate(*v1,*v2);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpRotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpUnrotate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpUnrotate00
static int tolua_Cocos2d_cocos2d_ccpUnrotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* v2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpUnrotate(*v1,*v2);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpUnrotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpLengthSQ */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpLengthSQ00
static int tolua_Cocos2d_cocos2d_ccpLengthSQ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::CGFloat tolua_ret = (cocos2d::CGFloat)  cocos2d::ccpLengthSQ(*v);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpLengthSQ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpLength */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpLength00
static int tolua_Cocos2d_cocos2d_ccpLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::CGFloat tolua_ret = (cocos2d::CGFloat)  cocos2d::ccpLength(*v);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpDistance */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpDistance00
static int tolua_Cocos2d_cocos2d_ccpDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* v2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CGFloat tolua_ret = (cocos2d::CGFloat)  cocos2d::ccpDistance(*v1,*v2);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpNormalize */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpNormalize00
static int tolua_Cocos2d_cocos2d_ccpNormalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpNormalize(*v);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpNormalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpForAngle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpForAngle00
static int tolua_Cocos2d_cocos2d_ccpForAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CGFloat a = ((const cocos2d::CGFloat)  tolua_tonumber(tolua_S,1,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpForAngle(a);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpForAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpToAngle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpToAngle00
static int tolua_Cocos2d_cocos2d_ccpToAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::CGFloat tolua_ret = (cocos2d::CGFloat)  cocos2d::ccpToAngle(*v);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpToAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::clampf */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_clampf00
static int tolua_Cocos2d_cocos2d_clampf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float value = ((float)  tolua_tonumber(tolua_S,1,0));
  float min_inclusive = ((float)  tolua_tonumber(tolua_S,2,0));
  float max_inclusive = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   float tolua_ret = (float)  cocos2d::clampf(value,min_inclusive,max_inclusive);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clampf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpClamp */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpClamp00
static int tolua_Cocos2d_cocos2d_ccpClamp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* p = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* from = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCPoint* to = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpClamp(*p,*from,*to);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpClamp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpFromSize */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpFromSize00
static int tolua_Cocos2d_cocos2d_ccpFromSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCSize* s = ((const cocos2d::CCSize*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpFromSize(*s);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpFromSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpLerp */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpLerp00
static int tolua_Cocos2d_cocos2d_ccpLerp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* a = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* b = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float alpha = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpLerp(*a,*b,alpha);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpLerp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpFuzzyEqual */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpFuzzyEqual00
static int tolua_Cocos2d_cocos2d_ccpFuzzyEqual00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* a = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* b = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float variance = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  cocos2d::ccpFuzzyEqual(*a,*b,variance);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpFuzzyEqual'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpCompMult */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpCompMult00
static int tolua_Cocos2d_cocos2d_ccpCompMult00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* a = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* b = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpCompMult(*a,*b);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpCompMult'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpAngleSigned */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpAngleSigned00
static int tolua_Cocos2d_cocos2d_ccpAngleSigned00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* a = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* b = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   float tolua_ret = (float)  cocos2d::ccpAngleSigned(*a,*b);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpAngleSigned'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpAngle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpAngle00
static int tolua_Cocos2d_cocos2d_ccpAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* a = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* b = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   float tolua_ret = (float)  cocos2d::ccpAngle(*a,*b);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpRotateByAngle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpRotateByAngle00
static int tolua_Cocos2d_cocos2d_ccpRotateByAngle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* v = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* pivot = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float angle = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpRotateByAngle(*v,*pivot,angle);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpRotateByAngle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpLineIntersect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpLineIntersect00
static int tolua_Cocos2d_cocos2d_ccpLineIntersect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* p1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* p2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCPoint* p3 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  const cocos2d::CCPoint* p4 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,4,0));
  float s = ((float)  tolua_tonumber(tolua_S,5,0));
  float t = ((float)  tolua_tonumber(tolua_S,6,0));
  {
   bool tolua_ret = (bool)  cocos2d::ccpLineIntersect(*p1,*p2,*p3,*p4,&s,&t);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)s);
   tolua_pushnumber(tolua_S,(lua_Number)t);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpLineIntersect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpSegmentIntersect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpSegmentIntersect00
static int tolua_Cocos2d_cocos2d_ccpSegmentIntersect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* A = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* B = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCPoint* C = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  const cocos2d::CCPoint* D = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,4,0));
  {
   bool tolua_ret = (bool)  cocos2d::ccpSegmentIntersect(*A,*B,*C,*D);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpSegmentIntersect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccpIntersectPoint */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccpIntersectPoint00
static int tolua_Cocos2d_cocos2d_ccpIntersectPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* A = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  const cocos2d::CCPoint* B = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCPoint* C = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  const cocos2d::CCPoint* D = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,4,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::ccpIntersectPoint(*A,*B,*C,*D);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccpIntersectPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_delete00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getType of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_getType00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_getType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getType'", NULL);
#endif
  {
   cocos2d::CCProgressTimerType tolua_ret = (cocos2d::CCProgressTimerType)  self->getType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPercentage of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_getPercentage00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_getPercentage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPercentage'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getPercentage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPercentage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSprite of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_getSprite00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_getSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSprite'", NULL);
#endif
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  self->getSprite();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_initWithFile00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_initWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFileName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(pszFileName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTexture of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_initWithTexture00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_initWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* pTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTexture'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTexture(pTexture);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPercentage of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_setPercentage00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_setPercentage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
  float fPercentage = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPercentage'", NULL);
#endif
  {
   self->setPercentage(fPercentage);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPercentage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSprite of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_setSprite00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_setSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSprite* pSprite = ((cocos2d::CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSprite'", NULL);
#endif
  {
   self->setSprite(pSprite);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setType of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_setType00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_setType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCProgressTimerType type = ((cocos2d::CCProgressTimerType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setType'", NULL);
#endif
  {
   self->setType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_draw00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTimer* self = (cocos2d::CCProgressTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: progressWithFile of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_progressWithFile00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_progressWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszFileName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCProgressTimer* tolua_ret = (cocos2d::CCProgressTimer*)  cocos2d::CCProgressTimer::progressWithFile(pszFileName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCProgressTimer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'progressWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: progressWithTexture of class  cocos2d::CCProgressTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTimer_progressWithTexture00
static int tolua_Cocos2d_cocos2d_CCProgressTimer_progressWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCProgressTimer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* pTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCProgressTimer* tolua_ret = (cocos2d::CCProgressTimer*)  cocos2d::CCProgressTimer::progressWithTexture(pTexture);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCProgressTimer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'progressWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSprite of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_getSprite00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_getSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSprite'", NULL);
#endif
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  self->getSprite();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSprite of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_setSprite00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_setSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSprite* psprite = ((cocos2d::CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSprite'", NULL);
#endif
  {
   self->setSprite(psprite);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_new00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRenderTexture* tolua_ret = (cocos2d::CCRenderTexture*)  Mtolua_new((cocos2d::CCRenderTexture)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRenderTexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_new00_local
static int tolua_Cocos2d_cocos2d_CCRenderTexture_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRenderTexture* tolua_ret = (cocos2d::CCRenderTexture*)  Mtolua_new((cocos2d::CCRenderTexture)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRenderTexture");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_delete00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: renderTextureWithWidthAndHeight of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_renderTextureWithWidthAndHeight00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_renderTextureWithWidthAndHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
  cocos2d::CCTexture2DPixelFormat eFormat = ((cocos2d::CCTexture2DPixelFormat) (int)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCRenderTexture* tolua_ret = (cocos2d::CCRenderTexture*)  cocos2d::CCRenderTexture::renderTextureWithWidthAndHeight(w,h,eFormat);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRenderTexture");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'renderTextureWithWidthAndHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: renderTextureWithWidthAndHeight of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_renderTextureWithWidthAndHeight01
static int tolua_Cocos2d_cocos2d_CCRenderTexture_renderTextureWithWidthAndHeight01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCRenderTexture* tolua_ret = (cocos2d::CCRenderTexture*)  cocos2d::CCRenderTexture::renderTextureWithWidthAndHeight(w,h);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRenderTexture");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCRenderTexture_renderTextureWithWidthAndHeight00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithWidthAndHeight of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_initWithWidthAndHeight00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_initWithWidthAndHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
  int w = ((int)  tolua_tonumber(tolua_S,2,0));
  int h = ((int)  tolua_tonumber(tolua_S,3,0));
  cocos2d::CCTexture2DPixelFormat eFormat = ((cocos2d::CCTexture2DPixelFormat) (int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithWidthAndHeight'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithWidthAndHeight(w,h,eFormat);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithWidthAndHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: begin of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_begin00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_begin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'begin'", NULL);
#endif
  {
   self->begin();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'begin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: beginWithClear of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_beginWithClear00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_beginWithClear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
  float r = ((float)  tolua_tonumber(tolua_S,2,0));
  float g = ((float)  tolua_tonumber(tolua_S,3,0));
  float b = ((float)  tolua_tonumber(tolua_S,4,0));
  float a = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'beginWithClear'", NULL);
#endif
  {
   self->beginWithClear(r,g,b,a);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'beginWithClear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endToLua of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_endToLua00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_endToLua00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endToLua'", NULL);
#endif
  {
   self->endToLua();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endToLua'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_clear00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
  float r = ((float)  tolua_tonumber(tolua_S,2,0));
  float g = ((float)  tolua_tonumber(tolua_S,3,0));
  float b = ((float)  tolua_tonumber(tolua_S,4,0));
  float a = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
  {
   self->clear(r,g,b,a);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: saveBuffer of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_saveBuffer00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_saveBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'saveBuffer'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->saveBuffer(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'saveBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: saveBuffer of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_saveBuffer01
static int tolua_Cocos2d_cocos2d_CCRenderTexture_saveBuffer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
  int format = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'saveBuffer'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->saveBuffer(name,format);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCRenderTexture_saveBuffer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUIImageAsDataFromBuffer of class  cocos2d::CCRenderTexture */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRenderTexture_getUIImageAsDataFromBuffer00
static int tolua_Cocos2d_cocos2d_CCRenderTexture_getUIImageAsDataFromBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRenderTexture",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRenderTexture* self = (cocos2d::CCRenderTexture*)  tolua_tousertype(tolua_S,1,0);
  int format = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUIImageAsDataFromBuffer'", NULL);
#endif
  {
   CCData* tolua_ret = (CCData*)  self->getUIImageAsDataFromBuffer(format);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUIImageAsDataFromBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_new00
static int tolua_Cocos2d_cocos2d_CCRibbon_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRibbon* tolua_ret = (cocos2d::CCRibbon*)  Mtolua_new((cocos2d::CCRibbon)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRibbon");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_new00_local
static int tolua_Cocos2d_cocos2d_CCRibbon_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRibbon* tolua_ret = (cocos2d::CCRibbon*)  Mtolua_new((cocos2d::CCRibbon)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRibbon");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_delete00
static int tolua_Cocos2d_cocos2d_CCRibbon_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_setTexture00
static int tolua_Cocos2d_cocos2d_CCRibbon_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* val = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_getTexture00
static int tolua_Cocos2d_cocos2d_CCRibbon_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureLength of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_getTextureLength00
static int tolua_Cocos2d_cocos2d_CCRibbon_getTextureLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureLength'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTextureLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureLength of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_setTextureLength00
static int tolua_Cocos2d_cocos2d_CCRibbon_setTextureLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureLength'", NULL);
#endif
  {
   self->setTextureLength(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendFunc of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_setBlendFunc00
static int tolua_Cocos2d_cocos2d_CCRibbon_setBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccBlendFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccBlendFunc val = *((cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendFunc'", NULL);
#endif
  {
   self->setBlendFunc(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlendFunc of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_getBlendFunc00
static int tolua_Cocos2d_cocos2d_CCRibbon_getBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlendFunc'", NULL);
#endif
  {
   cocos2d::ccBlendFunc tolua_ret = (cocos2d::ccBlendFunc)  self->getBlendFunc();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccBlendFunc)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccBlendFunc));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_setColor00
static int tolua_Cocos2d_cocos2d_CCRibbon_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor4B val = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_getColor00
static int tolua_Cocos2d_cocos2d_CCRibbon_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   cocos2d::ccColor4B tolua_ret = (cocos2d::ccColor4B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor4B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor4B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor4B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor4B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ribbonWithWidth of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_ribbonWithWidth00
static int tolua_Cocos2d_cocos2d_CCRibbon_ribbonWithWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float w = ((float)  tolua_tonumber(tolua_S,2,0));
  const char* path = ((const char*)  tolua_tostring(tolua_S,3,0));
  float length = ((float)  tolua_tonumber(tolua_S,4,0));
  cocos2d::ccColor4B color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,5,0));
  float fade = ((float)  tolua_tonumber(tolua_S,6,0));
  {
   cocos2d::CCRibbon* tolua_ret = (cocos2d::CCRibbon*)  cocos2d::CCRibbon::ribbonWithWidth(w,path,length,color,fade);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRibbon");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ribbonWithWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithWidth of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_initWithWidth00
static int tolua_Cocos2d_cocos2d_CCRibbon_initWithWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
  float w = ((float)  tolua_tonumber(tolua_S,2,0));
  const char* path = ((const char*)  tolua_tostring(tolua_S,3,0));
  float length = ((float)  tolua_tonumber(tolua_S,4,0));
  cocos2d::ccColor4B color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,5,0));
  float fade = ((float)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithWidth'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithWidth(w,path,length,color,fade);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addPointAt of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_addPointAt00
static int tolua_Cocos2d_cocos2d_CCRibbon_addPointAt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint location = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float width = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addPointAt'", NULL);
#endif
  {
   self->addPointAt(location,width);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addPointAt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_update00
static int tolua_Cocos2d_cocos2d_CCRibbon_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime delta = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(delta);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sideOfLine of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_sideOfLine00
static int tolua_Cocos2d_cocos2d_CCRibbon_sideOfLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint p = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCPoint l1 = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCPoint l2 = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sideOfLine'", NULL);
#endif
  {
   float tolua_ret = (float)  self->sideOfLine(p,l1,l2);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sideOfLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCRibbon */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbon_draw00
static int tolua_Cocos2d_cocos2d_CCRibbon_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbon",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbon* self = (cocos2d::CCRibbon*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCRibbonSegment */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbonSegment_new00
static int tolua_Cocos2d_cocos2d_CCRibbonSegment_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRibbonSegment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRibbonSegment* tolua_ret = (cocos2d::CCRibbonSegment*)  Mtolua_new((cocos2d::CCRibbonSegment)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRibbonSegment");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCRibbonSegment */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbonSegment_new00_local
static int tolua_Cocos2d_cocos2d_CCRibbonSegment_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRibbonSegment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRibbonSegment* tolua_ret = (cocos2d::CCRibbonSegment*)  Mtolua_new((cocos2d::CCRibbonSegment)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRibbonSegment");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCRibbonSegment */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbonSegment_delete00
static int tolua_Cocos2d_cocos2d_CCRibbonSegment_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbonSegment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbonSegment* self = (cocos2d::CCRibbonSegment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: description of class  cocos2d::CCRibbonSegment */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbonSegment_description00
static int tolua_Cocos2d_cocos2d_CCRibbonSegment_description00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbonSegment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbonSegment* self = (cocos2d::CCRibbonSegment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'description'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->description();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'description'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCRibbonSegment */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbonSegment_init00
static int tolua_Cocos2d_cocos2d_CCRibbonSegment_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbonSegment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbonSegment* self = (cocos2d::CCRibbonSegment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reset of class  cocos2d::CCRibbonSegment */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbonSegment_reset00
static int tolua_Cocos2d_cocos2d_CCRibbonSegment_reset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbonSegment",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbonSegment* self = (cocos2d::CCRibbonSegment*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reset'", NULL);
#endif
  {
   self->reset();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCRibbonSegment */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRibbonSegment_draw00
static int tolua_Cocos2d_cocos2d_CCRibbonSegment_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRibbonSegment",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRibbonSegment* self = (cocos2d::CCRibbonSegment*)  tolua_tousertype(tolua_S,1,0);
  float curTime = ((float)  tolua_tonumber(tolua_S,2,0));
  float fadeTime = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccColor4B color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw(curTime,fadeTime,color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScene_new00
static int tolua_Cocos2d_cocos2d_CCScene_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCScene* tolua_ret = (cocos2d::CCScene*)  Mtolua_new((cocos2d::CCScene)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCScene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScene_new00_local
static int tolua_Cocos2d_cocos2d_CCScene_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCScene* tolua_ret = (cocos2d::CCScene*)  Mtolua_new((cocos2d::CCScene)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCScene");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScene_delete00
static int tolua_Cocos2d_cocos2d_CCScene_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScene* self = (cocos2d::CCScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScene_init00
static int tolua_Cocos2d_cocos2d_CCScene_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScene* self = (cocos2d::CCScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScene_node00
static int tolua_Cocos2d_cocos2d_CCScene_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCScene* tolua_ret = (cocos2d::CCScene*)  cocos2d::CCScene::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCScene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSceneType of class  cocos2d::CCScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScene_getSceneType00
static int tolua_Cocos2d_cocos2d_CCScene_getSceneType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScene* self = (cocos2d::CCScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSceneType'", NULL);
#endif
  {
   cocos2d::ccSceneFlag tolua_ret = (cocos2d::ccSceneFlag)  self->getSceneType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSceneType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTimer_new00
static int tolua_Cocos2d_cocos2d_CCTimer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTimer* tolua_ret = (cocos2d::CCTimer*)  Mtolua_new((cocos2d::CCTimer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTimer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTimer_new00_local
static int tolua_Cocos2d_cocos2d_CCTimer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTimer* tolua_ret = (cocos2d::CCTimer*)  Mtolua_new((cocos2d::CCTimer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTimer");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInterval of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTimer_getInterval00
static int tolua_Cocos2d_cocos2d_CCTimer_getInterval00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTimer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTimer* self = (cocos2d::CCTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInterval'", NULL);
#endif
  {
   cocos2d::ccTime tolua_ret = (cocos2d::ccTime)  self->getInterval();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInterval'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInterval of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTimer_setInterval00
static int tolua_Cocos2d_cocos2d_CCTimer_setInterval00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTimer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTimer* self = (cocos2d::CCTimer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime fInterval = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInterval'", NULL);
#endif
  {
   self->setInterval(fInterval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInterval'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTimer_update00
static int tolua_Cocos2d_cocos2d_CCTimer_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTimer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTimer* self = (cocos2d::CCTimer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime dt = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithScriptFuncName of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTimer_initWithScriptFuncName00
static int tolua_Cocos2d_cocos2d_CCTimer_initWithScriptFuncName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTimer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTimer* self = (cocos2d::CCTimer*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFuncName = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::ccTime fSeconds = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithScriptFuncName'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithScriptFuncName(pszFuncName,fSeconds);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithScriptFuncName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithScriptFuncName of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTimer_initWithScriptFuncName01
static int tolua_Cocos2d_cocos2d_CCTimer_initWithScriptFuncName01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTimer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCTimer* self = (cocos2d::CCTimer*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFuncName = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::ccTime fSeconds = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithScriptFuncName'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithScriptFuncName(pszFuncName,fSeconds);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCTimer_initWithScriptFuncName00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_fInterval of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTimer_m_fInterval
static int tolua_get_cocos2d__CCTimer_m_fInterval(lua_State* tolua_S)
{
  cocos2d::CCTimer* self = (cocos2d::CCTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fInterval'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_fInterval);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_fInterval of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCTimer_m_fInterval
static int tolua_set_cocos2d__CCTimer_m_fInterval(lua_State* tolua_S)
{
  cocos2d::CCTimer* self = (cocos2d::CCTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_fInterval'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_fInterval = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_scriptFunc of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTimer_m_scriptFunc
static int tolua_get_cocos2d__CCTimer_m_scriptFunc(lua_State* tolua_S)
{
  cocos2d::CCTimer* self = (cocos2d::CCTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_scriptFunc'",NULL);
#endif
  tolua_pushcppstring(tolua_S,(const char*)self->m_scriptFunc);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_scriptFunc of class  cocos2d::CCTimer */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCTimer_m_scriptFunc
static int tolua_set_cocos2d__CCTimer_m_scriptFunc(lua_State* tolua_S)
{
  cocos2d::CCTimer* self = (cocos2d::CCTimer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_scriptFunc'",NULL);
  if (!tolua_iscppstring(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_scriptFunc = ((std::string)  tolua_tocppstring(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_delete00
static int tolua_Cocos2d_cocos2d_CCScheduler_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTimeScale of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_getTimeScale00
static int tolua_Cocos2d_cocos2d_CCScheduler_getTimeScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTimeScale'", NULL);
#endif
  {
   cocos2d::ccTime tolua_ret = (cocos2d::ccTime)  self->getTimeScale();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTimeScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTimeScale of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_setTimeScale00
static int tolua_Cocos2d_cocos2d_CCScheduler_setTimeScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime fTimeScale = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTimeScale'", NULL);
#endif
  {
   self->setTimeScale(fTimeScale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTimeScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tick of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_tick00
static int tolua_Cocos2d_cocos2d_CCScheduler_tick00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime dt = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tick'", NULL);
#endif
  {
   self->tick(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tick'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scheduleSelector of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_scheduleSelector00
static int tolua_Cocos2d_cocos2d_CCScheduler_scheduleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"SEL_SCHEDULE",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  SEL_SCHEDULE pfnSelector = *((SEL_SCHEDULE*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::SelectorProtocol* pTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::ccTime fInterval = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,4,0));
  bool bPaused = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scheduleSelector'", NULL);
#endif
  {
   self->scheduleSelector(pfnSelector,pTarget,fInterval,bPaused);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scheduleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scheduleScriptFunc of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_scheduleScriptFunc00
static int tolua_Cocos2d_cocos2d_CCScheduler_scheduleScriptFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFuncName = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::ccTime fInterval = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,3,0));
  bool bPaused = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scheduleScriptFunc'", NULL);
#endif
  {
   self->scheduleScriptFunc(pszFuncName,fInterval,bPaused);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scheduleScriptFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unscheduleScriptFunc of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_unscheduleScriptFunc00
static int tolua_Cocos2d_cocos2d_CCScheduler_unscheduleScriptFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFuncName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unscheduleScriptFunc'", NULL);
#endif
  {
   self->unscheduleScriptFunc(pszFuncName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unscheduleScriptFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: scheduleUpdateForTarget of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_scheduleUpdateForTarget00
static int tolua_Cocos2d_cocos2d_CCScheduler_scheduleUpdateForTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  int nPriority = ((int)  tolua_tonumber(tolua_S,3,0));
  bool bPaused = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'scheduleUpdateForTarget'", NULL);
#endif
  {
   self->scheduleUpdateForTarget(pTarget,nPriority,bPaused);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'scheduleUpdateForTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unscheduleSelector of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_unscheduleSelector00
static int tolua_Cocos2d_cocos2d_CCScheduler_unscheduleSelector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"SEL_SCHEDULE",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  SEL_SCHEDULE pfnSelector = *((SEL_SCHEDULE*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::SelectorProtocol* pTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unscheduleSelector'", NULL);
#endif
  {
   self->unscheduleSelector(pfnSelector,pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unscheduleSelector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unscheduleUpdateForTarget of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_unscheduleUpdateForTarget00
static int tolua_Cocos2d_cocos2d_CCScheduler_unscheduleUpdateForTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  const cocos2d::SelectorProtocol* pTarget = ((const cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unscheduleUpdateForTarget'", NULL);
#endif
  {
   self->unscheduleUpdateForTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unscheduleUpdateForTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unscheduleAllSelectorsForTarget of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_unscheduleAllSelectorsForTarget00
static int tolua_Cocos2d_cocos2d_CCScheduler_unscheduleAllSelectorsForTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unscheduleAllSelectorsForTarget'", NULL);
#endif
  {
   self->unscheduleAllSelectorsForTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unscheduleAllSelectorsForTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unscheduleAllSelectors of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_unscheduleAllSelectors00
static int tolua_Cocos2d_cocos2d_CCScheduler_unscheduleAllSelectors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unscheduleAllSelectors'", NULL);
#endif
  {
   self->unscheduleAllSelectors();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unscheduleAllSelectors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pauseTarget of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_pauseTarget00
static int tolua_Cocos2d_cocos2d_CCScheduler_pauseTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pauseTarget'", NULL);
#endif
  {
   self->pauseTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pauseTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resumeTarget of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_resumeTarget00
static int tolua_Cocos2d_cocos2d_CCScheduler_resumeTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resumeTarget'", NULL);
#endif
  {
   self->resumeTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resumeTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTargetPaused of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_isTargetPaused00
static int tolua_Cocos2d_cocos2d_CCScheduler_isTargetPaused00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScheduler* self = (cocos2d::CCScheduler*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTargetPaused'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTargetPaused(pTarget);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTargetPaused'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedScheduler of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_sharedScheduler00
static int tolua_Cocos2d_cocos2d_CCScheduler_sharedScheduler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCScheduler* tolua_ret = (cocos2d::CCScheduler*)  cocos2d::CCScheduler::sharedScheduler();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCScheduler");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedScheduler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeSharedScheduler of class  cocos2d::CCScheduler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScheduler_purgeSharedScheduler00
static int tolua_Cocos2d_cocos2d_CCScheduler_purgeSharedScheduler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCScheduler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCScheduler::purgeSharedScheduler();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeSharedScheduler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_draw00
static int tolua_Cocos2d_cocos2d_CCSprite_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDirty of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_isDirty00
static int tolua_Cocos2d_cocos2d_CCSprite_isDirty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDirty'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDirty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDirty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDirty of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setDirty00
static int tolua_Cocos2d_cocos2d_CCSprite_setDirty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bDirty = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDirty'", NULL);
#endif
  {
   self->setDirty(bDirty);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDirty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getQuad of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getQuad00
static int tolua_Cocos2d_cocos2d_CCSprite_getQuad00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getQuad'", NULL);
#endif
  {
   cocos2d::ccV3F_C4B_T2F_Quad tolua_ret = (cocos2d::ccV3F_C4B_T2F_Quad)  self->getQuad();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccV3F_C4B_T2F_Quad)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccV3F_C4B_T2F_Quad");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccV3F_C4B_T2F_Quad));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccV3F_C4B_T2F_Quad");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getQuad'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isTextureRectRotated of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_isTextureRectRotated00
static int tolua_Cocos2d_cocos2d_CCSprite_isTextureRectRotated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isTextureRectRotated'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isTextureRectRotated();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isTextureRectRotated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAtlasIndex of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getAtlasIndex00
static int tolua_Cocos2d_cocos2d_CCSprite_getAtlasIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAtlasIndex'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getAtlasIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAtlasIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAtlasIndex of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setAtlasIndex00
static int tolua_Cocos2d_cocos2d_CCSprite_setAtlasIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uAtlasIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAtlasIndex'", NULL);
#endif
  {
   self->setAtlasIndex(uAtlasIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAtlasIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureRect of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getTextureRect00
static int tolua_Cocos2d_cocos2d_CCSprite_getTextureRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureRect'", NULL);
#endif
  {
   cocos2d::CCRect tolua_ret = (cocos2d::CCRect)  self->getTextureRect();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isUsesBatchNode of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_isUsesBatchNode00
static int tolua_Cocos2d_cocos2d_CCSprite_isUsesBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isUsesBatchNode'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isUsesBatchNode();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isUsesBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUsesSpriteBatchNode of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setUsesSpriteBatchNode00
static int tolua_Cocos2d_cocos2d_CCSprite_setUsesSpriteBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bUsesSpriteBatchNode = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUsesSpriteBatchNode'", NULL);
#endif
  {
   self->setUsesSpriteBatchNode(bUsesSpriteBatchNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUsesSpriteBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureAtlas of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getTextureAtlas00
static int tolua_Cocos2d_cocos2d_CCSprite_getTextureAtlas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureAtlas'", NULL);
#endif
  {
   cocos2d::CCTextureAtlas* tolua_ret = (cocos2d::CCTextureAtlas*)  self->getTextureAtlas();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextureAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureAtlas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureAtlas of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setTextureAtlas00
static int tolua_Cocos2d_cocos2d_CCSprite_setTextureAtlas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTextureAtlas* pobTextureAtlas = ((cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureAtlas'", NULL);
#endif
  {
   self->setTextureAtlas(pobTextureAtlas);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureAtlas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpriteBatchNode of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getSpriteBatchNode00
static int tolua_Cocos2d_cocos2d_CCSprite_getSpriteBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpriteBatchNode'", NULL);
#endif
  {
   cocos2d::CCSpriteBatchNode* tolua_ret = (cocos2d::CCSpriteBatchNode*)  self->getSpriteBatchNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteBatchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpriteBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpriteBatchNode of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setSpriteBatchNode00
static int tolua_Cocos2d_cocos2d_CCSprite_setSpriteBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteBatchNode* pobSpriteBatchNode = ((cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpriteBatchNode'", NULL);
#endif
  {
   self->setSpriteBatchNode(pobSpriteBatchNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpriteBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHornorParentTransform of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getHornorParentTransform00
static int tolua_Cocos2d_cocos2d_CCSprite_getHornorParentTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHornorParentTransform'", NULL);
#endif
  {
   cocos2d::ccHonorParentTransform tolua_ret = (cocos2d::ccHonorParentTransform)  self->getHornorParentTransform();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHornorParentTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setHornorParentTransform of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setHornorParentTransform00
static int tolua_Cocos2d_cocos2d_CCSprite_setHornorParentTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccHonorParentTransform eHonorParentTransform = ((cocos2d::ccHonorParentTransform) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setHornorParentTransform'", NULL);
#endif
  {
   self->setHornorParentTransform(eHonorParentTransform);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setHornorParentTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOffsetPositionInPixels of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getOffsetPositionInPixels00
static int tolua_Cocos2d_cocos2d_CCSprite_getOffsetPositionInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOffsetPositionInPixels'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getOffsetPositionInPixels();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOffsetPositionInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlendFunc of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getBlendFunc00
static int tolua_Cocos2d_cocos2d_CCSprite_getBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlendFunc'", NULL);
#endif
  {
   cocos2d::ccBlendFunc tolua_ret = (cocos2d::ccBlendFunc)  self->getBlendFunc();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccBlendFunc)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccBlendFunc));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendFunc of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setBlendFunc00
static int tolua_Cocos2d_cocos2d_CCSprite_setBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccBlendFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccBlendFunc blendFunc = *((cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendFunc'", NULL);
#endif
  {
   self->setBlendFunc(blendFunc);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spriteWithTexture of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture00
static int tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* pTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  cocos2d::CCSprite::spriteWithTexture(pTexture);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spriteWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spriteWithTexture of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture01
static int tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCTexture2D* pTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  cocos2d::CCSprite::spriteWithTexture(pTexture,rect);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: spriteWithTexture of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture02
static int tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCTexture2D* pTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCPoint offset = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,4,0));
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  cocos2d::CCSprite::spriteWithTexture(pTexture,rect,offset);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: spriteWithSpriteFrame of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_spriteWithSpriteFrame00
static int tolua_Cocos2d_cocos2d_CCSprite_spriteWithSpriteFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* pSpriteFrame = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  cocos2d::CCSprite::spriteWithSpriteFrame(pSpriteFrame);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spriteWithSpriteFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spriteWithSpriteFrameName of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_spriteWithSpriteFrameName00
static int tolua_Cocos2d_cocos2d_CCSprite_spriteWithSpriteFrameName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszSpriteFrameName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  cocos2d::CCSprite::spriteWithSpriteFrameName(pszSpriteFrameName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spriteWithSpriteFrameName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spriteWithFile of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_spriteWithFile00
static int tolua_Cocos2d_cocos2d_CCSprite_spriteWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszFileName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  cocos2d::CCSprite::spriteWithFile(pszFileName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spriteWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spriteWithFile of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_spriteWithFile01
static int tolua_Cocos2d_cocos2d_CCSprite_spriteWithFile01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* pszFileName = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  cocos2d::CCSprite::spriteWithFile(pszFileName,rect);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSprite_spriteWithFile00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: spriteWithBatchNode of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_spriteWithBatchNode00
static int tolua_Cocos2d_cocos2d_CCSprite_spriteWithBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* batchNode = ((cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  cocos2d::CCSprite::spriteWithBatchNode(batchNode,rect);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spriteWithBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_init00
static int tolua_Cocos2d_cocos2d_CCSprite_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_delete00
static int tolua_Cocos2d_cocos2d_CCSprite_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_new00
static int tolua_Cocos2d_cocos2d_CCSprite_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  Mtolua_new((cocos2d::CCSprite)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_new00_local
static int tolua_Cocos2d_cocos2d_CCSprite_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  Mtolua_new((cocos2d::CCSprite)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_removeChild00
static int tolua_Cocos2d_cocos2d_CCSprite_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pChild = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  bool bCleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(pChild,bCleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildrenWithCleanup of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_removeAllChildrenWithCleanup00
static int tolua_Cocos2d_cocos2d_CCSprite_removeAllChildrenWithCleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bCleanup = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildrenWithCleanup'", NULL);
#endif
  {
   self->removeAllChildrenWithCleanup(bCleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildrenWithCleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reorderChild of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_reorderChild00
static int tolua_Cocos2d_cocos2d_CCSprite_reorderChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pChild = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reorderChild'", NULL);
#endif
  {
   self->reorderChild(pChild,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reorderChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_addChild00
static int tolua_Cocos2d_cocos2d_CCSprite_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pChild = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(pChild);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_addChild01
static int tolua_Cocos2d_cocos2d_CCSprite_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pChild = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(pChild,zOrder);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSprite_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_addChild02
static int tolua_Cocos2d_cocos2d_CCSprite_addChild02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pChild = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(pChild,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSprite_addChild01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDirtyRecursively of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setDirtyRecursively00
static int tolua_Cocos2d_cocos2d_CCSprite_setDirtyRecursively00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDirtyRecursively'", NULL);
#endif
  {
   self->setDirtyRecursively(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDirtyRecursively'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setPosition00
static int tolua_Cocos2d_cocos2d_CCSprite_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'", NULL);
#endif
  {
   self->setPosition(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPositionInPixels of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setPositionInPixels00
static int tolua_Cocos2d_cocos2d_CCSprite_setPositionInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPositionInPixels'", NULL);
#endif
  {
   self->setPositionInPixels(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPositionInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotation of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setRotation00
static int tolua_Cocos2d_cocos2d_CCSprite_setRotation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  float fRotation = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotation'", NULL);
#endif
  {
   self->setRotation(fRotation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkewX of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setSkewX00
static int tolua_Cocos2d_cocos2d_CCSprite_setSkewX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  float sx = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkewX'", NULL);
#endif
  {
   self->setSkewX(sx);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkewX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSkewY of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setSkewY00
static int tolua_Cocos2d_cocos2d_CCSprite_setSkewY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  float sy = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSkewY'", NULL);
#endif
  {
   self->setSkewY(sy);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSkewY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScaleX of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setScaleX00
static int tolua_Cocos2d_cocos2d_CCSprite_setScaleX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  float fScaleX = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScaleX'", NULL);
#endif
  {
   self->setScaleX(fScaleX);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScaleX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScaleY of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setScaleY00
static int tolua_Cocos2d_cocos2d_CCSprite_setScaleY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  float fScaleY = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScaleY'", NULL);
#endif
  {
   self->setScaleY(fScaleY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScaleY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setScale of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setScale00
static int tolua_Cocos2d_cocos2d_CCSprite_setScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  float fScale = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setScale'", NULL);
#endif
  {
   self->setScale(fScale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVertexZ of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setVertexZ00
static int tolua_Cocos2d_cocos2d_CCSprite_setVertexZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  float fVertexZ = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVertexZ'", NULL);
#endif
  {
   self->setVertexZ(fVertexZ);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVertexZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setAnchorPoint00
static int tolua_Cocos2d_cocos2d_CCSprite_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint anchor = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(anchor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsRelativeAnchorPoint of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setIsRelativeAnchorPoint00
static int tolua_Cocos2d_cocos2d_CCSprite_setIsRelativeAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bRelative = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsRelativeAnchorPoint'", NULL);
#endif
  {
   self->setIsRelativeAnchorPoint(bRelative);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsRelativeAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsVisible of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setIsVisible00
static int tolua_Cocos2d_cocos2d_CCSprite_setIsVisible00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bVisible = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsVisible'", NULL);
#endif
  {
   self->setIsVisible(bVisible);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsVisible'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFlipX of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setFlipX00
static int tolua_Cocos2d_cocos2d_CCSprite_setFlipX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bFlipX = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFlipX'", NULL);
#endif
  {
   self->setFlipX(bFlipX);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFlipX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFlipY of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setFlipY00
static int tolua_Cocos2d_cocos2d_CCSprite_setFlipY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bFlipY = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFlipY'", NULL);
#endif
  {
   self->setFlipY(bFlipY);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFlipY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFlipX of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_isFlipX00
static int tolua_Cocos2d_cocos2d_CCSprite_isFlipX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFlipX'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFlipX();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFlipX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFlipY of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_isFlipY00
static int tolua_Cocos2d_cocos2d_CCSprite_isFlipY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFlipY'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFlipY();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFlipY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateColor of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_updateColor00
static int tolua_Cocos2d_cocos2d_CCSprite_updateColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateColor'", NULL);
#endif
  {
   self->updateColor();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getOpacity00
static int tolua_Cocos2d_cocos2d_CCSprite_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   GLubyte tolua_ret = (GLubyte)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setOpacity00
static int tolua_Cocos2d_cocos2d_CCSprite_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  GLubyte opacity = ((GLubyte)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getColor00
static int tolua_Cocos2d_cocos2d_CCSprite_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setColor00
static int tolua_Cocos2d_cocos2d_CCSprite_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B color3 = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(color3);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsOpacityModifyRGB of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setIsOpacityModifyRGB00
static int tolua_Cocos2d_cocos2d_CCSprite_setIsOpacityModifyRGB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsOpacityModifyRGB'", NULL);
#endif
  {
   self->setIsOpacityModifyRGB(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsOpacityModifyRGB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsOpacityModifyRGB of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getIsOpacityModifyRGB00
static int tolua_Cocos2d_cocos2d_CCSprite_getIsOpacityModifyRGB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsOpacityModifyRGB'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsOpacityModifyRGB();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsOpacityModifyRGB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCSprite_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setTexture00
static int tolua_Cocos2d_cocos2d_CCSprite_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* texture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_getTexture00
static int tolua_Cocos2d_cocos2d_CCSprite_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTexture of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_initWithTexture00
static int tolua_Cocos2d_cocos2d_CCSprite_initWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* pTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTexture'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTexture(pTexture);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTexture of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_initWithTexture01
static int tolua_Cocos2d_cocos2d_CCSprite_initWithTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* pTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTexture'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTexture(pTexture,rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSprite_initWithTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSpriteFrame of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_initWithSpriteFrame00
static int tolua_Cocos2d_cocos2d_CCSprite_initWithSpriteFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pSpriteFrame = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSpriteFrame'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSpriteFrame(pSpriteFrame);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSpriteFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSpriteFrameName of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_initWithSpriteFrameName00
static int tolua_Cocos2d_cocos2d_CCSprite_initWithSpriteFrameName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  const char* pszSpriteFrameName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSpriteFrameName'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSpriteFrameName(pszSpriteFrameName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSpriteFrameName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_initWithFile00
static int tolua_Cocos2d_cocos2d_CCSprite_initWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilename = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(pszFilename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_initWithFile01
static int tolua_Cocos2d_cocos2d_CCSprite_initWithFile01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFilename = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(pszFilename,rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSprite_initWithFile00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithBatchNode of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_initWithBatchNode00
static int tolua_Cocos2d_cocos2d_CCSprite_initWithBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteBatchNode* batchNode = ((cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithBatchNode'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithBatchNode(batchNode,rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithBatchNodeRectInPixels of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_initWithBatchNodeRectInPixels00
static int tolua_Cocos2d_cocos2d_CCSprite_initWithBatchNodeRectInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteBatchNode* batchNode = ((cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithBatchNodeRectInPixels'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithBatchNodeRectInPixels(batchNode,rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithBatchNodeRectInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateTransform of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_updateTransform00
static int tolua_Cocos2d_cocos2d_CCSprite_updateTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateTransform'", NULL);
#endif
  {
   self->updateTransform();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: useSelfRender of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_useSelfRender00
static int tolua_Cocos2d_cocos2d_CCSprite_useSelfRender00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useSelfRender'", NULL);
#endif
  {
   self->useSelfRender();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'useSelfRender'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureRect of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setTextureRect00
static int tolua_Cocos2d_cocos2d_CCSprite_setTextureRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureRect'", NULL);
#endif
  {
   self->setTextureRect(rect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureRectInPixels of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setTextureRectInPixels00
static int tolua_Cocos2d_cocos2d_CCSprite_setTextureRectInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  bool rotated = ((bool)  tolua_toboolean(tolua_S,3,0));
  cocos2d::CCSize size = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureRectInPixels'", NULL);
#endif
  {
   self->setTextureRectInPixels(rect,rotated,size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureRectInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: useBatchNode of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_useBatchNode00
static int tolua_Cocos2d_cocos2d_CCSprite_useBatchNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteBatchNode* batchNode = ((cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'useBatchNode'", NULL);
#endif
  {
   self->useBatchNode(batchNode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'useBatchNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDisplayFrame of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setDisplayFrame00
static int tolua_Cocos2d_cocos2d_CCSprite_setDisplayFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pNewFrame = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDisplayFrame'", NULL);
#endif
  {
   self->setDisplayFrame(pNewFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDisplayFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFrameDisplayed of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_isFrameDisplayed00
static int tolua_Cocos2d_cocos2d_CCSprite_isFrameDisplayed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pFrame = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFrameDisplayed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFrameDisplayed(pFrame);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFrameDisplayed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: displayedFrame of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_displayedFrame00
static int tolua_Cocos2d_cocos2d_CCSprite_displayedFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'displayedFrame'", NULL);
#endif
  {
   cocos2d::CCSpriteFrame* tolua_ret = (cocos2d::CCSpriteFrame*)  self->displayedFrame();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'displayedFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDisplayFrameWithAnimationName of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSprite_setDisplayFrameWithAnimationName00
static int tolua_Cocos2d_cocos2d_CCSprite_setDisplayFrameWithAnimationName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
  const char* animationName = ((const char*)  tolua_tostring(tolua_S,2,0));
  int frameIndex = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDisplayFrameWithAnimationName'", NULL);
#endif
  {
   self->setDisplayFrameWithAnimationName(animationName,frameIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDisplayFrameWithAnimationName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTextureProtocol__ of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCSprite___CCTextureProtocol__
static int tolua_get_cocos2d__CCSprite___CCTextureProtocol__(lua_State* tolua_S)
{
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTextureProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCTextureProtocol*>(self), "cocos2d::CCTextureProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCTextureProtocol*)self), "cocos2d::CCTextureProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCRGBAProtocol__ of class  cocos2d::CCSprite */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCSprite___CCRGBAProtocol__
static int tolua_get_cocos2d__CCSprite___CCRGBAProtocol__(lua_State* tolua_S)
{
  cocos2d::CCSprite* self = (cocos2d::CCSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCRGBAProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCRGBAProtocol*>(self), "cocos2d::CCRGBAProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCRGBAProtocol*)self), "cocos2d::CCRGBAProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_delete00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTextureAtlas of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getTextureAtlas00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getTextureAtlas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTextureAtlas'", NULL);
#endif
  {
   cocos2d::CCTextureAtlas* tolua_ret = (cocos2d::CCTextureAtlas*)  self->getTextureAtlas();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextureAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTextureAtlas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTextureAtlas of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_setTextureAtlas00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_setTextureAtlas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTextureAtlas* textureAtlas = ((cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTextureAtlas'", NULL);
#endif
  {
   self->setTextureAtlas(textureAtlas);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTextureAtlas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDescendants of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getDescendants00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getDescendants00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDescendants'", NULL);
#endif
  {
   cocos2d::CCArray* tolua_ret = (cocos2d::CCArray*)  self->getDescendants();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDescendants'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: batchNodeWithTexture of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithTexture00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* tex = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCSpriteBatchNode* tolua_ret = (cocos2d::CCSpriteBatchNode*)  cocos2d::CCSpriteBatchNode::batchNodeWithTexture(tex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteBatchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'batchNodeWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: batchNodeWithTexture of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithTexture01
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCTexture2D* tex = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCSpriteBatchNode* tolua_ret = (cocos2d::CCSpriteBatchNode*)  cocos2d::CCSpriteBatchNode::batchNodeWithTexture(tex,capacity);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteBatchNode");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: batchNodeWithFile of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithFile00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* fileImage = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCSpriteBatchNode* tolua_ret = (cocos2d::CCSpriteBatchNode*)  cocos2d::CCSpriteBatchNode::batchNodeWithFile(fileImage);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteBatchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'batchNodeWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: batchNodeWithFile of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithFile01
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithFile01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* fileImage = ((const char*)  tolua_tostring(tolua_S,2,0));
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCSpriteBatchNode* tolua_ret = (cocos2d::CCSpriteBatchNode*)  cocos2d::CCSpriteBatchNode::batchNodeWithFile(fileImage,capacity);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteBatchNode");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithFile00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTexture of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_initWithTexture00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_initWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* tex = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTexture'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTexture(tex,capacity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_initWithFile00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_initWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  const char* fileImage = ((const char*)  tolua_tostring(tolua_S,2,0));
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(fileImage,capacity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: increaseAtlasCapacity of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_increaseAtlasCapacity00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_increaseAtlasCapacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'increaseAtlasCapacity'", NULL);
#endif
  {
   self->increaseAtlasCapacity();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'increaseAtlasCapacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChildAtIndex of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeChildAtIndex00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeChildAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  bool doCleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChildAtIndex'", NULL);
#endif
  {
   self->removeChildAtIndex(index,doCleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChildAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertChild of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_insertChild00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_insertChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSprite* child = ((cocos2d::CCSprite*)  tolua_tousertype(tolua_S,2,0));
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertChild'", NULL);
#endif
  {
   self->insertChild(child,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeSpriteFromAtlas of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeSpriteFromAtlas00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeSpriteFromAtlas00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSprite* sprite = ((cocos2d::CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeSpriteFromAtlas'", NULL);
#endif
  {
   self->removeSpriteFromAtlas(sprite);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeSpriteFromAtlas'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rebuildIndexInOrder of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_rebuildIndexInOrder00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_rebuildIndexInOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSprite* parent = ((cocos2d::CCSprite*)  tolua_tousertype(tolua_S,2,0));
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rebuildIndexInOrder'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->rebuildIndexInOrder(parent,index);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rebuildIndexInOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: highestAtlasIndexInChild of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_highestAtlasIndexInChild00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_highestAtlasIndexInChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSprite* sprite = ((cocos2d::CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'highestAtlasIndexInChild'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->highestAtlasIndexInChild(sprite);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'highestAtlasIndexInChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: lowestAtlasIndexInChild of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_lowestAtlasIndexInChild00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_lowestAtlasIndexInChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSprite* sprite = ((cocos2d::CCSprite*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'lowestAtlasIndexInChild'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->lowestAtlasIndexInChild(sprite);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'lowestAtlasIndexInChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: atlasIndexForChild of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_atlasIndexForChild00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_atlasIndexForChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSprite* sprite = ((cocos2d::CCSprite*)  tolua_tousertype(tolua_S,2,0));
  int z = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'atlasIndexForChild'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->atlasIndexForChild(sprite,z);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'atlasIndexForChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getTexture00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_setTexture00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* texture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendFunc of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_setBlendFunc00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_setBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccBlendFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccBlendFunc blendFunc = *((cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendFunc'", NULL);
#endif
  {
   self->setBlendFunc(blendFunc);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlendFunc of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getBlendFunc00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlendFunc'", NULL);
#endif
  {
   cocos2d::ccBlendFunc tolua_ret = (cocos2d::ccBlendFunc)  self->getBlendFunc();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccBlendFunc)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccBlendFunc));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: visit of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_visit00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_visit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'visit'", NULL);
#endif
  {
   self->visit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'visit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild01
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild02
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: reorderChild of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_reorderChild00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_reorderChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reorderChild'", NULL);
#endif
  {
   self->reorderChild(child,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reorderChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeChild00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child,cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllChildrenWithCleanup of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeAllChildrenWithCleanup00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeAllChildrenWithCleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllChildrenWithCleanup'", NULL);
#endif
  {
   self->removeAllChildrenWithCleanup(cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllChildrenWithCleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteBatchNode_draw00
static int tolua_Cocos2d_cocos2d_CCSpriteBatchNode_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteBatchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTextureProtocol__ of class  cocos2d::CCSpriteBatchNode */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCSpriteBatchNode___CCTextureProtocol__
static int tolua_get_cocos2d__CCSpriteBatchNode___CCTextureProtocol__(lua_State* tolua_S)
{
  cocos2d::CCSpriteBatchNode* self = (cocos2d::CCSpriteBatchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTextureProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCTextureProtocol*>(self), "cocos2d::CCTextureProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCTextureProtocol*)self), "cocos2d::CCTextureProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRectInPixels of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_getRectInPixels00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_getRectInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRectInPixels'", NULL);
#endif
  {
   cocos2d::CCRect tolua_ret = (cocos2d::CCRect)  self->getRectInPixels();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRectInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRectInPixels of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_setRectInPixels00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_setRectInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCRect rectInPixels = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRectInPixels'", NULL);
#endif
  {
   self->setRectInPixels(rectInPixels);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRectInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isRotated of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_isRotated00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_isRotated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isRotated'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isRotated();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isRotated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotated of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_setRotated00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_setRotated00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
  bool bRotated = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotated'", NULL);
#endif
  {
   self->setRotated(bRotated);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotated'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRect of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_getRect00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_getRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRect'", NULL);
#endif
  {
   cocos2d::CCRect tolua_ret = (cocos2d::CCRect)  self->getRect();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRect of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_setRect00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_setRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRect'", NULL);
#endif
  {
   self->setRect(rect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOffsetInPixels of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_getOffsetInPixels00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_getOffsetInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOffsetInPixels'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getOffsetInPixels();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOffsetInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOffsetInPixels of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_setOffsetInPixels00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_setOffsetInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint offsetInPixels = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOffsetInPixels'", NULL);
#endif
  {
   self->setOffsetInPixels(offsetInPixels);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOffsetInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOriginalSizeInPixels of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_getOriginalSizeInPixels00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_getOriginalSizeInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOriginalSizeInPixels'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getOriginalSizeInPixels();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOriginalSizeInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOriginalSizeInPixels of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_setOriginalSizeInPixels00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_setOriginalSizeInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize sizeInPixels = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOriginalSizeInPixels'", NULL);
#endif
  {
   self->setOriginalSizeInPixels(sizeInPixels);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOriginalSizeInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_getTexture00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_setTexture00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* pobTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(pobTexture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_delete00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: frameWithTexture of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_frameWithTexture00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_frameWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* pobTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCSpriteFrame* tolua_ret = (cocos2d::CCSpriteFrame*)  cocos2d::CCSpriteFrame::frameWithTexture(pobTexture,rect);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'frameWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: frameWithTexture of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_frameWithTexture01
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_frameWithTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCTexture2D* pobTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  bool rotated = ((bool)  tolua_toboolean(tolua_S,4,0));
  cocos2d::CCPoint offset = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,5,0));
  cocos2d::CCSize originalSize = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,6,0));
  {
   cocos2d::CCSpriteFrame* tolua_ret = (cocos2d::CCSpriteFrame*)  cocos2d::CCSpriteFrame::frameWithTexture(pobTexture,rect,rotated,offset,originalSize);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteFrame");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSpriteFrame_frameWithTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTexture of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_initWithTexture00
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_initWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* pobTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTexture'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTexture(pobTexture,rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTexture of class  cocos2d::CCSpriteFrame */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrame_initWithTexture01
static int tolua_Cocos2d_cocos2d_CCSpriteFrame_initWithTexture01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCSpriteFrame* self = (cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* pobTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  bool rotated = ((bool)  tolua_toboolean(tolua_S,4,0));
  cocos2d::CCPoint offset = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,5,0));
  cocos2d::CCSize originalSize = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTexture'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTexture(pobTexture,rect,rotated,offset,originalSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSpriteFrame_initWithTexture00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_init00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_delete00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSpriteFramesWithDictionary of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithDictionary00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithDictionary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary<std::string,cocos2d::CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary<std::string,cocos2d::CCObject*>* pobDictionary = ((CCDictionary<std::string,cocos2d::CCObject*>*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCTexture2D* pobTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSpriteFramesWithDictionary'", NULL);
#endif
  {
   self->addSpriteFramesWithDictionary(pobDictionary,pobTexture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSpriteFramesWithDictionary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSpriteFramesWithFile of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  const char* pszPlist = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSpriteFramesWithFile'", NULL);
#endif
  {
   self->addSpriteFramesWithFile(pszPlist);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSpriteFramesWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSpriteFramesWithFile of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile01
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  const char* plist = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* textureFileName = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSpriteFramesWithFile'", NULL);
#endif
  {
   self->addSpriteFramesWithFile(plist,textureFileName);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSpriteFramesWithFile of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile02
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  const char* pszPlist = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::CCTexture2D* pobTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSpriteFramesWithFile'", NULL);
#endif
  {
   self->addSpriteFramesWithFile(pszPlist,pobTexture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSpriteFrame of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFrame00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pobFrame = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
  const char* pszFrameName = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSpriteFrame'", NULL);
#endif
  {
   self->addSpriteFrame(pobFrame,pszFrameName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSpriteFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeSpriteFrames of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFrames00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeSpriteFrames'", NULL);
#endif
  {
   self->removeSpriteFrames();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeSpriteFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeUnusedSpriteFrames of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeUnusedSpriteFrames00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeUnusedSpriteFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeUnusedSpriteFrames'", NULL);
#endif
  {
   self->removeUnusedSpriteFrames();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeUnusedSpriteFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeSpriteFrameByName of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFrameByName00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFrameByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  const char* pszName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeSpriteFrameByName'", NULL);
#endif
  {
   self->removeSpriteFrameByName(pszName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeSpriteFrameByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeSpriteFramesFromFile of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFramesFromFile00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFramesFromFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  const char* plist = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeSpriteFramesFromFile'", NULL);
#endif
  {
   self->removeSpriteFramesFromFile(plist);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeSpriteFramesFromFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeSpriteFramesFromDictionary of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFramesFromDictionary00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFramesFromDictionary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary<std::string,cocos2d::CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary<std::string,cocos2d::CCSpriteFrame*>* dictionary = ((CCDictionary<std::string,cocos2d::CCSpriteFrame*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeSpriteFramesFromDictionary'", NULL);
#endif
  {
   self->removeSpriteFramesFromDictionary(dictionary);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeSpriteFramesFromDictionary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeSpriteFramesFromTexture of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFramesFromTexture00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFramesFromTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* texture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeSpriteFramesFromTexture'", NULL);
#endif
  {
   self->removeSpriteFramesFromTexture(texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeSpriteFramesFromTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: spriteFrameByName of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_spriteFrameByName00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_spriteFrameByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpriteFrameCache* self = (cocos2d::CCSpriteFrameCache*)  tolua_tousertype(tolua_S,1,0);
  const char* pszName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'spriteFrameByName'", NULL);
#endif
  {
   cocos2d::CCSpriteFrame* tolua_ret = (cocos2d::CCSpriteFrame*)  self->spriteFrameByName(pszName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'spriteFrameByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedSpriteFrameCache of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_sharedSpriteFrameCache00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_sharedSpriteFrameCache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSpriteFrameCache* tolua_ret = (cocos2d::CCSpriteFrameCache*)  cocos2d::CCSpriteFrameCache::sharedSpriteFrameCache();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteFrameCache");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedSpriteFrameCache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeSharedSpriteFrameCache of class  cocos2d::CCSpriteFrameCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpriteFrameCache_purgeSharedSpriteFrameCache00
static int tolua_Cocos2d_cocos2d_CCSpriteFrameCache_purgeSharedSpriteFrameCache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpriteFrameCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSpriteFrameCache::purgeSharedSpriteFrameCache();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeSharedSpriteFrameCache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCString */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCString_new00
static int tolua_Cocos2d_cocos2d_CCString_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCString",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCString* tolua_ret = (cocos2d::CCString*)  Mtolua_new((cocos2d::CCString)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCString");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCString */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCString_new00_local
static int tolua_Cocos2d_cocos2d_CCString_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCString",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCString* tolua_ret = (cocos2d::CCString*)  Mtolua_new((cocos2d::CCString)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCString");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCString */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCString_new01
static int tolua_Cocos2d_cocos2d_CCString_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCString",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCString* tolua_ret = (cocos2d::CCString*)  Mtolua_new((cocos2d::CCString)(str));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCString");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCString_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCString */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCString_new01_local
static int tolua_Cocos2d_cocos2d_CCString_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCString",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCString* tolua_ret = (cocos2d::CCString*)  Mtolua_new((cocos2d::CCString)(str));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCString");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCString_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCString */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCString_delete00
static int tolua_Cocos2d_cocos2d_CCString_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCString",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCString* self = (cocos2d::CCString*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: toInt of class  cocos2d::CCString */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCString_toInt00
static int tolua_Cocos2d_cocos2d_CCString_toInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCString",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCString* self = (cocos2d::CCString*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'toInt'", NULL);
#endif
  {
   int tolua_ret = (int)  self->toInt();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'toInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: toUInt of class  cocos2d::CCString */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCString_toUInt00
static int tolua_Cocos2d_cocos2d_CCString_toUInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCString",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCString* self = (cocos2d::CCString*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'toUInt'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->toUInt();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'toUInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: toFloat of class  cocos2d::CCString */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCString_toFloat00
static int tolua_Cocos2d_cocos2d_CCString_toFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCString",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCString* self = (cocos2d::CCString*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'toFloat'", NULL);
#endif
  {
   float tolua_ret = (float)  self->toFloat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'toFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isEmpty of class  cocos2d::CCString */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCString_isEmpty00
static int tolua_Cocos2d_cocos2d_CCString_isEmpty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCString",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCString* self = (cocos2d::CCString*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isEmpty'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isEmpty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isEmpty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTextFieldAttachWithIME of class  cocos2d::CCTextFieldDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldAttachWithIME00
static int tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldAttachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldDelegate* self = (cocos2d::CCTextFieldDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTextFieldTTF* sender = ((cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTextFieldAttachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTextFieldAttachWithIME(sender);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTextFieldAttachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTextFieldDetachWithIME of class  cocos2d::CCTextFieldDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldDetachWithIME00
static int tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldDetachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldDelegate* self = (cocos2d::CCTextFieldDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTextFieldTTF* sender = ((cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTextFieldDetachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTextFieldDetachWithIME(sender);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTextFieldDetachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTextFieldInsertText of class  cocos2d::CCTextFieldDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldInsertText00
static int tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldInsertText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldDelegate* self = (cocos2d::CCTextFieldDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTextFieldTTF* sender = ((cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,2,0));
  const char* text = ((const char*)  tolua_tostring(tolua_S,3,0));
  int nLen = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTextFieldInsertText'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTextFieldInsertText(sender,text,nLen);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTextFieldInsertText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onTextFieldDeleteBackward of class  cocos2d::CCTextFieldDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldDeleteBackward00
static int tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldDeleteBackward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldDelegate* self = (cocos2d::CCTextFieldDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTextFieldTTF* sender = ((cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,2,0));
  const char* delText = ((const char*)  tolua_tostring(tolua_S,3,0));
  int nLen = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onTextFieldDeleteBackward'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onTextFieldDeleteBackward(sender,delText,nLen);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onTextFieldDeleteBackward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onDraw of class  cocos2d::CCTextFieldDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onDraw00
static int tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onDraw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldDelegate* self = (cocos2d::CCTextFieldDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTextFieldTTF* sender = ((cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onDraw'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->onDraw(sender);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onDraw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_new00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTextFieldTTF* tolua_ret = (cocos2d::CCTextFieldTTF*)  Mtolua_new((cocos2d::CCTextFieldTTF)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextFieldTTF");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_new00_local
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTextFieldTTF* tolua_ret = (cocos2d::CCTextFieldTTF*)  Mtolua_new((cocos2d::CCTextFieldTTF)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextFieldTTF");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_delete00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textFieldWithPlaceHolder of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_textFieldWithPlaceHolder00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_textFieldWithPlaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* placeholder = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::CCSize dimensions = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCTextAlignment alignment = ((cocos2d::CCTextAlignment) (int)  tolua_tonumber(tolua_S,4,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,5,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,6,0));
  {
   cocos2d::CCTextFieldTTF* tolua_ret = (cocos2d::CCTextFieldTTF*)  cocos2d::CCTextFieldTTF::textFieldWithPlaceHolder(placeholder,dimensions,alignment,fontName,fontSize);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextFieldTTF");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textFieldWithPlaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textFieldWithPlaceHolder of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_textFieldWithPlaceHolder01
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_textFieldWithPlaceHolder01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* placeholder = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,3,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCTextFieldTTF* tolua_ret = (cocos2d::CCTextFieldTTF*)  cocos2d::CCTextFieldTTF::textFieldWithPlaceHolder(placeholder,fontName,fontSize);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextFieldTTF");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCTextFieldTTF_textFieldWithPlaceHolder00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithPlaceHolder of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_initWithPlaceHolder00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_initWithPlaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
  const char* placeholder = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::CCSize dimensions = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCTextAlignment alignment = ((cocos2d::CCTextAlignment) (int)  tolua_tonumber(tolua_S,4,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,5,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithPlaceHolder'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithPlaceHolder(placeholder,dimensions,alignment,fontName,fontSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithPlaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithPlaceHolder of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_initWithPlaceHolder01
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_initWithPlaceHolder01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
  const char* placeholder = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,3,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithPlaceHolder'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithPlaceHolder(placeholder,fontName,fontSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCTextFieldTTF_initWithPlaceHolder00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: attachWithIME of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_attachWithIME00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_attachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'attachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->attachWithIME();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'attachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: detachWithIME of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_detachWithIME00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_detachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'detachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->detachWithIME();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'detachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDelegate of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_getDelegate00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_getDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDelegate'", NULL);
#endif
  {
   cocos2d::CCTextFieldDelegate* tolua_ret = (cocos2d::CCTextFieldDelegate*)  self->getDelegate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextFieldDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDelegate of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_setDelegate00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_setDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTextFieldDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTextFieldDelegate* pVal = ((cocos2d::CCTextFieldDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDelegate'", NULL);
#endif
  {
   self->setDelegate(pVal);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCharCount of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_getCharCount00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_getCharCount00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCharCount'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getCharCount();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCharCount'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColorSpaceHolder of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_getColorSpaceHolder00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_getColorSpaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColorSpaceHolder'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getColorSpaceHolder();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColorSpaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColorSpaceHolder of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_setColorSpaceHolder00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_setColorSpaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B val = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColorSpaceHolder'", NULL);
#endif
  {
   self->setColorSpaceHolder(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColorSpaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setString of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_setString00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_setString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setString'", NULL);
#endif
  {
   self->setString(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getString of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_getString00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_getString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getString'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getString();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPlaceHolder of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_setPlaceHolder00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_setPlaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPlaceHolder'", NULL);
#endif
  {
   self->setPlaceHolder(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPlaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPlaceHolder of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextFieldTTF_getPlaceHolder00
static int tolua_Cocos2d_cocos2d_CCTextFieldTTF_getPlaceHolder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextFieldTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPlaceHolder'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getPlaceHolder();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPlaceHolder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCIMEDelegate__ of class  cocos2d::CCTextFieldTTF */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTextFieldTTF___CCIMEDelegate__
static int tolua_get_cocos2d__CCTextFieldTTF___CCIMEDelegate__(lua_State* tolua_S)
{
  cocos2d::CCTextFieldTTF* self = (cocos2d::CCTextFieldTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCIMEDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCIMEDelegate*>(self), "CCIMEDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((CCIMEDelegate*)self), "CCIMEDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: minFilter of class  cocos2d::ccTexParams */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccTexParams_minFilter
static int tolua_get_cocos2d__ccTexParams_minFilter(lua_State* tolua_S)
{
  cocos2d::ccTexParams* self = (cocos2d::ccTexParams*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'minFilter'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->minFilter);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: minFilter of class  cocos2d::ccTexParams */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccTexParams_minFilter
static int tolua_set_cocos2d__ccTexParams_minFilter(lua_State* tolua_S)
{
  cocos2d::ccTexParams* self = (cocos2d::ccTexParams*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'minFilter'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->minFilter = ((GLuint)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: magFilter of class  cocos2d::ccTexParams */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccTexParams_magFilter
static int tolua_get_cocos2d__ccTexParams_magFilter(lua_State* tolua_S)
{
  cocos2d::ccTexParams* self = (cocos2d::ccTexParams*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'magFilter'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->magFilter);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: magFilter of class  cocos2d::ccTexParams */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccTexParams_magFilter
static int tolua_set_cocos2d__ccTexParams_magFilter(lua_State* tolua_S)
{
  cocos2d::ccTexParams* self = (cocos2d::ccTexParams*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'magFilter'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->magFilter = ((GLuint)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: wrapS of class  cocos2d::ccTexParams */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccTexParams_wrapS
static int tolua_get_cocos2d__ccTexParams_wrapS(lua_State* tolua_S)
{
  cocos2d::ccTexParams* self = (cocos2d::ccTexParams*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'wrapS'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->wrapS);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: wrapS of class  cocos2d::ccTexParams */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccTexParams_wrapS
static int tolua_set_cocos2d__ccTexParams_wrapS(lua_State* tolua_S)
{
  cocos2d::ccTexParams* self = (cocos2d::ccTexParams*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'wrapS'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->wrapS = ((GLuint)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: wrapT of class  cocos2d::ccTexParams */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccTexParams_wrapT
static int tolua_get_cocos2d__ccTexParams_wrapT(lua_State* tolua_S)
{
  cocos2d::ccTexParams* self = (cocos2d::ccTexParams*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'wrapT'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->wrapT);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: wrapT of class  cocos2d::ccTexParams */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccTexParams_wrapT
static int tolua_set_cocos2d__ccTexParams_wrapT(lua_State* tolua_S)
{
  cocos2d::ccTexParams* self = (cocos2d::ccTexParams*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'wrapT'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->wrapT = ((GLuint)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPixelFormat of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_getPixelFormat00
static int tolua_Cocos2d_cocos2d_CCTexture2D_getPixelFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPixelFormat'", NULL);
#endif
  {
   cocos2d::CCTexture2DPixelFormat tolua_ret = (cocos2d::CCTexture2DPixelFormat)  self->getPixelFormat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPixelFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPixelsWide of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_getPixelsWide00
static int tolua_Cocos2d_cocos2d_CCTexture2D_getPixelsWide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPixelsWide'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getPixelsWide();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPixelsWide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPixelsHigh of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_getPixelsHigh00
static int tolua_Cocos2d_cocos2d_CCTexture2D_getPixelsHigh00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPixelsHigh'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getPixelsHigh();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPixelsHigh'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_getName00
static int tolua_Cocos2d_cocos2d_CCTexture2D_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   GLuint tolua_ret = (GLuint)  self->getName();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSizeInPixels of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_getContentSizeInPixels00
static int tolua_Cocos2d_cocos2d_CCTexture2D_getContentSizeInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSizeInPixels'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getContentSizeInPixels();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSizeInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxS of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_setMaxS00
static int tolua_Cocos2d_cocos2d_CCTexture2D_setMaxS00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  GLfloat val = ((GLfloat)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxS'", NULL);
#endif
  {
   self->setMaxS(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxS'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxS of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_getMaxS00
static int tolua_Cocos2d_cocos2d_CCTexture2D_getMaxS00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxS'", NULL);
#endif
  {
   GLfloat tolua_ret = (GLfloat)  self->getMaxS();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxS'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMaxT of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_getMaxT00
static int tolua_Cocos2d_cocos2d_CCTexture2D_getMaxT00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMaxT'", NULL);
#endif
  {
   GLfloat tolua_ret = (GLfloat)  self->getMaxT();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMaxT'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMaxT of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_setMaxT00
static int tolua_Cocos2d_cocos2d_CCTexture2D_setMaxT00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  GLfloat val = ((GLfloat)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMaxT'", NULL);
#endif
  {
   self->setMaxT(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMaxT'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getHasPremultipliedAlpha of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_getHasPremultipliedAlpha00
static int tolua_Cocos2d_cocos2d_CCTexture2D_getHasPremultipliedAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getHasPremultipliedAlpha'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getHasPremultipliedAlpha();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getHasPremultipliedAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_new00
static int tolua_Cocos2d_cocos2d_CCTexture2D_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  Mtolua_new((cocos2d::CCTexture2D)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_new00_local
static int tolua_Cocos2d_cocos2d_CCTexture2D_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  Mtolua_new((cocos2d::CCTexture2D)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_delete00
static int tolua_Cocos2d_cocos2d_CCTexture2D_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: description of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_description00
static int tolua_Cocos2d_cocos2d_CCTexture2D_description00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'description'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->description();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'description'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: releaseData of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_releaseData00
static int tolua_Cocos2d_cocos2d_CCTexture2D_releaseData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  void* data = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'releaseData'", NULL);
#endif
  {
   self->releaseData(data);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'releaseData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keepData of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_keepData00
static int tolua_Cocos2d_cocos2d_CCTexture2D_keepData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  void* data = ((void*)  tolua_touserdata(tolua_S,2,0));
  unsigned int length = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keepData'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->keepData(data,length);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keepData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithData of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_initWithData00
static int tolua_Cocos2d_cocos2d_CCTexture2D_initWithData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  const void* data = ((const void*)  tolua_touserdata(tolua_S,2,0));
  cocos2d::CCTexture2DPixelFormat pixelFormat = ((cocos2d::CCTexture2DPixelFormat) (int)  tolua_tonumber(tolua_S,3,0));
  unsigned int pixelsWide = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
  unsigned int pixelsHigh = ((unsigned int)  tolua_tonumber(tolua_S,5,0));
  cocos2d::CCSize contentSize = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithData'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithData(data,pixelFormat,pixelsWide,pixelsHigh,contentSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawAtPoint of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_drawAtPoint00
static int tolua_Cocos2d_cocos2d_CCTexture2D_drawAtPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint point = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawAtPoint'", NULL);
#endif
  {
   self->drawAtPoint(point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawAtPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawInRect of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_drawInRect00
static int tolua_Cocos2d_cocos2d_CCTexture2D_drawInRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawInRect'", NULL);
#endif
  {
   self->drawInRect(rect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawInRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithImage of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_initWithImage00
static int tolua_Cocos2d_cocos2d_CCTexture2D_initWithImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCImage* uiImage = ((cocos2d::CCImage*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithImage'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithImage(uiImage);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithString of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_initWithString00
static int tolua_Cocos2d_cocos2d_CCTexture2D_initWithString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::CCSize dimensions = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCTextAlignment alignment = ((cocos2d::CCTextAlignment) (int)  tolua_tonumber(tolua_S,4,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,5,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithString(text,dimensions,alignment,fontName,fontSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithString of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_initWithString01
static int tolua_Cocos2d_cocos2d_CCTexture2D_initWithString01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  const char* text = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,3,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithString(text,fontName,fontSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCTexture2D_initWithString00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentSize of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_getContentSize00
static int tolua_Cocos2d_cocos2d_CCTexture2D_getContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentSize'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getContentSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexParameters of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_setTexParameters00
static int tolua_Cocos2d_cocos2d_CCTexture2D_setTexParameters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::ccTexParams",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTexParams* texParams = ((cocos2d::ccTexParams*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexParameters'", NULL);
#endif
  {
   self->setTexParameters(texParams);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexParameters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAntiAliasTexParameters of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_setAntiAliasTexParameters00
static int tolua_Cocos2d_cocos2d_CCTexture2D_setAntiAliasTexParameters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAntiAliasTexParameters'", NULL);
#endif
  {
   self->setAntiAliasTexParameters();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAntiAliasTexParameters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAliasTexParameters of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_setAliasTexParameters00
static int tolua_Cocos2d_cocos2d_CCTexture2D_setAliasTexParameters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAliasTexParameters'", NULL);
#endif
  {
   self->setAliasTexParameters();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAliasTexParameters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: generateMipmap of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_generateMipmap00
static int tolua_Cocos2d_cocos2d_CCTexture2D_generateMipmap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'generateMipmap'", NULL);
#endif
  {
   self->generateMipmap();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'generateMipmap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: bitsPerPixelForFormat of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_bitsPerPixelForFormat00
static int tolua_Cocos2d_cocos2d_CCTexture2D_bitsPerPixelForFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* self = (cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bitsPerPixelForFormat'", NULL);
#endif
  {
   int tolua_ret = (int)  self->bitsPerPixelForFormat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bitsPerPixelForFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDefaultAlphaPixelFormat of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_setDefaultAlphaPixelFormat00
static int tolua_Cocos2d_cocos2d_CCTexture2D_setDefaultAlphaPixelFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2DPixelFormat format = ((cocos2d::CCTexture2DPixelFormat) (int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCTexture2D::setDefaultAlphaPixelFormat(format);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDefaultAlphaPixelFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: defaultAlphaPixelFormat of class  cocos2d::CCTexture2D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTexture2D_defaultAlphaPixelFormat00
static int tolua_Cocos2d_cocos2d_CCTexture2D_defaultAlphaPixelFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTexture2DPixelFormat tolua_ret = (cocos2d::CCTexture2DPixelFormat)  cocos2d::CCTexture2D::defaultAlphaPixelFormat();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'defaultAlphaPixelFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTotalQuads of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_getTotalQuads00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_getTotalQuads00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTotalQuads'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getTotalQuads();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTotalQuads'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCapacity of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_getCapacity00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_getCapacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCapacity'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getCapacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCapacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_getTexture00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_setTexture00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* val = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setQuads of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_setQuads00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_setQuads00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::ccV3F_C4B_T2F_Quad",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccV3F_C4B_T2F_Quad* val = ((cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setQuads'", NULL);
#endif
  {
   self->setQuads(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setQuads'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getQuads of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_getQuads00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_getQuads00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getQuads'", NULL);
#endif
  {
   cocos2d::ccV3F_C4B_T2F_Quad* tolua_ret = (cocos2d::ccV3F_C4B_T2F_Quad*)  self->getQuads();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::ccV3F_C4B_T2F_Quad");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getQuads'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_new00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTextureAtlas* tolua_ret = (cocos2d::CCTextureAtlas*)  Mtolua_new((cocos2d::CCTextureAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextureAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_new00_local
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTextureAtlas* tolua_ret = (cocos2d::CCTextureAtlas*)  Mtolua_new((cocos2d::CCTextureAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextureAtlas");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_delete00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: description of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_description00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_description00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'description'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->description();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'description'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textureAtlasWithFile of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_textureAtlasWithFile00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_textureAtlasWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCTextureAtlas* tolua_ret = (cocos2d::CCTextureAtlas*)  cocos2d::CCTextureAtlas::textureAtlasWithFile(file,capacity);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextureAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textureAtlasWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_initWithFile00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_initWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  const char* file = ((const char*)  tolua_tostring(tolua_S,2,0));
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(file,capacity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textureAtlasWithTexture of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_textureAtlasWithTexture00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_textureAtlasWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTexture2D* texture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCTextureAtlas* tolua_ret = (cocos2d::CCTextureAtlas*)  cocos2d::CCTextureAtlas::textureAtlasWithTexture(texture,capacity);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextureAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textureAtlasWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTexture of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_initWithTexture00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_initWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* texture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTexture'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTexture(texture,capacity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateQuad of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_updateQuad00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_updateQuad00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::ccV3F_C4B_T2F_Quad",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccV3F_C4B_T2F_Quad* quad = ((cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,2,0));
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateQuad'", NULL);
#endif
  {
   self->updateQuad(quad,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateQuad'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertQuad of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_insertQuad00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_insertQuad00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::ccV3F_C4B_T2F_Quad",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccV3F_C4B_T2F_Quad* quad = ((cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,2,0));
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertQuad'", NULL);
#endif
  {
   self->insertQuad(quad,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertQuad'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertQuadFromIndex of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_insertQuadFromIndex00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_insertQuadFromIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  unsigned int fromIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int newIndex = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertQuadFromIndex'", NULL);
#endif
  {
   self->insertQuadFromIndex(fromIndex,newIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertQuadFromIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeQuadAtIndex of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_removeQuadAtIndex00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_removeQuadAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeQuadAtIndex'", NULL);
#endif
  {
   self->removeQuadAtIndex(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeQuadAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllQuads of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_removeAllQuads00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_removeAllQuads00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllQuads'", NULL);
#endif
  {
   self->removeAllQuads();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllQuads'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resizeCapacity of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_resizeCapacity00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_resizeCapacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  unsigned int n = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resizeCapacity'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->resizeCapacity(n);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resizeCapacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawNumberOfQuads of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_drawNumberOfQuads00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_drawNumberOfQuads00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  unsigned int n = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawNumberOfQuads'", NULL);
#endif
  {
   self->drawNumberOfQuads(n);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawNumberOfQuads'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawNumberOfQuads of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_drawNumberOfQuads01
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_drawNumberOfQuads01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
  unsigned int n = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int start = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawNumberOfQuads'", NULL);
#endif
  {
   self->drawNumberOfQuads(n,start);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCTextureAtlas_drawNumberOfQuads00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawQuads of class  cocos2d::CCTextureAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureAtlas_drawQuads00
static int tolua_Cocos2d_cocos2d_CCTextureAtlas_drawQuads00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureAtlas* self = (cocos2d::CCTextureAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawQuads'", NULL);
#endif
  {
   self->drawQuads();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawQuads'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_new00
static int tolua_Cocos2d_cocos2d_CCTextureCache_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTextureCache* tolua_ret = (cocos2d::CCTextureCache*)  Mtolua_new((cocos2d::CCTextureCache)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextureCache");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_new00_local
static int tolua_Cocos2d_cocos2d_CCTextureCache_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTextureCache* tolua_ret = (cocos2d::CCTextureCache*)  Mtolua_new((cocos2d::CCTextureCache)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextureCache");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_delete00
static int tolua_Cocos2d_cocos2d_CCTextureCache_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: description of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_description00
static int tolua_Cocos2d_cocos2d_CCTextureCache_description00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'description'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->description();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'description'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedTextureCache of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_sharedTextureCache00
static int tolua_Cocos2d_cocos2d_CCTextureCache_sharedTextureCache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTextureCache* tolua_ret = (cocos2d::CCTextureCache*)  cocos2d::CCTextureCache::sharedTextureCache();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTextureCache");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedTextureCache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeSharedTextureCache of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_purgeSharedTextureCache00
static int tolua_Cocos2d_cocos2d_CCTextureCache_purgeSharedTextureCache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTextureCache::purgeSharedTextureCache();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeSharedTextureCache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addImage of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_addImage00
static int tolua_Cocos2d_cocos2d_CCTextureCache_addImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
  const char* fileimage = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addImage'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->addImage(fileimage);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addUIImage of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_addUIImage00
static int tolua_Cocos2d_cocos2d_CCTextureCache_addUIImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCImage",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCImage* image = ((cocos2d::CCImage*)  tolua_tousertype(tolua_S,2,0));
  const char* key = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addUIImage'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->addUIImage(image,key);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addUIImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textureForKey of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_textureForKey00
static int tolua_Cocos2d_cocos2d_CCTextureCache_textureForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
  const char* key = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textureForKey'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->textureForKey(key);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textureForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllTextures of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_removeAllTextures00
static int tolua_Cocos2d_cocos2d_CCTextureCache_removeAllTextures00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllTextures'", NULL);
#endif
  {
   self->removeAllTextures();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllTextures'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeUnusedTextures of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_removeUnusedTextures00
static int tolua_Cocos2d_cocos2d_CCTextureCache_removeUnusedTextures00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeUnusedTextures'", NULL);
#endif
  {
   self->removeUnusedTextures();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeUnusedTextures'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeTexture of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_removeTexture00
static int tolua_Cocos2d_cocos2d_CCTextureCache_removeTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* texture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeTexture'", NULL);
#endif
  {
   self->removeTexture(texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeTextureForKey of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_removeTextureForKey00
static int tolua_Cocos2d_cocos2d_CCTextureCache_removeTextureForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
  const char* textureKeyName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeTextureForKey'", NULL);
#endif
  {
   self->removeTextureForKey(textureKeyName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeTextureForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dumpCachedTextureInfo of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_dumpCachedTextureInfo00
static int tolua_Cocos2d_cocos2d_CCTextureCache_dumpCachedTextureInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureCache* self = (cocos2d::CCTextureCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dumpCachedTextureInfo'", NULL);
#endif
  {
   self->dumpCachedTextureInfo();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dumpCachedTextureInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reloadAllTextures of class  cocos2d::CCTextureCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureCache_reloadAllTextures00
static int tolua_Cocos2d_cocos2d_CCTextureCache_reloadAllTextures00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTextureCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTextureCache::reloadAllTextures();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reloadAllTextures'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTGAInfo of class  cocos2d::CCTileMapAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTileMapAtlas_getTGAInfo00
static int tolua_Cocos2d_cocos2d_CCTileMapAtlas_getTGAInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTileMapAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTileMapAtlas* self = (cocos2d::CCTileMapAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTGAInfo'", NULL);
#endif
  {
   struct cocos2d::sImageTGA* tolua_ret = (struct cocos2d::sImageTGA*)  self->getTGAInfo();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::sImageTGA");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTGAInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTGAInfo of class  cocos2d::CCTileMapAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTileMapAtlas_setTGAInfo00
static int tolua_Cocos2d_cocos2d_CCTileMapAtlas_setTGAInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTileMapAtlas",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::sImageTGA",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTileMapAtlas* self = (cocos2d::CCTileMapAtlas*)  tolua_tousertype(tolua_S,1,0);
  struct cocos2d::sImageTGA* val = ((struct cocos2d::sImageTGA*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTGAInfo'", NULL);
#endif
  {
   self->setTGAInfo(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTGAInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTileMapAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTileMapAtlas_new00
static int tolua_Cocos2d_cocos2d_CCTileMapAtlas_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTileMapAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTileMapAtlas* tolua_ret = (cocos2d::CCTileMapAtlas*)  Mtolua_new((cocos2d::CCTileMapAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTileMapAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTileMapAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTileMapAtlas_new00_local
static int tolua_Cocos2d_cocos2d_CCTileMapAtlas_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTileMapAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTileMapAtlas* tolua_ret = (cocos2d::CCTileMapAtlas*)  Mtolua_new((cocos2d::CCTileMapAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTileMapAtlas");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTileMapAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTileMapAtlas_delete00
static int tolua_Cocos2d_cocos2d_CCTileMapAtlas_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTileMapAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTileMapAtlas* self = (cocos2d::CCTileMapAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tileMapAtlasWithTileFile of class  cocos2d::CCTileMapAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTileMapAtlas_tileMapAtlasWithTileFile00
static int tolua_Cocos2d_cocos2d_CCTileMapAtlas_tileMapAtlasWithTileFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTileMapAtlas",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* tile = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* mapFile = ((const char*)  tolua_tostring(tolua_S,3,0));
  int tileWidth = ((int)  tolua_tonumber(tolua_S,4,0));
  int tileHeight = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCTileMapAtlas* tolua_ret = (cocos2d::CCTileMapAtlas*)  cocos2d::CCTileMapAtlas::tileMapAtlasWithTileFile(tile,mapFile,tileWidth,tileHeight);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTileMapAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tileMapAtlasWithTileFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTileFile of class  cocos2d::CCTileMapAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTileMapAtlas_initWithTileFile00
static int tolua_Cocos2d_cocos2d_CCTileMapAtlas_initWithTileFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTileMapAtlas",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTileMapAtlas* self = (cocos2d::CCTileMapAtlas*)  tolua_tousertype(tolua_S,1,0);
  const char* tile = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* mapFile = ((const char*)  tolua_tostring(tolua_S,3,0));
  int tileWidth = ((int)  tolua_tonumber(tolua_S,4,0));
  int tileHeight = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTileFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTileFile(tile,mapFile,tileWidth,tileHeight);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTileFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTile of class  cocos2d::CCTileMapAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTileMapAtlas_setTile00
static int tolua_Cocos2d_cocos2d_CCTileMapAtlas_setTile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTileMapAtlas",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTileMapAtlas* self = (cocos2d::CCTileMapAtlas*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B tile = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::ccGridSize position = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTile'", NULL);
#endif
  {
   self->setTile(tile,position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: releaseMap of class  cocos2d::CCTileMapAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTileMapAtlas_releaseMap00
static int tolua_Cocos2d_cocos2d_CCTileMapAtlas_releaseMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTileMapAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTileMapAtlas* self = (cocos2d::CCTileMapAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'releaseMap'", NULL);
#endif
  {
   self->releaseMap();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'releaseMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayerSize of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_getLayerSize00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_getLayerSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayerSize'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getLayerSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayerSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLayerSize of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_setLayerSize00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_setLayerSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize val = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLayerSize'", NULL);
#endif
  {
   self->setLayerSize(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLayerSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMapTileSize of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_getMapTileSize00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_getMapTileSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMapTileSize'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getMapTileSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMapTileSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMapTileSize of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_setMapTileSize00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_setMapTileSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize val = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMapTileSize'", NULL);
#endif
  {
   self->setMapTileSize(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMapTileSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTiles of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_getTiles00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_getTiles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTiles'", NULL);
#endif
  {
   unsigned int* tolua_ret = (unsigned int*)  self->getTiles();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTiles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTiles of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_setTiles00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_setTiles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  unsigned int pval = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTiles'", NULL);
#endif
  {
   self->setTiles(&pval);
   tolua_pushnumber(tolua_S,(lua_Number)pval);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTiles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTileSet of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_getTileSet00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_getTileSet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTileSet'", NULL);
#endif
  {
   cocos2d::CCTMXTilesetInfo* tolua_ret = (cocos2d::CCTMXTilesetInfo*)  self->getTileSet();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXTilesetInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTileSet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTileSet of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_setTileSet00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_setTileSet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTMXTilesetInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTMXTilesetInfo* pval = ((cocos2d::CCTMXTilesetInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTileSet'", NULL);
#endif
  {
   self->setTileSet(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTileSet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLayerOrientation of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_setLayerOrientation00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_setLayerOrientation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  unsigned int val = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLayerOrientation'", NULL);
#endif
  {
   self->setLayerOrientation(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLayerOrientation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayerOrientation of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_getLayerOrientation00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_getLayerOrientation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayerOrientation'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getLayerOrientation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayerOrientation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProperties of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_getProperties00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_getProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProperties'", NULL);
#endif
  {
   cocos2d::CCStringToStringDictionary* tolua_ret = (cocos2d::CCStringToStringDictionary*)  self->getProperties();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCStringToStringDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProperties of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_setProperties00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_setProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCStringToStringDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCStringToStringDictionary* pval = ((cocos2d::CCStringToStringDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProperties'", NULL);
#endif
  {
   self->setProperties(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_new00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXLayer* tolua_ret = (cocos2d::CCTMXLayer*)  Mtolua_new((cocos2d::CCTMXLayer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXLayer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_new00_local
static int tolua_Cocos2d_cocos2d_CCTMXLayer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXLayer* tolua_ret = (cocos2d::CCTMXLayer*)  Mtolua_new((cocos2d::CCTMXLayer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXLayer");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_delete00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: layerWithTilesetInfo of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_layerWithTilesetInfo00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_layerWithTilesetInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTMXTilesetInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCTMXLayerInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTilesetInfo* tilesetInfo = ((cocos2d::CCTMXTilesetInfo*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCTMXLayerInfo* layerInfo = ((cocos2d::CCTMXLayerInfo*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCTMXMapInfo* mapInfo = ((cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,4,0));
  {
   cocos2d::CCTMXLayer* tolua_ret = (cocos2d::CCTMXLayer*)  cocos2d::CCTMXLayer::layerWithTilesetInfo(tilesetInfo,layerInfo,mapInfo);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXLayer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'layerWithTilesetInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTilesetInfo of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_initWithTilesetInfo00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_initWithTilesetInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTMXTilesetInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCTMXLayerInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTMXTilesetInfo* tilesetInfo = ((cocos2d::CCTMXTilesetInfo*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCTMXLayerInfo* layerInfo = ((cocos2d::CCTMXLayerInfo*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCTMXMapInfo* mapInfo = ((cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTilesetInfo'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTilesetInfo(tilesetInfo,layerInfo,mapInfo);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTilesetInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: releaseMap of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_releaseMap00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_releaseMap00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'releaseMap'", NULL);
#endif
  {
   self->releaseMap();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'releaseMap'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tileAt of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_tileAt00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_tileAt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint tileCoordinate = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tileAt'", NULL);
#endif
  {
   cocos2d::CCSprite* tolua_ret = (cocos2d::CCSprite*)  self->tileAt(tileCoordinate);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tileAt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tileGIDAt of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_tileGIDAt00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_tileGIDAt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint tileCoordinate = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tileGIDAt'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->tileGIDAt(tileCoordinate);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tileGIDAt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTileGID of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_setTileGID00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_setTileGID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  unsigned int gid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCPoint tileCoordinate = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTileGID'", NULL);
#endif
  {
   self->setTileGID(gid,tileCoordinate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTileGID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeTileAt of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_removeTileAt00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_removeTileAt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint tileCoordinate = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeTileAt'", NULL);
#endif
  {
   self->removeTileAt(tileCoordinate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeTileAt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: positionAt of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_positionAt00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_positionAt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint tileCoordinate = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'positionAt'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->positionAt(tileCoordinate);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'positionAt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: propertyNamed of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_propertyNamed00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_propertyNamed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  const char* propertyName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'propertyNamed'", NULL);
#endif
  {
   cocos2d::CCString* tolua_ret = (cocos2d::CCString*)  self->propertyNamed(propertyName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCString");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'propertyNamed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setupTiles of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_setupTiles00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_setupTiles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setupTiles'", NULL);
#endif
  {
   self->setupTiles();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setupTiles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_addChild00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder,tag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeChild of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_removeChild00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_removeChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  bool cleanup = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeChild'", NULL);
#endif
  {
   self->removeChild(child,cleanup);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_draw00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayerName of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_getLayerName00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_getLayerName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayerName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getLayerName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayerName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLayerName of class  cocos2d::CCTMXLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayer_setLayerName00
static int tolua_Cocos2d_cocos2d_CCTMXLayer_setLayerName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayer",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayer* self = (cocos2d::CCTMXLayer*)  tolua_tousertype(tolua_S,1,0);
  const char* layerName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLayerName'", NULL);
#endif
  {
   self->setLayerName(layerName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLayerName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPositionOffset of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getPositionOffset00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getPositionOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPositionOffset'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getPositionOffset();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPositionOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPositionOffset of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setPositionOffset00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setPositionOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint pt = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPositionOffset'", NULL);
#endif
  {
   self->setPositionOffset(pt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPositionOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProperties of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getProperties00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProperties'", NULL);
#endif
  {
   cocos2d::CCStringToStringDictionary* tolua_ret = (cocos2d::CCStringToStringDictionary*)  self->getProperties();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCStringToStringDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProperties of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setProperties00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCStringToStringDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCStringToStringDictionary* pval = ((cocos2d::CCStringToStringDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProperties'", NULL);
#endif
  {
   self->setProperties(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObjects of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getObjects00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getObjects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObjects'", NULL);
#endif
  {
   CCMutableArray<CCStringToStringDictionary*>* tolua_ret = (CCMutableArray<CCStringToStringDictionary*>*)  self->getObjects();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCMutableArray<CCStringToStringDictionary*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObjects of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setObjects00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setObjects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCMutableArray<CCStringToStringDictionary*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
  CCMutableArray<CCStringToStringDictionary*>* val = ((CCMutableArray<CCStringToStringDictionary*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObjects'", NULL);
#endif
  {
   self->setObjects(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObjects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_new00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXObjectGroup* tolua_ret = (cocos2d::CCTMXObjectGroup*)  Mtolua_new((cocos2d::CCTMXObjectGroup)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXObjectGroup");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_new00_local
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXObjectGroup* tolua_ret = (cocos2d::CCTMXObjectGroup*)  Mtolua_new((cocos2d::CCTMXObjectGroup)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXObjectGroup");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_delete00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGroupName of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getGroupName00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getGroupName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGroupName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getGroupName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGroupName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGroupName of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setGroupName00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setGroupName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
  const char* groupName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGroupName'", NULL);
#endif
  {
   self->setGroupName(groupName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGroupName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: propertyNamed of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_propertyNamed00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_propertyNamed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
  const char* propertyName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'propertyNamed'", NULL);
#endif
  {
   cocos2d::CCString* tolua_ret = (cocos2d::CCString*)  self->propertyNamed(propertyName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCString");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'propertyNamed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectNamed of class  cocos2d::CCTMXObjectGroup */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXObjectGroup_objectNamed00
static int tolua_Cocos2d_cocos2d_CCTMXObjectGroup_objectNamed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXObjectGroup",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXObjectGroup* self = (cocos2d::CCTMXObjectGroup*)  tolua_tousertype(tolua_S,1,0);
  const char* objectName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectNamed'", NULL);
#endif
  {
   cocos2d::CCStringToStringDictionary* tolua_ret = (cocos2d::CCStringToStringDictionary*)  self->objectNamed(objectName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCStringToStringDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectNamed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMapSize of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_getMapSize00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_getMapSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMapSize'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getMapSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMapSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMapSize of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_setMapSize00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_setMapSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize sz = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMapSize'", NULL);
#endif
  {
   self->setMapSize(sz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMapSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTileSize of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_getTileSize00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_getTileSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTileSize'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getTileSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTileSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTileSize of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_setTileSize00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_setTileSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize sz = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTileSize'", NULL);
#endif
  {
   self->setTileSize(sz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTileSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMapOrientation of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_getMapOrientation00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_getMapOrientation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMapOrientation'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getMapOrientation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMapOrientation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMapOrientation of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_setMapOrientation00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_setMapOrientation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMapOrientation'", NULL);
#endif
  {
   self->setMapOrientation(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMapOrientation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObjectGroups of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_getObjectGroups00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_getObjectGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObjectGroups'", NULL);
#endif
  {
   cocos2d::CCMutableArray<CCTMXObjectGroup*>* tolua_ret = (cocos2d::CCMutableArray<CCTMXObjectGroup*>*)  self->getObjectGroups();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCTMXObjectGroup*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjectGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObjectGroups of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_setObjectGroups00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_setObjectGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCTMXObjectGroup*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCTMXObjectGroup*>* pval = ((cocos2d::CCMutableArray<CCTMXObjectGroup*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObjectGroups'", NULL);
#endif
  {
   self->setObjectGroups(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObjectGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProperties of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_getProperties00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_getProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProperties'", NULL);
#endif
  {
   cocos2d::CCStringToStringDictionary* tolua_ret = (cocos2d::CCStringToStringDictionary*)  self->getProperties();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCStringToStringDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProperties of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_setProperties00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_setProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCStringToStringDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCStringToStringDictionary* pval = ((cocos2d::CCStringToStringDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProperties'", NULL);
#endif
  {
   self->setProperties(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_new00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXTiledMap* tolua_ret = (cocos2d::CCTMXTiledMap*)  Mtolua_new((cocos2d::CCTMXTiledMap)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXTiledMap");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_new00_local
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXTiledMap* tolua_ret = (cocos2d::CCTMXTiledMap*)  Mtolua_new((cocos2d::CCTMXTiledMap)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXTiledMap");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_delete00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tiledMapWithTMXFile of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_tiledMapWithTMXFile00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_tiledMapWithTMXFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* tmxFile = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCTMXTiledMap* tolua_ret = (cocos2d::CCTMXTiledMap*)  cocos2d::CCTMXTiledMap::tiledMapWithTMXFile(tmxFile);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXTiledMap");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tiledMapWithTMXFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTMXFile of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_initWithTMXFile00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_initWithTMXFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  const char* tmxFile = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTMXFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTMXFile(tmxFile);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTMXFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: layerNamed of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_layerNamed00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_layerNamed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  const char* layerName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'layerNamed'", NULL);
#endif
  {
   cocos2d::CCTMXLayer* tolua_ret = (cocos2d::CCTMXLayer*)  self->layerNamed(layerName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXLayer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'layerNamed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectGroupNamed of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_objectGroupNamed00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_objectGroupNamed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  const char* groupName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectGroupNamed'", NULL);
#endif
  {
   cocos2d::CCTMXObjectGroup* tolua_ret = (cocos2d::CCTMXObjectGroup*)  self->objectGroupNamed(groupName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXObjectGroup");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectGroupNamed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: propertyNamed of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_propertyNamed00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_propertyNamed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  const char* propertyName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'propertyNamed'", NULL);
#endif
  {
   cocos2d::CCString* tolua_ret = (cocos2d::CCString*)  self->propertyNamed(propertyName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCString");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'propertyNamed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: propertiesForGID of class  cocos2d::CCTMXTiledMap */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTiledMap_propertiesForGID00
static int tolua_Cocos2d_cocos2d_CCTMXTiledMap_propertiesForGID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTiledMap",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTiledMap* self = (cocos2d::CCTMXTiledMap*)  tolua_tousertype(tolua_S,1,0);
  int GID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'propertiesForGID'", NULL);
#endif
  {
   CCDictionary<std::string,cocos2d::CCString*>* tolua_ret = (CCDictionary<std::string,cocos2d::CCString*>*)  self->propertiesForGID(GID);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary<std::string,cocos2d::CCString*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'propertiesForGID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProperties of class  cocos2d::CCTMXLayerInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayerInfo_getProperties00
static int tolua_Cocos2d_cocos2d_CCTMXLayerInfo_getProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayerInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayerInfo* self = (cocos2d::CCTMXLayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProperties'", NULL);
#endif
  {
   cocos2d::CCStringToStringDictionary* tolua_ret = (cocos2d::CCStringToStringDictionary*)  self->getProperties();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCStringToStringDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProperties of class  cocos2d::CCTMXLayerInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayerInfo_setProperties00
static int tolua_Cocos2d_cocos2d_CCTMXLayerInfo_setProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayerInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCStringToStringDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayerInfo* self = (cocos2d::CCTMXLayerInfo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCStringToStringDictionary* pval = ((cocos2d::CCStringToStringDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProperties'", NULL);
#endif
  {
   self->setProperties(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTMXLayerInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayerInfo_new00
static int tolua_Cocos2d_cocos2d_CCTMXLayerInfo_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXLayerInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXLayerInfo* tolua_ret = (cocos2d::CCTMXLayerInfo*)  Mtolua_new((cocos2d::CCTMXLayerInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXLayerInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTMXLayerInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayerInfo_new00_local
static int tolua_Cocos2d_cocos2d_CCTMXLayerInfo_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXLayerInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXLayerInfo* tolua_ret = (cocos2d::CCTMXLayerInfo*)  Mtolua_new((cocos2d::CCTMXLayerInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXLayerInfo");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTMXLayerInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXLayerInfo_delete00
static int tolua_Cocos2d_cocos2d_CCTMXLayerInfo_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXLayerInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXLayerInfo* self = (cocos2d::CCTMXLayerInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTMXTilesetInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_new00
static int tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXTilesetInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXTilesetInfo* tolua_ret = (cocos2d::CCTMXTilesetInfo*)  Mtolua_new((cocos2d::CCTMXTilesetInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXTilesetInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTMXTilesetInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_new00_local
static int tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXTilesetInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXTilesetInfo* tolua_ret = (cocos2d::CCTMXTilesetInfo*)  Mtolua_new((cocos2d::CCTMXTilesetInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXTilesetInfo");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTMXTilesetInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_delete00
static int tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTilesetInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTilesetInfo* self = (cocos2d::CCTMXTilesetInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rectForGID of class  cocos2d::CCTMXTilesetInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_rectForGID00
static int tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_rectForGID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXTilesetInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXTilesetInfo* self = (cocos2d::CCTMXTilesetInfo*)  tolua_tousertype(tolua_S,1,0);
  unsigned int gid = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rectForGID'", NULL);
#endif
  {
   cocos2d::CCRect tolua_ret = (cocos2d::CCRect)  self->rectForGID(gid);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rectForGID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOrientation of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getOrientation00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getOrientation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOrientation'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getOrientation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOrientation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOrientation of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setOrientation00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setOrientation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOrientation'", NULL);
#endif
  {
   self->setOrientation(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOrientation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getMapSize of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getMapSize00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getMapSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getMapSize'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getMapSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getMapSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setMapSize of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setMapSize00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setMapSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize sz = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setMapSize'", NULL);
#endif
  {
   self->setMapSize(sz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setMapSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTileSize of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTileSize00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTileSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTileSize'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getTileSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTileSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTileSize of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTileSize00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTileSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize sz = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTileSize'", NULL);
#endif
  {
   self->setTileSize(sz);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTileSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayers of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getLayers00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getLayers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayers'", NULL);
#endif
  {
   cocos2d::CCMutableArray<CCTMXLayerInfo*>* tolua_ret = (cocos2d::CCMutableArray<CCTMXLayerInfo*>*)  self->getLayers();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCTMXLayerInfo*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLayers of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setLayers00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setLayers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCTMXLayerInfo*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCTMXLayerInfo*>* pval = ((cocos2d::CCMutableArray<CCTMXLayerInfo*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLayers'", NULL);
#endif
  {
   self->setLayers(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLayers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTilesets of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTilesets00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTilesets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTilesets'", NULL);
#endif
  {
   cocos2d::CCMutableArray<CCTMXTilesetInfo*>* tolua_ret = (cocos2d::CCMutableArray<CCTMXTilesetInfo*>*)  self->getTilesets();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCTMXTilesetInfo*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTilesets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTilesets of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTilesets00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTilesets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCTMXTilesetInfo*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCTMXTilesetInfo*>* pval = ((cocos2d::CCMutableArray<CCTMXTilesetInfo*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTilesets'", NULL);
#endif
  {
   self->setTilesets(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTilesets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObjectGroups of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getObjectGroups00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getObjectGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObjectGroups'", NULL);
#endif
  {
   cocos2d::CCMutableArray<CCTMXObjectGroup*>* tolua_ret = (cocos2d::CCMutableArray<CCTMXObjectGroup*>*)  self->getObjectGroups();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCTMXObjectGroup*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjectGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObjectGroups of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setObjectGroups00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setObjectGroups00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCTMXObjectGroup*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCTMXObjectGroup*>* val = ((cocos2d::CCMutableArray<CCTMXObjectGroup*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObjectGroups'", NULL);
#endif
  {
   self->setObjectGroups(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObjectGroups'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParentElement of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getParentElement00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getParentElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParentElement'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getParentElement();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParentElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParentElement of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setParentElement00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setParentElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParentElement'", NULL);
#endif
  {
   self->setParentElement(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParentElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getParentGID of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getParentGID00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getParentGID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getParentGID'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getParentGID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getParentGID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setParentGID of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setParentGID00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setParentGID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  unsigned int val = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setParentGID'", NULL);
#endif
  {
   self->setParentGID(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setParentGID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLayerAttribs of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getLayerAttribs00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getLayerAttribs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLayerAttribs'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getLayerAttribs();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLayerAttribs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLayerAttribs of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setLayerAttribs00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setLayerAttribs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLayerAttribs'", NULL);
#endif
  {
   self->setLayerAttribs(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLayerAttribs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStoringCharacters of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getStoringCharacters00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getStoringCharacters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStoringCharacters'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getStoringCharacters();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStoringCharacters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStoringCharacters of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setStoringCharacters00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setStoringCharacters00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  bool val = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStoringCharacters'", NULL);
#endif
  {
   self->setStoringCharacters(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStoringCharacters'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProperties of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getProperties00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProperties'", NULL);
#endif
  {
   cocos2d::CCStringToStringDictionary* tolua_ret = (cocos2d::CCStringToStringDictionary*)  self->getProperties();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCStringToStringDictionary");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProperties of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setProperties00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCStringToStringDictionary",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCStringToStringDictionary* pval = ((cocos2d::CCStringToStringDictionary*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProperties'", NULL);
#endif
  {
   self->setProperties(pval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_new00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXMapInfo* tolua_ret = (cocos2d::CCTMXMapInfo*)  Mtolua_new((cocos2d::CCTMXMapInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXMapInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_new00_local
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTMXMapInfo* tolua_ret = (cocos2d::CCTMXMapInfo*)  Mtolua_new((cocos2d::CCTMXMapInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXMapInfo");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_delete00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: formatWithTMXFile of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_formatWithTMXFile00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_formatWithTMXFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* tmxFile = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCTMXMapInfo* tolua_ret = (cocos2d::CCTMXMapInfo*)  cocos2d::CCTMXMapInfo::formatWithTMXFile(tmxFile);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTMXMapInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'formatWithTMXFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTMXFile of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_initWithTMXFile00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_initWithTMXFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  const char* tmxFile = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTMXFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTMXFile(tmxFile);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTMXFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: parseXMLFile of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_parseXMLFile00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_parseXMLFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  const char* xmlFilename = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'parseXMLFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->parseXMLFile(xmlFilename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'parseXMLFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTileProperties of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTileProperties00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTileProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTileProperties'", NULL);
#endif
  {
   CCDictionary<int,CCStringToStringDictionary*>* tolua_ret = (CCDictionary<int,CCStringToStringDictionary*>*)  self->getTileProperties();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCDictionary<int,CCStringToStringDictionary*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTileProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTileProperties of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTileProperties00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTileProperties00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary<int,CCStringToStringDictionary*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary<int,CCStringToStringDictionary*>* tileProperties = ((CCDictionary<int,CCStringToStringDictionary*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTileProperties'", NULL);
#endif
  {
   self->setTileProperties(tileProperties);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTileProperties'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startElement of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_startElement00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_startElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  void* ctx = ((void*)  tolua_touserdata(tolua_S,2,0));
  const char* name = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* atts = ((const char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startElement'", NULL);
#endif
  {
   self->startElement(ctx,name,&atts);
   tolua_pushstring(tolua_S,(const char*)atts);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endElement of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_endElement00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_endElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  void* ctx = ((void*)  tolua_touserdata(tolua_S,2,0));
  const char* name = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endElement'", NULL);
#endif
  {
   self->endElement(ctx,name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: textHandler of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_textHandler00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_textHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  void* ctx = ((void*)  tolua_touserdata(tolua_S,2,0));
  const char* ch = ((const char*)  tolua_tostring(tolua_S,3,0));
  int len = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'textHandler'", NULL);
#endif
  {
   self->textHandler(ctx,ch,len);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'textHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCurrentString of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getCurrentString00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getCurrentString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCurrentString'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getCurrentString();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCurrentString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCurrentString of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setCurrentString00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setCurrentString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  const char* currentString = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCurrentString'", NULL);
#endif
  {
   self->setCurrentString(currentString);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCurrentString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTMXFileName of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTMXFileName00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTMXFileName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTMXFileName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getTMXFileName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTMXFileName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTMXFileName of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTMXFileName00
static int tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTMXFileName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTMXMapInfo",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
  const char* fileName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTMXFileName'", NULL);
#endif
  {
   self->setTMXFileName(fileName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTMXFileName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCSAXDelegator__ of class  cocos2d::CCTMXMapInfo */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTMXMapInfo___CCSAXDelegator__
static int tolua_get_cocos2d__CCTMXMapInfo___CCSAXDelegator__(lua_State* tolua_S)
{
  cocos2d::CCTMXMapInfo* self = (cocos2d::CCTMXMapInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCSAXDelegator__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCSAXDelegator*>(self), "CCSAXDelegator");
#else
   tolua_pushusertype(tolua_S,(void*)((CCSAXDelegator*)self), "CCSAXDelegator");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTouch */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouch_new00
static int tolua_Cocos2d_cocos2d_CCTouch_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTouch* tolua_ret = (cocos2d::CCTouch*)  Mtolua_new((cocos2d::CCTouch)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTouch");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTouch */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouch_new00_local
static int tolua_Cocos2d_cocos2d_CCTouch_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTouch* tolua_ret = (cocos2d::CCTouch*)  Mtolua_new((cocos2d::CCTouch)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTouch");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTouch */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouch_new01
static int tolua_Cocos2d_cocos2d_CCTouch_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  int nViewId = ((int)  tolua_tonumber(tolua_S,2,0));
  float x = ((float)  tolua_tonumber(tolua_S,3,0));
  float y = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCTouch* tolua_ret = (cocos2d::CCTouch*)  Mtolua_new((cocos2d::CCTouch)(nViewId,x,y));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTouch");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCTouch_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTouch */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouch_new01_local
static int tolua_Cocos2d_cocos2d_CCTouch_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  int nViewId = ((int)  tolua_tonumber(tolua_S,2,0));
  float x = ((float)  tolua_tonumber(tolua_S,3,0));
  float y = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCTouch* tolua_ret = (cocos2d::CCTouch*)  Mtolua_new((cocos2d::CCTouch)(nViewId,x,y));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTouch");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCTouch_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: locationInView of class  cocos2d::CCTouch */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouch_locationInView00
static int tolua_Cocos2d_cocos2d_CCTouch_locationInView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouch* self = (cocos2d::CCTouch*)  tolua_tousertype(tolua_S,1,0);
  int nViewId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'locationInView'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->locationInView(nViewId);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'locationInView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: previousLocationInView of class  cocos2d::CCTouch */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouch_previousLocationInView00
static int tolua_Cocos2d_cocos2d_CCTouch_previousLocationInView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouch* self = (cocos2d::CCTouch*)  tolua_tousertype(tolua_S,1,0);
  int nViewId = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'previousLocationInView'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->previousLocationInView(nViewId);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'previousLocationInView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: view of class  cocos2d::CCTouch */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouch_view00
static int tolua_Cocos2d_cocos2d_CCTouch_view00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouch* self = (cocos2d::CCTouch*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'view'", NULL);
#endif
  {
   int tolua_ret = (int)  self->view();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'view'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTouchInfo of class  cocos2d::CCTouch */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouch_SetTouchInfo00
static int tolua_Cocos2d_cocos2d_CCTouch_SetTouchInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouch* self = (cocos2d::CCTouch*)  tolua_tousertype(tolua_S,1,0);
  int nViewId = ((int)  tolua_tonumber(tolua_S,2,0));
  float x = ((float)  tolua_tonumber(tolua_S,3,0));
  float y = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTouchInfo'", NULL);
#endif
  {
   self->SetTouchInfo(nViewId,x,y);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTouchInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_new00
static int tolua_Cocos2d_cocos2d_CCSet_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSet* tolua_ret = (cocos2d::CCSet*)  Mtolua_new((cocos2d::CCSet)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSet");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_new00_local
static int tolua_Cocos2d_cocos2d_CCSet_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSet* tolua_ret = (cocos2d::CCSet*)  Mtolua_new((cocos2d::CCSet)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSet");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_new01
static int tolua_Cocos2d_cocos2d_CCSet_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCSet",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const cocos2d::CCSet* rSetObject = ((const cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCSet* tolua_ret = (cocos2d::CCSet*)  Mtolua_new((cocos2d::CCSet)(*rSetObject));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSet");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSet_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_new01_local
static int tolua_Cocos2d_cocos2d_CCSet_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCSet",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const cocos2d::CCSet* rSetObject = ((const cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCSet* tolua_ret = (cocos2d::CCSet*)  Mtolua_new((cocos2d::CCSet)(*rSetObject));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSet");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSet_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_delete00
static int tolua_Cocos2d_cocos2d_CCSet_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_copy00
static int tolua_Cocos2d_cocos2d_CCSet_copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
  {
   cocos2d::CCSet* tolua_ret = (cocos2d::CCSet*)  self->copy();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSet");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: mutableCopy of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_mutableCopy00
static int tolua_Cocos2d_cocos2d_CCSet_mutableCopy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mutableCopy'", NULL);
#endif
  {
   cocos2d::CCSet* tolua_ret = (cocos2d::CCSet*)  self->mutableCopy();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSet");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'mutableCopy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_count00
static int tolua_Cocos2d_cocos2d_CCSet_count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count'", NULL);
#endif
  {
   int tolua_ret = (int)  self->count();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObject of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_addObject00
static int tolua_Cocos2d_cocos2d_CCSet_addObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObject'", NULL);
#endif
  {
   self->addObject(pObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObject of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_removeObject00
static int tolua_Cocos2d_cocos2d_CCSet_removeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObject'", NULL);
#endif
  {
   self->removeObject(pObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: containsObject of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_containsObject00
static int tolua_Cocos2d_cocos2d_CCSet_containsObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'containsObject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->containsObject(pObject);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'containsObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: begin of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_begin00
static int tolua_Cocos2d_cocos2d_CCSet_begin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'begin'", NULL);
#endif
  {
    std::set<cocos2d::CCObject*>::iterator tolua_ret = (  std::set<cocos2d::CCObject*>::iterator)  self->begin();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::set<cocos2d::CCObject*>::iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::set<cocos2d::CCObject*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::set<cocos2d::CCObject*>::iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::set<cocos2d::CCObject*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'begin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: end of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_end00
static int tolua_Cocos2d_cocos2d_CCSet_end00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'end'", NULL);
#endif
  {
    std::set<cocos2d::CCObject*>::iterator tolua_ret = (  std::set<cocos2d::CCObject*>::iterator)  self->end();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::set<cocos2d::CCObject*>::iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::set<cocos2d::CCObject*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::set<cocos2d::CCObject*>::iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::set<cocos2d::CCObject*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'end'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: anyObject of class  cocos2d::CCSet */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSet_anyObject00
static int tolua_Cocos2d_cocos2d_CCSet_anyObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSet* self = (cocos2d::CCSet*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'anyObject'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->anyObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'anyObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: m_type of class  cocos2d::ccTouchHandlerHelperData */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccTouchHandlerHelperData_m_type
static int tolua_get_cocos2d__ccTouchHandlerHelperData_m_type(lua_State* tolua_S)
{
  cocos2d::ccTouchHandlerHelperData* self = (cocos2d::ccTouchHandlerHelperData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_type'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->m_type);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: m_type of class  cocos2d::ccTouchHandlerHelperData */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccTouchHandlerHelperData_m_type
static int tolua_set_cocos2d__ccTouchHandlerHelperData_m_type(lua_State* tolua_S)
{
  cocos2d::ccTouchHandlerHelperData* self = (cocos2d::ccTouchHandlerHelperData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'm_type'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->m_type = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: touchesBegan of class  cocos2d::EGLTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesBegan00
static int tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::EGLTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::EGLTouchDelegate* self = (cocos2d::EGLTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* touches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touchesBegan'", NULL);
#endif
  {
   self->touchesBegan(touches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touchesBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: touchesMoved of class  cocos2d::EGLTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesMoved00
static int tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::EGLTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::EGLTouchDelegate* self = (cocos2d::EGLTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* touches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touchesMoved'", NULL);
#endif
  {
   self->touchesMoved(touches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touchesMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: touchesEnded of class  cocos2d::EGLTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesEnded00
static int tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::EGLTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::EGLTouchDelegate* self = (cocos2d::EGLTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* touches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touchesEnded'", NULL);
#endif
  {
   self->touchesEnded(touches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touchesEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: touchesCancelled of class  cocos2d::EGLTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesCancelled00
static int tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::EGLTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::EGLTouchDelegate* self = (cocos2d::EGLTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* touches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touchesCancelled'", NULL);
#endif
  {
   self->touchesCancelled(touches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touchesCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::EGLTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_EGLTouchDelegate_delete00
static int tolua_Cocos2d_cocos2d_EGLTouchDelegate_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::EGLTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::EGLTouchDelegate* self = (cocos2d::EGLTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_delete00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_init00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_new00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTouchDispatcher* tolua_ret = (cocos2d::CCTouchDispatcher*)  Mtolua_new((cocos2d::CCTouchDispatcher)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTouchDispatcher");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_new00_local
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTouchDispatcher* tolua_ret = (cocos2d::CCTouchDispatcher*)  Mtolua_new((cocos2d::CCTouchDispatcher)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTouchDispatcher");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDispatchEvents of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_isDispatchEvents00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_isDispatchEvents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDispatchEvents'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDispatchEvents();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDispatchEvents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDispatchEvents of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_setDispatchEvents00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_setDispatchEvents00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  bool bDispatchEvents = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDispatchEvents'", NULL);
#endif
  {
   self->setDispatchEvents(bDispatchEvents);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDispatchEvents'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addStandardDelegate of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_addStandardDelegate00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_addStandardDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouchDelegate* pDelegate = ((cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,2,0));
  int nPriority = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addStandardDelegate'", NULL);
#endif
  {
   self->addStandardDelegate(pDelegate,nPriority);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addStandardDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addTargetedDelegate of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_addTargetedDelegate00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_addTargetedDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouchDelegate* pDelegate = ((cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,2,0));
  int nPriority = ((int)  tolua_tonumber(tolua_S,3,0));
  bool bSwallowsTouches = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addTargetedDelegate'", NULL);
#endif
  {
   self->addTargetedDelegate(pDelegate,nPriority,bSwallowsTouches);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addTargetedDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeDelegate of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_removeDelegate00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_removeDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouchDelegate* pDelegate = ((cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeDelegate'", NULL);
#endif
  {
   self->removeDelegate(pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllDelegates of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_removeAllDelegates00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_removeAllDelegates00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllDelegates'", NULL);
#endif
  {
   self->removeAllDelegates();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllDelegates'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPriority of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_setPriority00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_setPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  int nPriority = ((int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCTouchDelegate* pDelegate = ((cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPriority'", NULL);
#endif
  {
   self->setPriority(nPriority,pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: touches of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_touches00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_touches00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touches'", NULL);
#endif
  {
   self->touches(pTouches,pEvent,uIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touches'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: touchesBegan of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesBegan00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* touches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touchesBegan'", NULL);
#endif
  {
   self->touchesBegan(touches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touchesBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: touchesMoved of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesMoved00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* touches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touchesMoved'", NULL);
#endif
  {
   self->touchesMoved(touches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touchesMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: touchesEnded of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesEnded00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* touches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touchesEnded'", NULL);
#endif
  {
   self->touchesEnded(touches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touchesEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: touchesCancelled of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesCancelled00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* touches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'touchesCancelled'", NULL);
#endif
  {
   self->touchesCancelled(touches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'touchesCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedDispatcher of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDispatcher_sharedDispatcher00
static int tolua_Cocos2d_cocos2d_CCTouchDispatcher_sharedDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTouchDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTouchDispatcher* tolua_ret = (cocos2d::CCTouchDispatcher*)  cocos2d::CCTouchDispatcher::sharedDispatcher();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTouchDispatcher");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __EGLTouchDelegate__ of class  cocos2d::CCTouchDispatcher */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTouchDispatcher___EGLTouchDelegate__
static int tolua_get_cocos2d__CCTouchDispatcher___EGLTouchDelegate__(lua_State* tolua_S)
{
  cocos2d::CCTouchDispatcher* self = (cocos2d::CCTouchDispatcher*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__EGLTouchDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::EGLTouchDelegate*>(self), "cocos2d::EGLTouchDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::EGLTouchDelegate*)self), "cocos2d::EGLTouchDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_new00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionScene* tolua_ret = (cocos2d::CCTransitionScene*)  Mtolua_new((cocos2d::CCTransitionScene)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionScene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionScene_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionScene* tolua_ret = (cocos2d::CCTransitionScene*)  Mtolua_new((cocos2d::CCTransitionScene)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionScene");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionScene* self = (cocos2d::CCTransitionScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_draw00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionScene* self = (cocos2d::CCTransitionScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionScene* self = (cocos2d::CCTransitionScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_onExit00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionScene* self = (cocos2d::CCTransitionScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: cleanup of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_cleanup00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_cleanup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionScene* self = (cocos2d::CCTransitionScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'cleanup'", NULL);
#endif
  {
   self->cleanup();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'cleanup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionScene* tolua_ret = (cocos2d::CCTransitionScene*)  cocos2d::CCTransitionScene::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionScene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionScene* self = (cocos2d::CCTransitionScene*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(t,scene);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: finish of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_finish00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_finish00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionScene* self = (cocos2d::CCTransitionScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'finish'", NULL);
#endif
  {
   self->finish();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'finish'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: hideOutShowIn of class  cocos2d::CCTransitionScene */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionScene_hideOutShowIn00
static int tolua_Cocos2d_cocos2d_CCTransitionScene_hideOutShowIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionScene* self = (cocos2d::CCTransitionScene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'hideOutShowIn'", NULL);
#endif
  {
   self->hideOutShowIn();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'hideOutShowIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionSceneOriented */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_new00
static int tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSceneOriented",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSceneOriented* tolua_ret = (cocos2d::CCTransitionSceneOriented*)  Mtolua_new((cocos2d::CCTransitionSceneOriented)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSceneOriented");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionSceneOriented */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSceneOriented",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSceneOriented* tolua_ret = (cocos2d::CCTransitionSceneOriented*)  Mtolua_new((cocos2d::CCTransitionSceneOriented)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSceneOriented");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionSceneOriented */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSceneOriented",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSceneOriented* self = (cocos2d::CCTransitionSceneOriented*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionSceneOriented */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSceneOriented",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::tOrientation orientation = ((cocos2d::tOrientation) (int)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCTransitionSceneOriented* tolua_ret = (cocos2d::CCTransitionSceneOriented*)  cocos2d::CCTransitionSceneOriented::transitionWithDuration(t,scene,orientation);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSceneOriented");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCTransitionSceneOriented */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSceneOriented",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSceneOriented* self = (cocos2d::CCTransitionSceneOriented*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::tOrientation orientation = ((cocos2d::tOrientation) (int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(t,scene,orientation);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionRotoZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_new00
static int tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionRotoZoom",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionRotoZoom* tolua_ret = (cocos2d::CCTransitionRotoZoom*)  Mtolua_new((cocos2d::CCTransitionRotoZoom)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionRotoZoom");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionRotoZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionRotoZoom",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionRotoZoom* tolua_ret = (cocos2d::CCTransitionRotoZoom*)  Mtolua_new((cocos2d::CCTransitionRotoZoom)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionRotoZoom");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionRotoZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionRotoZoom",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionRotoZoom* self = (cocos2d::CCTransitionRotoZoom*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionRotoZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionRotoZoom",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionRotoZoom* self = (cocos2d::CCTransitionRotoZoom*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionRotoZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionRotoZoom",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionRotoZoom* tolua_ret = (cocos2d::CCTransitionRotoZoom*)  cocos2d::CCTransitionRotoZoom::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionRotoZoom");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionJumpZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_new00
static int tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionJumpZoom",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionJumpZoom* tolua_ret = (cocos2d::CCTransitionJumpZoom*)  Mtolua_new((cocos2d::CCTransitionJumpZoom)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionJumpZoom");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionJumpZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionJumpZoom",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionJumpZoom* tolua_ret = (cocos2d::CCTransitionJumpZoom*)  Mtolua_new((cocos2d::CCTransitionJumpZoom)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionJumpZoom");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionJumpZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionJumpZoom",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionJumpZoom* self = (cocos2d::CCTransitionJumpZoom*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionJumpZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionJumpZoom",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionJumpZoom* self = (cocos2d::CCTransitionJumpZoom*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionJumpZoom */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionJumpZoom",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionJumpZoom* tolua_ret = (cocos2d::CCTransitionJumpZoom*)  cocos2d::CCTransitionJumpZoom::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionJumpZoom");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionMoveInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInL_new00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInL_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionMoveInL* tolua_ret = (cocos2d::CCTransitionMoveInL*)  Mtolua_new((cocos2d::CCTransitionMoveInL)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInL");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionMoveInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInL_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInL_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionMoveInL* tolua_ret = (cocos2d::CCTransitionMoveInL*)  Mtolua_new((cocos2d::CCTransitionMoveInL)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInL");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionMoveInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInL_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInL_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInL* self = (cocos2d::CCTransitionMoveInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initScenes of class  cocos2d::CCTransitionMoveInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInL_initScenes00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInL_initScenes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInL* self = (cocos2d::CCTransitionMoveInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initScenes'", NULL);
#endif
  {
   self->initScenes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initScenes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCTransitionMoveInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInL_action00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInL_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInL* self = (cocos2d::CCTransitionMoveInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'action'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: easeActionWithAction of class  cocos2d::CCTransitionMoveInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInL_easeActionWithAction00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInL_easeActionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInL",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInL* self = (cocos2d::CCTransitionMoveInL*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* action = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'easeActionWithAction'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->easeActionWithAction(action);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'easeActionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionMoveInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInL_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInL_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInL* self = (cocos2d::CCTransitionMoveInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionMoveInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInL_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInL_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInL",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionMoveInL* tolua_ret = (cocos2d::CCTransitionMoveInL*)  cocos2d::CCTransitionMoveInL::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInL");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTransitionEaseScene__ of class  cocos2d::CCTransitionMoveInL */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTransitionMoveInL___CCTransitionEaseScene__
static int tolua_get_cocos2d__CCTransitionMoveInL___CCTransitionEaseScene__(lua_State* tolua_S)
{
  cocos2d::CCTransitionMoveInL* self = (cocos2d::CCTransitionMoveInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTransitionEaseScene__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCTransitionEaseScene*>(self), "CCTransitionEaseScene");
#else
   tolua_pushusertype(tolua_S,(void*)((CCTransitionEaseScene*)self), "CCTransitionEaseScene");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionMoveInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInR_new00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInR_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionMoveInR* tolua_ret = (cocos2d::CCTransitionMoveInR*)  Mtolua_new((cocos2d::CCTransitionMoveInR)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInR");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionMoveInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInR_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInR_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionMoveInR* tolua_ret = (cocos2d::CCTransitionMoveInR*)  Mtolua_new((cocos2d::CCTransitionMoveInR)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInR");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionMoveInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInR_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInR_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInR* self = (cocos2d::CCTransitionMoveInR*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initScenes of class  cocos2d::CCTransitionMoveInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInR_initScenes00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInR_initScenes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInR* self = (cocos2d::CCTransitionMoveInR*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initScenes'", NULL);
#endif
  {
   self->initScenes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initScenes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionMoveInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInR_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInR_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInR",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionMoveInR* tolua_ret = (cocos2d::CCTransitionMoveInR*)  cocos2d::CCTransitionMoveInR::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInR");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionMoveInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInT_new00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInT_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionMoveInT* tolua_ret = (cocos2d::CCTransitionMoveInT*)  Mtolua_new((cocos2d::CCTransitionMoveInT)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInT");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionMoveInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInT_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInT_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionMoveInT* tolua_ret = (cocos2d::CCTransitionMoveInT*)  Mtolua_new((cocos2d::CCTransitionMoveInT)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInT");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionMoveInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInT_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInT_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInT* self = (cocos2d::CCTransitionMoveInT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initScenes of class  cocos2d::CCTransitionMoveInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInT_initScenes00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInT_initScenes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInT* self = (cocos2d::CCTransitionMoveInT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initScenes'", NULL);
#endif
  {
   self->initScenes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initScenes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionMoveInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInT_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInT_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInT",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionMoveInT* tolua_ret = (cocos2d::CCTransitionMoveInT*)  cocos2d::CCTransitionMoveInT::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInT");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionMoveInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInB_new00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInB_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionMoveInB* tolua_ret = (cocos2d::CCTransitionMoveInB*)  Mtolua_new((cocos2d::CCTransitionMoveInB)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInB");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionMoveInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInB_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInB_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionMoveInB* tolua_ret = (cocos2d::CCTransitionMoveInB*)  Mtolua_new((cocos2d::CCTransitionMoveInB)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInB");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionMoveInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInB_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInB_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInB* self = (cocos2d::CCTransitionMoveInB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initScenes of class  cocos2d::CCTransitionMoveInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInB_initScenes00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInB_initScenes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionMoveInB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionMoveInB* self = (cocos2d::CCTransitionMoveInB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initScenes'", NULL);
#endif
  {
   self->initScenes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initScenes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionMoveInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionMoveInB_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionMoveInB_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionMoveInB",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionMoveInB* tolua_ret = (cocos2d::CCTransitionMoveInB*)  cocos2d::CCTransitionMoveInB::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionMoveInB");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionSlideInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInL_new00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInL_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSlideInL* tolua_ret = (cocos2d::CCTransitionSlideInL*)  Mtolua_new((cocos2d::CCTransitionSlideInL)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInL");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionSlideInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInL_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInL_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSlideInL* tolua_ret = (cocos2d::CCTransitionSlideInL*)  Mtolua_new((cocos2d::CCTransitionSlideInL)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInL");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionSlideInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInL_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInL_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInL* self = (cocos2d::CCTransitionSlideInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initScenes of class  cocos2d::CCTransitionSlideInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInL_initScenes00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInL_initScenes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInL* self = (cocos2d::CCTransitionSlideInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initScenes'", NULL);
#endif
  {
   self->initScenes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initScenes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCTransitionSlideInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInL_action00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInL_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInL* self = (cocos2d::CCTransitionSlideInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'action'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionSlideInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInL_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInL_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInL* self = (cocos2d::CCTransitionSlideInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: easeActionWithAction of class  cocos2d::CCTransitionSlideInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInL_easeActionWithAction00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInL_easeActionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInL",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInL* self = (cocos2d::CCTransitionSlideInL*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* action = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'easeActionWithAction'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->easeActionWithAction(action);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'easeActionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionSlideInL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInL_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInL_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInL",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionSlideInL* tolua_ret = (cocos2d::CCTransitionSlideInL*)  cocos2d::CCTransitionSlideInL::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInL");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTransitionEaseScene__ of class  cocos2d::CCTransitionSlideInL */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTransitionSlideInL___CCTransitionEaseScene__
static int tolua_get_cocos2d__CCTransitionSlideInL___CCTransitionEaseScene__(lua_State* tolua_S)
{
  cocos2d::CCTransitionSlideInL* self = (cocos2d::CCTransitionSlideInL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTransitionEaseScene__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCTransitionEaseScene*>(self), "CCTransitionEaseScene");
#else
   tolua_pushusertype(tolua_S,(void*)((CCTransitionEaseScene*)self), "CCTransitionEaseScene");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionSlideInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInR_new00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInR_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSlideInR* tolua_ret = (cocos2d::CCTransitionSlideInR*)  Mtolua_new((cocos2d::CCTransitionSlideInR)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInR");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionSlideInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInR_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInR_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSlideInR* tolua_ret = (cocos2d::CCTransitionSlideInR*)  Mtolua_new((cocos2d::CCTransitionSlideInR)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInR");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionSlideInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInR_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInR_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInR* self = (cocos2d::CCTransitionSlideInR*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initScenes of class  cocos2d::CCTransitionSlideInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInR_initScenes00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInR_initScenes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInR* self = (cocos2d::CCTransitionSlideInR*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initScenes'", NULL);
#endif
  {
   self->initScenes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initScenes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCTransitionSlideInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInR_action00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInR_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInR* self = (cocos2d::CCTransitionSlideInR*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'action'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionSlideInR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInR_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInR_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInR",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionSlideInR* tolua_ret = (cocos2d::CCTransitionSlideInR*)  cocos2d::CCTransitionSlideInR::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInR");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionSlideInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInB_new00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInB_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSlideInB* tolua_ret = (cocos2d::CCTransitionSlideInB*)  Mtolua_new((cocos2d::CCTransitionSlideInB)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInB");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionSlideInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInB_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInB_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSlideInB* tolua_ret = (cocos2d::CCTransitionSlideInB*)  Mtolua_new((cocos2d::CCTransitionSlideInB)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInB");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionSlideInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInB_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInB_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInB* self = (cocos2d::CCTransitionSlideInB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initScenes of class  cocos2d::CCTransitionSlideInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInB_initScenes00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInB_initScenes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInB* self = (cocos2d::CCTransitionSlideInB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initScenes'", NULL);
#endif
  {
   self->initScenes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initScenes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCTransitionSlideInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInB_action00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInB_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInB",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInB* self = (cocos2d::CCTransitionSlideInB*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'action'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionSlideInB */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInB_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInB_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInB",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionSlideInB* tolua_ret = (cocos2d::CCTransitionSlideInB*)  cocos2d::CCTransitionSlideInB::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInB");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionSlideInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInT_new00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInT_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSlideInT* tolua_ret = (cocos2d::CCTransitionSlideInT*)  Mtolua_new((cocos2d::CCTransitionSlideInT)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInT");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionSlideInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInT_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInT_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSlideInT* tolua_ret = (cocos2d::CCTransitionSlideInT*)  Mtolua_new((cocos2d::CCTransitionSlideInT)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInT");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionSlideInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInT_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInT_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInT* self = (cocos2d::CCTransitionSlideInT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initScenes of class  cocos2d::CCTransitionSlideInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInT_initScenes00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInT_initScenes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInT* self = (cocos2d::CCTransitionSlideInT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initScenes'", NULL);
#endif
  {
   self->initScenes();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initScenes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCTransitionSlideInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInT_action00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInT_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSlideInT",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSlideInT* self = (cocos2d::CCTransitionSlideInT*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'action'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionSlideInT */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSlideInT_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionSlideInT_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSlideInT",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionSlideInT* tolua_ret = (cocos2d::CCTransitionSlideInT*)  cocos2d::CCTransitionSlideInT::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSlideInT");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionShrinkGrow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_new00
static int tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionShrinkGrow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionShrinkGrow* tolua_ret = (cocos2d::CCTransitionShrinkGrow*)  Mtolua_new((cocos2d::CCTransitionShrinkGrow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionShrinkGrow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionShrinkGrow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionShrinkGrow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionShrinkGrow* tolua_ret = (cocos2d::CCTransitionShrinkGrow*)  Mtolua_new((cocos2d::CCTransitionShrinkGrow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionShrinkGrow");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionShrinkGrow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionShrinkGrow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionShrinkGrow* self = (cocos2d::CCTransitionShrinkGrow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionShrinkGrow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionShrinkGrow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionShrinkGrow* self = (cocos2d::CCTransitionShrinkGrow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: easeActionWithAction of class  cocos2d::CCTransitionShrinkGrow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_easeActionWithAction00
static int tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_easeActionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionShrinkGrow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionShrinkGrow* self = (cocos2d::CCTransitionShrinkGrow*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* action = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'easeActionWithAction'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->easeActionWithAction(action);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'easeActionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionShrinkGrow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionShrinkGrow",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionShrinkGrow* tolua_ret = (cocos2d::CCTransitionShrinkGrow*)  cocos2d::CCTransitionShrinkGrow::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionShrinkGrow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTransitionEaseScene__ of class  cocos2d::CCTransitionShrinkGrow */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTransitionShrinkGrow___CCTransitionEaseScene__
static int tolua_get_cocos2d__CCTransitionShrinkGrow___CCTransitionEaseScene__(lua_State* tolua_S)
{
  cocos2d::CCTransitionShrinkGrow* self = (cocos2d::CCTransitionShrinkGrow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTransitionEaseScene__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCTransitionEaseScene*>(self), "CCTransitionEaseScene");
#else
   tolua_pushusertype(tolua_S,(void*)((CCTransitionEaseScene*)self), "CCTransitionEaseScene");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipX_new00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipX_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFlipX* tolua_ret = (cocos2d::CCTransitionFlipX*)  Mtolua_new((cocos2d::CCTransitionFlipX)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFlipX");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipX_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionFlipX_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFlipX* tolua_ret = (cocos2d::CCTransitionFlipX*)  Mtolua_new((cocos2d::CCTransitionFlipX)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFlipX");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipX_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipX_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFlipX* self = (cocos2d::CCTransitionFlipX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipX_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipX_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFlipX* self = (cocos2d::CCTransitionFlipX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipX_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipX_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFlipX",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* s = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::tOrientation o = ((cocos2d::tOrientation) (int)  tolua_tonumber(tolua_S,4,cocos2d::kOrientationRightOver));
  {
   cocos2d::CCTransitionFlipX* tolua_ret = (cocos2d::CCTransitionFlipX*)  cocos2d::CCTransitionFlipX::transitionWithDuration(t,s,o);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFlipX");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipY_new00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipY_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFlipY* tolua_ret = (cocos2d::CCTransitionFlipY*)  Mtolua_new((cocos2d::CCTransitionFlipY)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFlipY");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipY_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionFlipY_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFlipY* tolua_ret = (cocos2d::CCTransitionFlipY*)  Mtolua_new((cocos2d::CCTransitionFlipY)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFlipY");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipY_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipY_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFlipY* self = (cocos2d::CCTransitionFlipY*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipY_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipY_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFlipY* self = (cocos2d::CCTransitionFlipY*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipY_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipY_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFlipY",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* s = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::tOrientation o = ((cocos2d::tOrientation) (int)  tolua_tonumber(tolua_S,4,cocos2d::kOrientationUpOver));
  {
   cocos2d::CCTransitionFlipY* tolua_ret = (cocos2d::CCTransitionFlipY*)  cocos2d::CCTransitionFlipY::transitionWithDuration(t,s,o);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFlipY");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_new00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFlipAngular",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFlipAngular* tolua_ret = (cocos2d::CCTransitionFlipAngular*)  Mtolua_new((cocos2d::CCTransitionFlipAngular)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFlipAngular");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFlipAngular",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFlipAngular* tolua_ret = (cocos2d::CCTransitionFlipAngular*)  Mtolua_new((cocos2d::CCTransitionFlipAngular)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFlipAngular");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFlipAngular",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFlipAngular* self = (cocos2d::CCTransitionFlipAngular*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFlipAngular",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFlipAngular* self = (cocos2d::CCTransitionFlipAngular*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFlipAngular",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* s = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::tOrientation o = ((cocos2d::tOrientation) (int)  tolua_tonumber(tolua_S,4,cocos2d::kOrientationRightOver));
  {
   cocos2d::CCTransitionFlipAngular* tolua_ret = (cocos2d::CCTransitionFlipAngular*)  cocos2d::CCTransitionFlipAngular::transitionWithDuration(t,s,o);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFlipAngular");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionZoomFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_new00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionZoomFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionZoomFlipX* tolua_ret = (cocos2d::CCTransitionZoomFlipX*)  Mtolua_new((cocos2d::CCTransitionZoomFlipX)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionZoomFlipX");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionZoomFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionZoomFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionZoomFlipX* tolua_ret = (cocos2d::CCTransitionZoomFlipX*)  Mtolua_new((cocos2d::CCTransitionZoomFlipX)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionZoomFlipX");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionZoomFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionZoomFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionZoomFlipX* self = (cocos2d::CCTransitionZoomFlipX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionZoomFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionZoomFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionZoomFlipX* self = (cocos2d::CCTransitionZoomFlipX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionZoomFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionZoomFlipX",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* s = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::tOrientation o = ((cocos2d::tOrientation) (int)  tolua_tonumber(tolua_S,4,cocos2d::kOrientationRightOver));
  {
   cocos2d::CCTransitionZoomFlipX* tolua_ret = (cocos2d::CCTransitionZoomFlipX*)  cocos2d::CCTransitionZoomFlipX::transitionWithDuration(t,s,o);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionZoomFlipX");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionZoomFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_new00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionZoomFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionZoomFlipY* tolua_ret = (cocos2d::CCTransitionZoomFlipY*)  Mtolua_new((cocos2d::CCTransitionZoomFlipY)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionZoomFlipY");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionZoomFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionZoomFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionZoomFlipY* tolua_ret = (cocos2d::CCTransitionZoomFlipY*)  Mtolua_new((cocos2d::CCTransitionZoomFlipY)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionZoomFlipY");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionZoomFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionZoomFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionZoomFlipY* self = (cocos2d::CCTransitionZoomFlipY*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionZoomFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionZoomFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionZoomFlipY* self = (cocos2d::CCTransitionZoomFlipY*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionZoomFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionZoomFlipY",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* s = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::tOrientation o = ((cocos2d::tOrientation) (int)  tolua_tonumber(tolua_S,4,cocos2d::kOrientationUpOver));
  {
   cocos2d::CCTransitionZoomFlipY* tolua_ret = (cocos2d::CCTransitionZoomFlipY*)  cocos2d::CCTransitionZoomFlipY::transitionWithDuration(t,s,o);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionZoomFlipY");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionZoomFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_new00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionZoomFlipAngular",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionZoomFlipAngular* tolua_ret = (cocos2d::CCTransitionZoomFlipAngular*)  Mtolua_new((cocos2d::CCTransitionZoomFlipAngular)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionZoomFlipAngular");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionZoomFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionZoomFlipAngular",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionZoomFlipAngular* tolua_ret = (cocos2d::CCTransitionZoomFlipAngular*)  Mtolua_new((cocos2d::CCTransitionZoomFlipAngular)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionZoomFlipAngular");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionZoomFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionZoomFlipAngular",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionZoomFlipAngular* self = (cocos2d::CCTransitionZoomFlipAngular*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionZoomFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionZoomFlipAngular",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionZoomFlipAngular* self = (cocos2d::CCTransitionZoomFlipAngular*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionZoomFlipAngular */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionZoomFlipAngular",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* s = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::tOrientation o = ((cocos2d::tOrientation) (int)  tolua_tonumber(tolua_S,4,cocos2d::kOrientationRightOver));
  {
   cocos2d::CCTransitionZoomFlipAngular* tolua_ret = (cocos2d::CCTransitionZoomFlipAngular*)  cocos2d::CCTransitionZoomFlipAngular::transitionWithDuration(t,s,o);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionZoomFlipAngular");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFade_new00
static int tolua_Cocos2d_cocos2d_CCTransitionFade_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFade* tolua_ret = (cocos2d::CCTransitionFade*)  Mtolua_new((cocos2d::CCTransitionFade)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFade");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFade_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionFade_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFade* tolua_ret = (cocos2d::CCTransitionFade*)  Mtolua_new((cocos2d::CCTransitionFade)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFade");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFade_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionFade_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFade* self = (cocos2d::CCTransitionFade*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFade_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionFade_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFade",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccColor3B",1,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime duration = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  const cocos2d::ccColor3B clr = ccBLACK;
  cocos2d::ccColor3B color = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,4,(void*)&clr));
  {
   cocos2d::CCTransitionFade* tolua_ret = (cocos2d::CCTransitionFade*)  cocos2d::CCTransitionFade::transitionWithDuration(duration,scene,color);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFade");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCTransitionFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFade_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionFade_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFade",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFade* self = (cocos2d::CCTransitionFade*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::ccColor3B color = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(t,scene,color);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCTransitionFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFade_initWithDuration01
static int tolua_Cocos2d_cocos2d_CCTransitionFade_initWithDuration01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFade",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCTransitionFade* self = (cocos2d::CCTransitionFade*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(t,scene);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCTransitionFade_initWithDuration00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFade_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionFade_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFade* self = (cocos2d::CCTransitionFade*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  cocos2d::CCTransitionFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFade_onExit00
static int tolua_Cocos2d_cocos2d_CCTransitionFade_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFade* self = (cocos2d::CCTransitionFade*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionCrossFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionCrossFade_new00
static int tolua_Cocos2d_cocos2d_CCTransitionCrossFade_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionCrossFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionCrossFade* tolua_ret = (cocos2d::CCTransitionCrossFade*)  Mtolua_new((cocos2d::CCTransitionCrossFade)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionCrossFade");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionCrossFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionCrossFade_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionCrossFade_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionCrossFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionCrossFade* tolua_ret = (cocos2d::CCTransitionCrossFade*)  Mtolua_new((cocos2d::CCTransitionCrossFade)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionCrossFade");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionCrossFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionCrossFade_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionCrossFade_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionCrossFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionCrossFade* self = (cocos2d::CCTransitionCrossFade*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCTransitionCrossFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionCrossFade_draw00
static int tolua_Cocos2d_cocos2d_CCTransitionCrossFade_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionCrossFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionCrossFade* self = (cocos2d::CCTransitionCrossFade*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionCrossFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionCrossFade_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionCrossFade_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionCrossFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionCrossFade* self = (cocos2d::CCTransitionCrossFade*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  cocos2d::CCTransitionCrossFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionCrossFade_onExit00
static int tolua_Cocos2d_cocos2d_CCTransitionCrossFade_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionCrossFade",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionCrossFade* self = (cocos2d::CCTransitionCrossFade*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionCrossFade */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionCrossFade_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionCrossFade_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionCrossFade",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionCrossFade* tolua_ret = (cocos2d::CCTransitionCrossFade*)  cocos2d::CCTransitionCrossFade::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionCrossFade");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_new00
static int tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionTurnOffTiles",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionTurnOffTiles* tolua_ret = (cocos2d::CCTransitionTurnOffTiles*)  Mtolua_new((cocos2d::CCTransitionTurnOffTiles)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionTurnOffTiles");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionTurnOffTiles",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionTurnOffTiles* tolua_ret = (cocos2d::CCTransitionTurnOffTiles*)  Mtolua_new((cocos2d::CCTransitionTurnOffTiles)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionTurnOffTiles");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionTurnOffTiles",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionTurnOffTiles* self = (cocos2d::CCTransitionTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionTurnOffTiles",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionTurnOffTiles* self = (cocos2d::CCTransitionTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: easeActionWithAction of class  cocos2d::CCTransitionTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_easeActionWithAction00
static int tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_easeActionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionTurnOffTiles",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionTurnOffTiles* self = (cocos2d::CCTransitionTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* action = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'easeActionWithAction'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->easeActionWithAction(action);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'easeActionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionTurnOffTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionTurnOffTiles* tolua_ret = (cocos2d::CCTransitionTurnOffTiles*)  cocos2d::CCTransitionTurnOffTiles::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionTurnOffTiles");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTransitionEaseScene__ of class  cocos2d::CCTransitionTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTransitionTurnOffTiles___CCTransitionEaseScene__
static int tolua_get_cocos2d__CCTransitionTurnOffTiles___CCTransitionEaseScene__(lua_State* tolua_S)
{
  cocos2d::CCTransitionTurnOffTiles* self = (cocos2d::CCTransitionTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTransitionEaseScene__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCTransitionEaseScene*>(self), "CCTransitionEaseScene");
#else
   tolua_pushusertype(tolua_S,(void*)((CCTransitionEaseScene*)self), "CCTransitionEaseScene");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitCols_new00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitCols_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSplitCols",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSplitCols* tolua_ret = (cocos2d::CCTransitionSplitCols*)  Mtolua_new((cocos2d::CCTransitionSplitCols)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSplitCols");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitCols_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionSplitCols_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSplitCols",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSplitCols* tolua_ret = (cocos2d::CCTransitionSplitCols*)  Mtolua_new((cocos2d::CCTransitionSplitCols)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSplitCols");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitCols_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitCols_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSplitCols",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSplitCols* self = (cocos2d::CCTransitionSplitCols*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCTransitionSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitCols_action00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitCols_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSplitCols",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSplitCols* self = (cocos2d::CCTransitionSplitCols*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'action'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitCols_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitCols_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSplitCols",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSplitCols* self = (cocos2d::CCTransitionSplitCols*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: easeActionWithAction of class  cocos2d::CCTransitionSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitCols_easeActionWithAction00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitCols_easeActionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSplitCols",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSplitCols* self = (cocos2d::CCTransitionSplitCols*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* action = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'easeActionWithAction'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->easeActionWithAction(action);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'easeActionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitCols_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitCols_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSplitCols",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionSplitCols* tolua_ret = (cocos2d::CCTransitionSplitCols*)  cocos2d::CCTransitionSplitCols::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSplitCols");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTransitionEaseScene__ of class  cocos2d::CCTransitionSplitCols */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTransitionSplitCols___CCTransitionEaseScene__
static int tolua_get_cocos2d__CCTransitionSplitCols___CCTransitionEaseScene__(lua_State* tolua_S)
{
  cocos2d::CCTransitionSplitCols* self = (cocos2d::CCTransitionSplitCols*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTransitionEaseScene__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCTransitionEaseScene*>(self), "CCTransitionEaseScene");
#else
   tolua_pushusertype(tolua_S,(void*)((CCTransitionEaseScene*)self), "CCTransitionEaseScene");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitRows_new00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitRows_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSplitRows",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSplitRows* tolua_ret = (cocos2d::CCTransitionSplitRows*)  Mtolua_new((cocos2d::CCTransitionSplitRows)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSplitRows");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitRows_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionSplitRows_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSplitRows",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionSplitRows* tolua_ret = (cocos2d::CCTransitionSplitRows*)  Mtolua_new((cocos2d::CCTransitionSplitRows)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSplitRows");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitRows_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitRows_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSplitRows",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSplitRows* self = (cocos2d::CCTransitionSplitRows*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCTransitionSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitRows_action00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitRows_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionSplitRows",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionSplitRows* self = (cocos2d::CCTransitionSplitRows*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'action'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionSplitRows_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionSplitRows_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionSplitRows",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionSplitRows* tolua_ret = (cocos2d::CCTransitionSplitRows*)  cocos2d::CCTransitionSplitRows::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionSplitRows");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionFadeTR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeTR_new00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeTR_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeTR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFadeTR* tolua_ret = (cocos2d::CCTransitionFadeTR*)  Mtolua_new((cocos2d::CCTransitionFadeTR)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeTR");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionFadeTR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeTR_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionFadeTR_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeTR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFadeTR* tolua_ret = (cocos2d::CCTransitionFadeTR*)  Mtolua_new((cocos2d::CCTransitionFadeTR)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeTR");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionFadeTR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeTR_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeTR_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeTR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeTR* self = (cocos2d::CCTransitionFadeTR*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCTransitionFadeTR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeTR_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeTR_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeTR",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeTR* self = (cocos2d::CCTransitionFadeTR*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize size = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'actionWithSize'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->actionWithSize(size);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionFadeTR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeTR_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeTR_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeTR",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeTR* self = (cocos2d::CCTransitionFadeTR*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: easeActionWithAction of class  cocos2d::CCTransitionFadeTR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeTR_easeActionWithAction00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeTR_easeActionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeTR",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeTR* self = (cocos2d::CCTransitionFadeTR*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* action = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'easeActionWithAction'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->easeActionWithAction(action);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'easeActionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionFadeTR */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeTR_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeTR_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeTR",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionFadeTR* tolua_ret = (cocos2d::CCTransitionFadeTR*)  cocos2d::CCTransitionFadeTR::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeTR");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTransitionEaseScene__ of class  cocos2d::CCTransitionFadeTR */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCTransitionFadeTR___CCTransitionEaseScene__
static int tolua_get_cocos2d__CCTransitionFadeTR___CCTransitionEaseScene__(lua_State* tolua_S)
{
  cocos2d::CCTransitionFadeTR* self = (cocos2d::CCTransitionFadeTR*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTransitionEaseScene__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<CCTransitionEaseScene*>(self), "CCTransitionEaseScene");
#else
   tolua_pushusertype(tolua_S,(void*)((CCTransitionEaseScene*)self), "CCTransitionEaseScene");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionFadeBL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeBL_new00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeBL_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeBL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFadeBL* tolua_ret = (cocos2d::CCTransitionFadeBL*)  Mtolua_new((cocos2d::CCTransitionFadeBL)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeBL");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionFadeBL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeBL_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionFadeBL_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeBL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFadeBL* tolua_ret = (cocos2d::CCTransitionFadeBL*)  Mtolua_new((cocos2d::CCTransitionFadeBL)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeBL");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionFadeBL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeBL_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeBL_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeBL",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeBL* self = (cocos2d::CCTransitionFadeBL*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCTransitionFadeBL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeBL_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeBL_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeBL",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeBL* self = (cocos2d::CCTransitionFadeBL*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize size = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'actionWithSize'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->actionWithSize(size);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionFadeBL */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeBL_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeBL_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeBL",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionFadeBL* tolua_ret = (cocos2d::CCTransitionFadeBL*)  cocos2d::CCTransitionFadeBL::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeBL");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionFadeUp */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeUp_new00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeUp_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeUp",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFadeUp* tolua_ret = (cocos2d::CCTransitionFadeUp*)  Mtolua_new((cocos2d::CCTransitionFadeUp)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeUp");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionFadeUp */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeUp_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionFadeUp_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeUp",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFadeUp* tolua_ret = (cocos2d::CCTransitionFadeUp*)  Mtolua_new((cocos2d::CCTransitionFadeUp)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeUp");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionFadeUp */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeUp_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeUp_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeUp",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeUp* self = (cocos2d::CCTransitionFadeUp*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCTransitionFadeUp */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeUp_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeUp_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeUp",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeUp* self = (cocos2d::CCTransitionFadeUp*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize size = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'actionWithSize'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->actionWithSize(size);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionFadeUp */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeUp_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeUp_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeUp",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionFadeUp* tolua_ret = (cocos2d::CCTransitionFadeUp*)  cocos2d::CCTransitionFadeUp::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeUp");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionFadeDown */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeDown_new00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeDown_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeDown",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFadeDown* tolua_ret = (cocos2d::CCTransitionFadeDown*)  Mtolua_new((cocos2d::CCTransitionFadeDown)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeDown");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionFadeDown */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeDown_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionFadeDown_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeDown",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionFadeDown* tolua_ret = (cocos2d::CCTransitionFadeDown*)  Mtolua_new((cocos2d::CCTransitionFadeDown)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeDown");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionFadeDown */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeDown_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeDown_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeDown",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeDown* self = (cocos2d::CCTransitionFadeDown*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCTransitionFadeDown */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeDown_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeDown_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionFadeDown",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionFadeDown* self = (cocos2d::CCTransitionFadeDown*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize size = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'actionWithSize'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->actionWithSize(size);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionFadeDown */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionFadeDown_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionFadeDown_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionFadeDown",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionFadeDown* tolua_ret = (cocos2d::CCTransitionFadeDown*)  cocos2d::CCTransitionFadeDown::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionFadeDown");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionPageTurn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionPageTurn_new00
static int tolua_Cocos2d_cocos2d_CCTransitionPageTurn_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionPageTurn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionPageTurn* tolua_ret = (cocos2d::CCTransitionPageTurn*)  Mtolua_new((cocos2d::CCTransitionPageTurn)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionPageTurn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionPageTurn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionPageTurn_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionPageTurn_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionPageTurn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionPageTurn* tolua_ret = (cocos2d::CCTransitionPageTurn*)  Mtolua_new((cocos2d::CCTransitionPageTurn)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionPageTurn");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionPageTurn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionPageTurn_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionPageTurn_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionPageTurn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionPageTurn* self = (cocos2d::CCTransitionPageTurn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionPageTurn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionPageTurn_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionPageTurn_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionPageTurn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  bool backwards = ((bool)  tolua_toboolean(tolua_S,4,0));
  {
   cocos2d::CCTransitionPageTurn* tolua_ret = (cocos2d::CCTransitionPageTurn*)  cocos2d::CCTransitionPageTurn::transitionWithDuration(t,scene,backwards);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionPageTurn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCTransitionPageTurn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionPageTurn_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionPageTurn_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionPageTurn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionPageTurn* self = (cocos2d::CCTransitionPageTurn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  bool backwards = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(t,scene,backwards);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCTransitionPageTurn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionPageTurn_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCTransitionPageTurn_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionPageTurn",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionPageTurn* self = (cocos2d::CCTransitionPageTurn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize vector = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'actionWithSize'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->actionWithSize(vector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionPageTurn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionPageTurn_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionPageTurn_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionPageTurn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionPageTurn* self = (cocos2d::CCTransitionPageTurn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionRadialCCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_new00
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionRadialCCW",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionRadialCCW* tolua_ret = (cocos2d::CCTransitionRadialCCW*)  Mtolua_new((cocos2d::CCTransitionRadialCCW)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionRadialCCW");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionRadialCCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionRadialCCW",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionRadialCCW* tolua_ret = (cocos2d::CCTransitionRadialCCW*)  Mtolua_new((cocos2d::CCTransitionRadialCCW)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionRadialCCW");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionRadialCCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionRadialCCW",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionRadialCCW* self = (cocos2d::CCTransitionRadialCCW*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCTransitionRadialCCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_onEnter00
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionRadialCCW",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionRadialCCW* self = (cocos2d::CCTransitionRadialCCW*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  cocos2d::CCTransitionRadialCCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_onExit00
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionRadialCCW",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionRadialCCW* self = (cocos2d::CCTransitionRadialCCW*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionRadialCCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionRadialCCW",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionRadialCCW* tolua_ret = (cocos2d::CCTransitionRadialCCW*)  cocos2d::CCTransitionRadialCCW::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionRadialCCW");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTransitionRadialCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCW_new00
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCW_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionRadialCW",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionRadialCW* tolua_ret = (cocos2d::CCTransitionRadialCW*)  Mtolua_new((cocos2d::CCTransitionRadialCW)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionRadialCW");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTransitionRadialCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCW_new00_local
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCW_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionRadialCW",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTransitionRadialCW* tolua_ret = (cocos2d::CCTransitionRadialCW*)  Mtolua_new((cocos2d::CCTransitionRadialCW)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionRadialCW");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCTransitionRadialCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCW_delete00
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCW_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTransitionRadialCW",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTransitionRadialCW* self = (cocos2d::CCTransitionRadialCW*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transitionWithDuration of class  cocos2d::CCTransitionRadialCW */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTransitionRadialCW_transitionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTransitionRadialCW_transitionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTransitionRadialCW",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccTime t = ((cocos2d::ccTime)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCScene* scene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCTransitionRadialCW* tolua_ret = (cocos2d::CCTransitionRadialCW*)  cocos2d::CCTransitionRadialCW::transitionWithDuration(t,scene);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTransitionRadialCW");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transitionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  cocos2d::ccColor3B */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor3B_unsigned_r
static int tolua_get_cocos2d__ccColor3B_unsigned_r(lua_State* tolua_S)
{
  cocos2d::ccColor3B* self = (cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  cocos2d::ccColor3B */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor3B_unsigned_r
static int tolua_set_cocos2d__ccColor3B_unsigned_r(lua_State* tolua_S)
{
  cocos2d::ccColor3B* self = (cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = (( unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  cocos2d::ccColor3B */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor3B_unsigned_g
static int tolua_get_cocos2d__ccColor3B_unsigned_g(lua_State* tolua_S)
{
  cocos2d::ccColor3B* self = (cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  cocos2d::ccColor3B */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor3B_unsigned_g
static int tolua_set_cocos2d__ccColor3B_unsigned_g(lua_State* tolua_S)
{
  cocos2d::ccColor3B* self = (cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = (( unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  cocos2d::ccColor3B */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor3B_unsigned_b
static int tolua_get_cocos2d__ccColor3B_unsigned_b(lua_State* tolua_S)
{
  cocos2d::ccColor3B* self = (cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  cocos2d::ccColor3B */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor3B_unsigned_b
static int tolua_set_cocos2d__ccColor3B_unsigned_b(lua_State* tolua_S)
{
  cocos2d::ccColor3B* self = (cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = (( unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccc3 */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccc300
static int tolua_Cocos2d_cocos2d_ccc300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned const char r = ((unsigned const char)  tolua_tonumber(tolua_S,1,0));
  unsigned const char g = ((unsigned const char)  tolua_tonumber(tolua_S,2,0));
  unsigned const char b = ((unsigned const char)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  cocos2d::ccc3(r,g,b);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccc3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  cocos2d::ccColor4B */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor4B_unsigned_r
static int tolua_get_cocos2d__ccColor4B_unsigned_r(lua_State* tolua_S)
{
  cocos2d::ccColor4B* self = (cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  cocos2d::ccColor4B */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor4B_unsigned_r
static int tolua_set_cocos2d__ccColor4B_unsigned_r(lua_State* tolua_S)
{
  cocos2d::ccColor4B* self = (cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = (( unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  cocos2d::ccColor4B */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor4B_unsigned_g
static int tolua_get_cocos2d__ccColor4B_unsigned_g(lua_State* tolua_S)
{
  cocos2d::ccColor4B* self = (cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  cocos2d::ccColor4B */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor4B_unsigned_g
static int tolua_set_cocos2d__ccColor4B_unsigned_g(lua_State* tolua_S)
{
  cocos2d::ccColor4B* self = (cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = (( unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  cocos2d::ccColor4B */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor4B_unsigned_b
static int tolua_get_cocos2d__ccColor4B_unsigned_b(lua_State* tolua_S)
{
  cocos2d::ccColor4B* self = (cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  cocos2d::ccColor4B */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor4B_unsigned_b
static int tolua_set_cocos2d__ccColor4B_unsigned_b(lua_State* tolua_S)
{
  cocos2d::ccColor4B* self = (cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = (( unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  cocos2d::ccColor4B */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor4B_unsigned_a
static int tolua_get_cocos2d__ccColor4B_unsigned_a(lua_State* tolua_S)
{
  cocos2d::ccColor4B* self = (cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  cocos2d::ccColor4B */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor4B_unsigned_a
static int tolua_set_cocos2d__ccColor4B_unsigned_a(lua_State* tolua_S)
{
  cocos2d::ccColor4B* self = (cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = (( unsigned char)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccc4 */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccc400
static int tolua_Cocos2d_cocos2d_ccc400(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned const char r = ((unsigned const char)  tolua_tonumber(tolua_S,1,0));
  unsigned const char g = ((unsigned const char)  tolua_tonumber(tolua_S,2,0));
  unsigned const char b = ((unsigned const char)  tolua_tonumber(tolua_S,3,0));
  unsigned const char o = ((unsigned const char)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::ccColor4B tolua_ret = (cocos2d::ccColor4B)  cocos2d::ccc4(r,g,b,o);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor4B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor4B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor4B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor4B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccc4'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: r of class  cocos2d::ccColor4F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor4F_r
static int tolua_get_cocos2d__ccColor4F_r(lua_State* tolua_S)
{
  cocos2d::ccColor4F* self = (cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->r);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: r of class  cocos2d::ccColor4F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor4F_r
static int tolua_set_cocos2d__ccColor4F_r(lua_State* tolua_S)
{
  cocos2d::ccColor4F* self = (cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'r'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->r = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: g of class  cocos2d::ccColor4F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor4F_g
static int tolua_get_cocos2d__ccColor4F_g(lua_State* tolua_S)
{
  cocos2d::ccColor4F* self = (cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->g);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: g of class  cocos2d::ccColor4F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor4F_g
static int tolua_set_cocos2d__ccColor4F_g(lua_State* tolua_S)
{
  cocos2d::ccColor4F* self = (cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'g'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->g = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: b of class  cocos2d::ccColor4F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor4F_b
static int tolua_get_cocos2d__ccColor4F_b(lua_State* tolua_S)
{
  cocos2d::ccColor4F* self = (cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->b);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: b of class  cocos2d::ccColor4F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor4F_b
static int tolua_set_cocos2d__ccColor4F_b(lua_State* tolua_S)
{
  cocos2d::ccColor4F* self = (cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'b'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->b = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: a of class  cocos2d::ccColor4F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccColor4F_a
static int tolua_get_cocos2d__ccColor4F_a(lua_State* tolua_S)
{
  cocos2d::ccColor4F* self = (cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->a);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: a of class  cocos2d::ccColor4F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccColor4F_a
static int tolua_set_cocos2d__ccColor4F_a(lua_State* tolua_S)
{
  cocos2d::ccColor4F* self = (cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'a'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->a = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccc4FFromccc3B */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccc4FFromccc3B00
static int tolua_Cocos2d_cocos2d_ccc4FFromccc3B00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccColor3B c = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::ccColor4F tolua_ret = (cocos2d::ccColor4F)  cocos2d::ccc4FFromccc3B(c);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor4F)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor4F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor4F));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor4F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccc4FFromccc3B'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccc4FFromccc4B */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccc4FFromccc4B00
static int tolua_Cocos2d_cocos2d_ccc4FFromccc4B00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccColor4B c = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::ccColor4F tolua_ret = (cocos2d::ccColor4F)  cocos2d::ccc4FFromccc4B(c);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor4F)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor4F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor4F));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor4F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccc4FFromccc4B'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccc4FEqual */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccc4FEqual00
static int tolua_Cocos2d_cocos2d_ccc4FEqual00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"cocos2d::ccColor4F",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4F",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccColor4F a = *((cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,1,0));
  cocos2d::ccColor4F b = *((cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  cocos2d::ccc4FEqual(a,b);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccc4FEqual'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  cocos2d::ccVertex2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccVertex2F_x
static int tolua_get_cocos2d__ccVertex2F_x(lua_State* tolua_S)
{
  cocos2d::ccVertex2F* self = (cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  cocos2d::ccVertex2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccVertex2F_x
static int tolua_set_cocos2d__ccVertex2F_x(lua_State* tolua_S)
{
  cocos2d::ccVertex2F* self = (cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  cocos2d::ccVertex2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccVertex2F_y
static int tolua_get_cocos2d__ccVertex2F_y(lua_State* tolua_S)
{
  cocos2d::ccVertex2F* self = (cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  cocos2d::ccVertex2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccVertex2F_y
static int tolua_set_cocos2d__ccVertex2F_y(lua_State* tolua_S)
{
  cocos2d::ccVertex2F* self = (cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::vertex2 */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_vertex200
static int tolua_Cocos2d_cocos2d_vertex200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const float x = ((const float)  tolua_tonumber(tolua_S,1,0));
  const float y = ((const float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::ccVertex2F tolua_ret = (cocos2d::ccVertex2F)  cocos2d::vertex2(x,y);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccVertex2F)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccVertex2F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccVertex2F));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccVertex2F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'vertex2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  cocos2d::ccVertex3F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccVertex3F_x
static int tolua_get_cocos2d__ccVertex3F_x(lua_State* tolua_S)
{
  cocos2d::ccVertex3F* self = (cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  cocos2d::ccVertex3F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccVertex3F_x
static int tolua_set_cocos2d__ccVertex3F_x(lua_State* tolua_S)
{
  cocos2d::ccVertex3F* self = (cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  cocos2d::ccVertex3F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccVertex3F_y
static int tolua_get_cocos2d__ccVertex3F_y(lua_State* tolua_S)
{
  cocos2d::ccVertex3F* self = (cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  cocos2d::ccVertex3F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccVertex3F_y
static int tolua_set_cocos2d__ccVertex3F_y(lua_State* tolua_S)
{
  cocos2d::ccVertex3F* self = (cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: z of class  cocos2d::ccVertex3F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccVertex3F_z
static int tolua_get_cocos2d__ccVertex3F_z(lua_State* tolua_S)
{
  cocos2d::ccVertex3F* self = (cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: z of class  cocos2d::ccVertex3F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccVertex3F_z
static int tolua_set_cocos2d__ccVertex3F_z(lua_State* tolua_S)
{
  cocos2d::ccVertex3F* self = (cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->z = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::vertex3 */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_vertex300
static int tolua_Cocos2d_cocos2d_vertex300(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const float x = ((const float)  tolua_tonumber(tolua_S,1,0));
  const float y = ((const float)  tolua_tonumber(tolua_S,2,0));
  const float z = ((const float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::ccVertex3F tolua_ret = (cocos2d::ccVertex3F)  cocos2d::vertex3(x,y,z);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccVertex3F)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccVertex3F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccVertex3F));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccVertex3F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'vertex3'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: u of class  cocos2d::ccTex2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccTex2F_u
static int tolua_get_cocos2d__ccTex2F_u(lua_State* tolua_S)
{
  cocos2d::ccTex2F* self = (cocos2d::ccTex2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'u'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->u);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: u of class  cocos2d::ccTex2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccTex2F_u
static int tolua_set_cocos2d__ccTex2F_u(lua_State* tolua_S)
{
  cocos2d::ccTex2F* self = (cocos2d::ccTex2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'u'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->u = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: v of class  cocos2d::ccTex2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccTex2F_v
static int tolua_get_cocos2d__ccTex2F_v(lua_State* tolua_S)
{
  cocos2d::ccTex2F* self = (cocos2d::ccTex2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'v'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->v);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: v of class  cocos2d::ccTex2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccTex2F_v
static int tolua_set_cocos2d__ccTex2F_v(lua_State* tolua_S)
{
  cocos2d::ccTex2F* self = (cocos2d::ccTex2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'v'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->v = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::tex2 */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_tex200
static int tolua_Cocos2d_cocos2d_tex200(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const float u = ((const float)  tolua_tonumber(tolua_S,1,0));
  const float v = ((const float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::ccTex2F tolua_ret = (cocos2d::ccTex2F)  cocos2d::tex2(u,v);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccTex2F)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccTex2F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccTex2F));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccTex2F");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tex2'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: pos of class  cocos2d::ccPointSprite */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccPointSprite_pos
static int tolua_get_cocos2d__ccPointSprite_pos(lua_State* tolua_S)
{
  cocos2d::ccPointSprite* self = (cocos2d::ccPointSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pos'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->pos,"cocos2d::ccVertex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: pos of class  cocos2d::ccPointSprite */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccPointSprite_pos
static int tolua_set_cocos2d__ccPointSprite_pos(lua_State* tolua_S)
{
  cocos2d::ccPointSprite* self = (cocos2d::ccPointSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'pos'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->pos = *((cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: color of class  cocos2d::ccPointSprite */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccPointSprite_color
static int tolua_get_cocos2d__ccPointSprite_color(lua_State* tolua_S)
{
  cocos2d::ccPointSprite* self = (cocos2d::ccPointSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'color'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->color,"cocos2d::ccColor4B");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: color of class  cocos2d::ccPointSprite */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccPointSprite_color
static int tolua_set_cocos2d__ccPointSprite_color(lua_State* tolua_S)
{
  cocos2d::ccPointSprite* self = (cocos2d::ccPointSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'color'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: size of class  cocos2d::ccPointSprite */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccPointSprite_size
static int tolua_get_cocos2d__ccPointSprite_size(lua_State* tolua_S)
{
  cocos2d::ccPointSprite* self = (cocos2d::ccPointSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->size);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: size of class  cocos2d::ccPointSprite */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccPointSprite_size
static int tolua_set_cocos2d__ccPointSprite_size(lua_State* tolua_S)
{
  cocos2d::ccPointSprite* self = (cocos2d::ccPointSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->size = ((  float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tl of class  cocos2d::ccQuad2 */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccQuad2_tl
static int tolua_get_cocos2d__ccQuad2_tl(lua_State* tolua_S)
{
  cocos2d::ccQuad2* self = (cocos2d::ccQuad2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tl,"cocos2d::ccVertex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tl of class  cocos2d::ccQuad2 */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccQuad2_tl
static int tolua_set_cocos2d__ccQuad2_tl(lua_State* tolua_S)
{
  cocos2d::ccQuad2* self = (cocos2d::ccQuad2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tl = *((cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tr of class  cocos2d::ccQuad2 */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccQuad2_tr
static int tolua_get_cocos2d__ccQuad2_tr(lua_State* tolua_S)
{
  cocos2d::ccQuad2* self = (cocos2d::ccQuad2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tr,"cocos2d::ccVertex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tr of class  cocos2d::ccQuad2 */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccQuad2_tr
static int tolua_set_cocos2d__ccQuad2_tr(lua_State* tolua_S)
{
  cocos2d::ccQuad2* self = (cocos2d::ccQuad2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tr = *((cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bl of class  cocos2d::ccQuad2 */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccQuad2_bl
static int tolua_get_cocos2d__ccQuad2_bl(lua_State* tolua_S)
{
  cocos2d::ccQuad2* self = (cocos2d::ccQuad2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->bl,"cocos2d::ccVertex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bl of class  cocos2d::ccQuad2 */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccQuad2_bl
static int tolua_set_cocos2d__ccQuad2_bl(lua_State* tolua_S)
{
  cocos2d::ccQuad2* self = (cocos2d::ccQuad2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bl = *((cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: br of class  cocos2d::ccQuad2 */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccQuad2_br
static int tolua_get_cocos2d__ccQuad2_br(lua_State* tolua_S)
{
  cocos2d::ccQuad2* self = (cocos2d::ccQuad2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->br,"cocos2d::ccVertex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: br of class  cocos2d::ccQuad2 */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccQuad2_br
static int tolua_set_cocos2d__ccQuad2_br(lua_State* tolua_S)
{
  cocos2d::ccQuad2* self = (cocos2d::ccQuad2*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->br = *((cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bl of class  cocos2d::ccQuad3 */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccQuad3_bl
static int tolua_get_cocos2d__ccQuad3_bl(lua_State* tolua_S)
{
  cocos2d::ccQuad3* self = (cocos2d::ccQuad3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->bl,"cocos2d::ccVertex3F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bl of class  cocos2d::ccQuad3 */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccQuad3_bl
static int tolua_set_cocos2d__ccQuad3_bl(lua_State* tolua_S)
{
  cocos2d::ccQuad3* self = (cocos2d::ccQuad3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex3F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bl = *((cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: br of class  cocos2d::ccQuad3 */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccQuad3_br
static int tolua_get_cocos2d__ccQuad3_br(lua_State* tolua_S)
{
  cocos2d::ccQuad3* self = (cocos2d::ccQuad3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->br,"cocos2d::ccVertex3F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: br of class  cocos2d::ccQuad3 */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccQuad3_br
static int tolua_set_cocos2d__ccQuad3_br(lua_State* tolua_S)
{
  cocos2d::ccQuad3* self = (cocos2d::ccQuad3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex3F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->br = *((cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tl of class  cocos2d::ccQuad3 */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccQuad3_tl
static int tolua_get_cocos2d__ccQuad3_tl(lua_State* tolua_S)
{
  cocos2d::ccQuad3* self = (cocos2d::ccQuad3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tl,"cocos2d::ccVertex3F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tl of class  cocos2d::ccQuad3 */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccQuad3_tl
static int tolua_set_cocos2d__ccQuad3_tl(lua_State* tolua_S)
{
  cocos2d::ccQuad3* self = (cocos2d::ccQuad3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex3F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tl = *((cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tr of class  cocos2d::ccQuad3 */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccQuad3_tr
static int tolua_get_cocos2d__ccQuad3_tr(lua_State* tolua_S)
{
  cocos2d::ccQuad3* self = (cocos2d::ccQuad3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tr,"cocos2d::ccVertex3F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tr of class  cocos2d::ccQuad3 */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccQuad3_tr
static int tolua_set_cocos2d__ccQuad3_tr(lua_State* tolua_S)
{
  cocos2d::ccQuad3* self = (cocos2d::ccQuad3*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex3F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tr = *((cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  cocos2d::ccGridSize */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccGridSize_x
static int tolua_get_cocos2d__ccGridSize_x(lua_State* tolua_S)
{
  cocos2d::ccGridSize* self = (cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  cocos2d::ccGridSize */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccGridSize_x
static int tolua_set_cocos2d__ccGridSize_x(lua_State* tolua_S)
{
  cocos2d::ccGridSize* self = (cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  cocos2d::ccGridSize */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccGridSize_y
static int tolua_get_cocos2d__ccGridSize_y(lua_State* tolua_S)
{
  cocos2d::ccGridSize* self = (cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  cocos2d::ccGridSize */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccGridSize_y
static int tolua_set_cocos2d__ccGridSize_y(lua_State* tolua_S)
{
  cocos2d::ccGridSize* self = (cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccg */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccg00
static int tolua_Cocos2d_cocos2d_ccg00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const int x = ((const int)  tolua_tonumber(tolua_S,1,0));
  const int y = ((const int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::ccGridSize tolua_ret = (cocos2d::ccGridSize)  cocos2d::ccg(x,y);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccGridSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccGridSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccGridSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccGridSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccg'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: vertices of class  cocos2d::ccV2F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4B_T2F_vertices
static int tolua_get_cocos2d__ccV2F_C4B_T2F_vertices(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F* self = (cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertices'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->vertices,"cocos2d::ccVertex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: vertices of class  cocos2d::ccV2F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4B_T2F_vertices
static int tolua_set_cocos2d__ccV2F_C4B_T2F_vertices(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F* self = (cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertices'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->vertices = *((cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: colors of class  cocos2d::ccV2F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4B_T2F_colors
static int tolua_get_cocos2d__ccV2F_C4B_T2F_colors(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F* self = (cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'colors'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->colors,"cocos2d::ccColor4B");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: colors of class  cocos2d::ccV2F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4B_T2F_colors
static int tolua_set_cocos2d__ccV2F_C4B_T2F_colors(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F* self = (cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'colors'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->colors = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: texCoords of class  cocos2d::ccV2F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4B_T2F_texCoords
static int tolua_get_cocos2d__ccV2F_C4B_T2F_texCoords(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F* self = (cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'texCoords'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->texCoords,"cocos2d::ccTex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: texCoords of class  cocos2d::ccV2F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4B_T2F_texCoords
static int tolua_set_cocos2d__ccV2F_C4B_T2F_texCoords(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F* self = (cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'texCoords'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccTex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->texCoords = *((cocos2d::ccTex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: vertices of class  cocos2d::ccV2F_C4F_T2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4F_T2F_vertices
static int tolua_get_cocos2d__ccV2F_C4F_T2F_vertices(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F* self = (cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertices'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->vertices,"cocos2d::ccVertex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: vertices of class  cocos2d::ccV2F_C4F_T2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4F_T2F_vertices
static int tolua_set_cocos2d__ccV2F_C4F_T2F_vertices(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F* self = (cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertices'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->vertices = *((cocos2d::ccVertex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: colors of class  cocos2d::ccV2F_C4F_T2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4F_T2F_colors
static int tolua_get_cocos2d__ccV2F_C4F_T2F_colors(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F* self = (cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'colors'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->colors,"cocos2d::ccColor4F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: colors of class  cocos2d::ccV2F_C4F_T2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4F_T2F_colors
static int tolua_set_cocos2d__ccV2F_C4F_T2F_colors(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F* self = (cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'colors'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->colors = *((cocos2d::ccColor4F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: texCoords of class  cocos2d::ccV2F_C4F_T2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4F_T2F_texCoords
static int tolua_get_cocos2d__ccV2F_C4F_T2F_texCoords(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F* self = (cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'texCoords'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->texCoords,"cocos2d::ccTex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: texCoords of class  cocos2d::ccV2F_C4F_T2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4F_T2F_texCoords
static int tolua_set_cocos2d__ccV2F_C4F_T2F_texCoords(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F* self = (cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'texCoords'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccTex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->texCoords = *((cocos2d::ccTex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: vertices of class  cocos2d::ccV3F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV3F_C4B_T2F_vertices
static int tolua_get_cocos2d__ccV3F_C4B_T2F_vertices(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F* self = (cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertices'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->vertices,"cocos2d::ccVertex3F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: vertices of class  cocos2d::ccV3F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV3F_C4B_T2F_vertices
static int tolua_set_cocos2d__ccV3F_C4B_T2F_vertices(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F* self = (cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'vertices'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccVertex3F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->vertices = *((cocos2d::ccVertex3F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: colors of class  cocos2d::ccV3F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV3F_C4B_T2F_colors
static int tolua_get_cocos2d__ccV3F_C4B_T2F_colors(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F* self = (cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'colors'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->colors,"cocos2d::ccColor4B");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: colors of class  cocos2d::ccV3F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV3F_C4B_T2F_colors
static int tolua_set_cocos2d__ccV3F_C4B_T2F_colors(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F* self = (cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'colors'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->colors = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: texCoords of class  cocos2d::ccV3F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV3F_C4B_T2F_texCoords
static int tolua_get_cocos2d__ccV3F_C4B_T2F_texCoords(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F* self = (cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'texCoords'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->texCoords,"cocos2d::ccTex2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: texCoords of class  cocos2d::ccV3F_C4B_T2F */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV3F_C4B_T2F_texCoords
static int tolua_set_cocos2d__ccV3F_C4B_T2F_texCoords(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F* self = (cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'texCoords'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccTex2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->texCoords = *((cocos2d::ccTex2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bl of class  cocos2d::ccV2F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_bl
static int tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_bl(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F_Quad* self = (cocos2d::ccV2F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->bl,"cocos2d::ccV2F_C4B_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bl of class  cocos2d::ccV2F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_bl
static int tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_bl(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F_Quad* self = (cocos2d::ccV2F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV2F_C4B_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bl = *((cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: br of class  cocos2d::ccV2F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_br
static int tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_br(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F_Quad* self = (cocos2d::ccV2F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->br,"cocos2d::ccV2F_C4B_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: br of class  cocos2d::ccV2F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_br
static int tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_br(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F_Quad* self = (cocos2d::ccV2F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV2F_C4B_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->br = *((cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tl of class  cocos2d::ccV2F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_tl
static int tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_tl(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F_Quad* self = (cocos2d::ccV2F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tl,"cocos2d::ccV2F_C4B_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tl of class  cocos2d::ccV2F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_tl
static int tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_tl(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F_Quad* self = (cocos2d::ccV2F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV2F_C4B_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tl = *((cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tr of class  cocos2d::ccV2F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_tr
static int tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_tr(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F_Quad* self = (cocos2d::ccV2F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tr,"cocos2d::ccV2F_C4B_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tr of class  cocos2d::ccV2F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_tr
static int tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_tr(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4B_T2F_Quad* self = (cocos2d::ccV2F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV2F_C4B_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tr = *((cocos2d::ccV2F_C4B_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tl of class  cocos2d::ccV3F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_tl
static int tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_tl(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F_Quad* self = (cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tl,"cocos2d::ccV3F_C4B_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tl of class  cocos2d::ccV3F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_tl
static int tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_tl(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F_Quad* self = (cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV3F_C4B_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tl = *((cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bl of class  cocos2d::ccV3F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_bl
static int tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_bl(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F_Quad* self = (cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->bl,"cocos2d::ccV3F_C4B_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bl of class  cocos2d::ccV3F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_bl
static int tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_bl(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F_Quad* self = (cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV3F_C4B_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bl = *((cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tr of class  cocos2d::ccV3F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_tr
static int tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_tr(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F_Quad* self = (cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tr,"cocos2d::ccV3F_C4B_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tr of class  cocos2d::ccV3F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_tr
static int tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_tr(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F_Quad* self = (cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV3F_C4B_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tr = *((cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: br of class  cocos2d::ccV3F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_br
static int tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_br(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F_Quad* self = (cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->br,"cocos2d::ccV3F_C4B_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: br of class  cocos2d::ccV3F_C4B_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_br
static int tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_br(lua_State* tolua_S)
{
  cocos2d::ccV3F_C4B_T2F_Quad* self = (cocos2d::ccV3F_C4B_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV3F_C4B_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->br = *((cocos2d::ccV3F_C4B_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bl of class  cocos2d::ccV2F_C4F_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_bl
static int tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_bl(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F_Quad* self = (cocos2d::ccV2F_C4F_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->bl,"cocos2d::ccV2F_C4F_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bl of class  cocos2d::ccV2F_C4F_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_bl
static int tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_bl(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F_Quad* self = (cocos2d::ccV2F_C4F_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV2F_C4F_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bl = *((cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: br of class  cocos2d::ccV2F_C4F_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_br
static int tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_br(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F_Quad* self = (cocos2d::ccV2F_C4F_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->br,"cocos2d::ccV2F_C4F_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: br of class  cocos2d::ccV2F_C4F_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_br
static int tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_br(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F_Quad* self = (cocos2d::ccV2F_C4F_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'br'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV2F_C4F_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->br = *((cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tl of class  cocos2d::ccV2F_C4F_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_tl
static int tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_tl(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F_Quad* self = (cocos2d::ccV2F_C4F_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tl,"cocos2d::ccV2F_C4F_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tl of class  cocos2d::ccV2F_C4F_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_tl
static int tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_tl(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F_Quad* self = (cocos2d::ccV2F_C4F_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tl'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV2F_C4F_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tl = *((cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: tr of class  cocos2d::ccV2F_C4F_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_tr
static int tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_tr(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F_Quad* self = (cocos2d::ccV2F_C4F_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->tr,"cocos2d::ccV2F_C4F_T2F");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: tr of class  cocos2d::ccV2F_C4F_T2F_Quad */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_tr
static int tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_tr(lua_State* tolua_S)
{
  cocos2d::ccV2F_C4F_T2F_Quad* self = (cocos2d::ccV2F_C4F_T2F_Quad*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'tr'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccV2F_C4F_T2F",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->tr = *((cocos2d::ccV2F_C4F_T2F*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: src of class  cocos2d::ccBlendFunc */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBlendFunc_src
static int tolua_get_cocos2d__ccBlendFunc_src(lua_State* tolua_S)
{
  cocos2d::ccBlendFunc* self = (cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'src'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->src,"GLenum");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: src of class  cocos2d::ccBlendFunc */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBlendFunc_src
static int tolua_set_cocos2d__ccBlendFunc_src(lua_State* tolua_S)
{
  cocos2d::ccBlendFunc* self = (cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'src'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"GLenum",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->src = *((GLenum*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: dst of class  cocos2d::ccBlendFunc */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBlendFunc_dst
static int tolua_get_cocos2d__ccBlendFunc_dst(lua_State* tolua_S)
{
  cocos2d::ccBlendFunc* self = (cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dst'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->dst,"GLenum");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: dst of class  cocos2d::ccBlendFunc */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBlendFunc_dst
static int tolua_set_cocos2d__ccBlendFunc_dst(lua_State* tolua_S)
{
  cocos2d::ccBlendFunc* self = (cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'dst'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"GLenum",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->dst = *((GLenum*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_delete00
static int tolua_Cocos2d_cocos2d_CCUserDefault_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBoolForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_getBoolForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_getBoolForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBoolForKey'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getBoolForKey(pKey);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBoolForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIntegerForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_getIntegerForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_getIntegerForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIntegerForKey'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getIntegerForKey(pKey);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIntegerForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFloatForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_getFloatForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_getFloatForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFloatForKey'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getFloatForKey(pKey);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFloatForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDoubleForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_getDoubleForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_getDoubleForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDoubleForKey'", NULL);
#endif
  {
   double tolua_ret = (double)  self->getDoubleForKey(pKey);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDoubleForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStringForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_getStringForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_getStringForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStringForKey'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->getStringForKey(pKey);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStringForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBoolForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_setBoolForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_setBoolForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
  bool value = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBoolForKey'", NULL);
#endif
  {
   self->setBoolForKey(pKey,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBoolForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIntegerForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_setIntegerForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_setIntegerForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
  int value = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIntegerForKey'", NULL);
#endif
  {
   self->setIntegerForKey(pKey,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIntegerForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFloatForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_setFloatForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_setFloatForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
  float value = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFloatForKey'", NULL);
#endif
  {
   self->setFloatForKey(pKey,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFloatForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDoubleForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_setDoubleForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_setDoubleForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
  double value = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDoubleForKey'", NULL);
#endif
  {
   self->setDoubleForKey(pKey,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDoubleForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStringForKey of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_setStringForKey00
static int tolua_Cocos2d_cocos2d_CCUserDefault_setStringForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCUserDefault* self = (cocos2d::CCUserDefault*)  tolua_tousertype(tolua_S,1,0);
  const char* pKey = ((const char*)  tolua_tostring(tolua_S,2,0));
  std::string value = ((std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStringForKey'", NULL);
#endif
  {
   self->setStringForKey(pKey,value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStringForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedUserDefault of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_sharedUserDefault00
static int tolua_Cocos2d_cocos2d_CCUserDefault_sharedUserDefault00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCUserDefault* tolua_ret = (cocos2d::CCUserDefault*)  cocos2d::CCUserDefault::sharedUserDefault();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCUserDefault");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedUserDefault'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeSharedUserDefault of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_purgeSharedUserDefault00
static int tolua_Cocos2d_cocos2d_CCUserDefault_purgeSharedUserDefault00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCUserDefault::purgeSharedUserDefault();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeSharedUserDefault'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getXMLFilePath of class  cocos2d::CCUserDefault */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCUserDefault_getXMLFilePath00
static int tolua_Cocos2d_cocos2d_CCUserDefault_getXMLFilePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCUserDefault",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   const std::string tolua_ret = (const std::string)  cocos2d::CCUserDefault::getXMLFilePath();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getXMLFilePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  cocos2d::CCAcceleration */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCAcceleration_x
static int tolua_get_cocos2d__CCAcceleration_x(lua_State* tolua_S)
{
  cocos2d::CCAcceleration* self = (cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  cocos2d::CCAcceleration */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCAcceleration_x
static int tolua_set_cocos2d__CCAcceleration_x(lua_State* tolua_S)
{
  cocos2d::CCAcceleration* self = (cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  cocos2d::CCAcceleration */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCAcceleration_y
static int tolua_get_cocos2d__CCAcceleration_y(lua_State* tolua_S)
{
  cocos2d::CCAcceleration* self = (cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  cocos2d::CCAcceleration */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCAcceleration_y
static int tolua_set_cocos2d__CCAcceleration_y(lua_State* tolua_S)
{
  cocos2d::CCAcceleration* self = (cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: z of class  cocos2d::CCAcceleration */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCAcceleration_z
static int tolua_get_cocos2d__CCAcceleration_z(lua_State* tolua_S)
{
  cocos2d::CCAcceleration* self = (cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->z);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: z of class  cocos2d::CCAcceleration */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCAcceleration_z
static int tolua_set_cocos2d__CCAcceleration_z(lua_State* tolua_S)
{
  cocos2d::CCAcceleration* self = (cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'z'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->z = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: timestamp of class  cocos2d::CCAcceleration */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCAcceleration_timestamp
static int tolua_get_cocos2d__CCAcceleration_timestamp(lua_State* tolua_S)
{
  cocos2d::CCAcceleration* self = (cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'timestamp'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->timestamp);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: timestamp of class  cocos2d::CCAcceleration */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCAcceleration_timestamp
static int tolua_set_cocos2d__CCAcceleration_timestamp(lua_State* tolua_S)
{
  cocos2d::CCAcceleration* self = (cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'timestamp'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->timestamp = ((double)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: didAccelerate of class  cocos2d::CCAccelerometerDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelerometerDelegate_didAccelerate00
static int tolua_Cocos2d_cocos2d_CCAccelerometerDelegate_didAccelerate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelerometerDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAcceleration",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelerometerDelegate* self = (cocos2d::CCAccelerometerDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAcceleration* pAccelerationValue = ((cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'didAccelerate'", NULL);
#endif
  {
   self->didAccelerate(pAccelerationValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'didAccelerate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_new00
static int tolua_Cocos2d_cocos2d_CCAction_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAction* tolua_ret = (cocos2d::CCAction*)  Mtolua_new((cocos2d::CCAction)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_new00_local
static int tolua_Cocos2d_cocos2d_CCAction_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAction* tolua_ret = (cocos2d::CCAction*)  Mtolua_new((cocos2d::CCAction)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAction");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: description of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_description00
static int tolua_Cocos2d_cocos2d_CCAction_description00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'description'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->description();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'description'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCAction_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDone of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_isDone00
static int tolua_Cocos2d_cocos2d_CCAction_isDone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDone'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDone();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCAction_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_stop00
static int tolua_Cocos2d_cocos2d_CCAction_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_step00
static int tolua_Cocos2d_cocos2d_CCAction_step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
   float dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
  {
   self->step(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_update00
static int tolua_Cocos2d_cocos2d_CCAction_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTarget of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_getTarget00
static int tolua_Cocos2d_cocos2d_CCAction_getTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTarget'", NULL);
#endif
  {
   cocos2d::CCNode* tolua_ret = (cocos2d::CCNode*)  self->getTarget();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTarget of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_setTarget00
static int tolua_Cocos2d_cocos2d_CCAction_setTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTarget'", NULL);
#endif
  {
   self->setTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOriginalTarget of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_getOriginalTarget00
static int tolua_Cocos2d_cocos2d_CCAction_getOriginalTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOriginalTarget'", NULL);
#endif
  {
   cocos2d::CCNode* tolua_ret = (cocos2d::CCNode*)  self->getOriginalTarget();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOriginalTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOriginalTarget of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_setOriginalTarget00
static int tolua_Cocos2d_cocos2d_CCAction_setOriginalTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pOriginalTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOriginalTarget'", NULL);
#endif
  {
   self->setOriginalTarget(pOriginalTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOriginalTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTag of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_getTag00
static int tolua_Cocos2d_cocos2d_CCAction_getTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTag'", NULL);
#endif
  {
   int tolua_ret = (int)  self->getTag();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTag of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_setTag00
static int tolua_Cocos2d_cocos2d_CCAction_setTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* self = (cocos2d::CCAction*)  tolua_tousertype(tolua_S,1,0);
  int nTag = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTag'", NULL);
#endif
  {
   self->setTag(nTag);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAction_action00
static int tolua_Cocos2d_cocos2d_CCAction_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAction* tolua_ret = (cocos2d::CCAction*)  cocos2d::CCAction::action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCFiniteTimeAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFiniteTimeAction_new00
static int tolua_Cocos2d_cocos2d_CCFiniteTimeAction_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  Mtolua_new((cocos2d::CCFiniteTimeAction)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCFiniteTimeAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFiniteTimeAction_new00_local
static int tolua_Cocos2d_cocos2d_CCFiniteTimeAction_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  Mtolua_new((cocos2d::CCFiniteTimeAction)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCFiniteTimeAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFiniteTimeAction_delete00
static int tolua_Cocos2d_cocos2d_CCFiniteTimeAction_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFiniteTimeAction* self = (cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDuration of class  cocos2d::CCFiniteTimeAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFiniteTimeAction_getDuration00
static int tolua_Cocos2d_cocos2d_CCFiniteTimeAction_getDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFiniteTimeAction* self = (cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDuration'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->getDuration();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDuration of class  cocos2d::CCFiniteTimeAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFiniteTimeAction_setDuration00
static int tolua_Cocos2d_cocos2d_CCFiniteTimeAction_setDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFiniteTimeAction* self = (cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDuration'", NULL);
#endif
  {
   self->setDuration(duration);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCFiniteTimeAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFiniteTimeAction_reverse00
static int tolua_Cocos2d_cocos2d_CCFiniteTimeAction_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFiniteTimeAction* self = (cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getElapsed of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_getElapsed00
static int tolua_Cocos2d_cocos2d_CCActionInterval_getElapsed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* self = (cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getElapsed'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->getElapsed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getElapsed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCActionInterval_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* self = (cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,1,0);
   float d = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(d);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDone of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_isDone00
static int tolua_Cocos2d_cocos2d_CCActionInterval_isDone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* self = (cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDone'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDone();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCActionInterval_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* self = (cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_step00
static int tolua_Cocos2d_cocos2d_CCActionInterval_step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* self = (cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,1,0);
   float dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
  {
   self->step(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCActionInterval_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* self = (cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_reverse00
static int tolua_Cocos2d_cocos2d_CCActionInterval_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* self = (cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCActionInterval_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float d = ((  float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  cocos2d::CCActionInterval::actionWithDuration(d);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitudeRate of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_setAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCActionInterval_setAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* self = (cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CGFloat amp = ((cocos2d::CGFloat)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitudeRate'", NULL);
#endif
  {
   self->setAmplitudeRate(amp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitudeRate of class  cocos2d::CCActionInterval */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInterval_getAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCActionInterval_getAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* self = (cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitudeRate'", NULL);
#endif
  {
   cocos2d::CGFloat tolua_ret = (cocos2d::CGFloat)  self->getAmplitudeRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_new00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRepeatForever* tolua_ret = (cocos2d::CCRepeatForever*)  Mtolua_new((cocos2d::CCRepeatForever)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRepeatForever");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_new00_local
static int tolua_Cocos2d_cocos2d_CCRepeatForever_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRepeatForever* tolua_ret = (cocos2d::CCRepeatForever*)  Mtolua_new((cocos2d::CCRepeatForever)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRepeatForever");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_initWithAction00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeatForever* self = (cocos2d::CCRepeatForever*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeatForever* self = (cocos2d::CCRepeatForever*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeatForever* self = (cocos2d::CCRepeatForever*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_step00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeatForever* self = (cocos2d::CCRepeatForever*)  tolua_tousertype(tolua_S,1,0);
   float dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
  {
   self->step(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDone of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_isDone00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_isDone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeatForever* self = (cocos2d::CCRepeatForever*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDone'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDone();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_reverse00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeatForever* self = (cocos2d::CCRepeatForever*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInnerAction of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_setInnerAction00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_setInnerAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeatForever* self = (cocos2d::CCRepeatForever*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInnerAction'", NULL);
#endif
  {
   self->setInnerAction(pAction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInnerAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInnerAction of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_getInnerAction00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_getInnerAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeatForever* self = (cocos2d::CCRepeatForever*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInnerAction'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->getInnerAction();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInnerAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCRepeatForever */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeatForever_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCRepeatForever_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRepeatForever",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCRepeatForever* tolua_ret = (cocos2d::CCRepeatForever*)  cocos2d::CCRepeatForever::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRepeatForever");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_new00
static int tolua_Cocos2d_cocos2d_CCSpeed_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSpeed* tolua_ret = (cocos2d::CCSpeed*)  Mtolua_new((cocos2d::CCSpeed)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpeed");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_new00_local
static int tolua_Cocos2d_cocos2d_CCSpeed_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSpeed* tolua_ret = (cocos2d::CCSpeed*)  Mtolua_new((cocos2d::CCSpeed)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpeed");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_delete00
static int tolua_Cocos2d_cocos2d_CCSpeed_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpeed of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_getSpeed00
static int tolua_Cocos2d_cocos2d_CCSpeed_getSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpeed of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_setSpeed00
static int tolua_Cocos2d_cocos2d_CCSpeed_setSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
  float fSpeed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpeed'", NULL);
#endif
  {
   self->setSpeed(fSpeed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_initWithAction00
static int tolua_Cocos2d_cocos2d_CCSpeed_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fRate = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction,fRate);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCSpeed_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCSpeed_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_stop00
static int tolua_Cocos2d_cocos2d_CCSpeed_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_step00
static int tolua_Cocos2d_cocos2d_CCSpeed_step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
   float dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
  {
   self->step(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDone of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_isDone00
static int tolua_Cocos2d_cocos2d_CCSpeed_isDone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDone'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDone();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_reverse00
static int tolua_Cocos2d_cocos2d_CCSpeed_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInnerAction of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_setInnerAction00
static int tolua_Cocos2d_cocos2d_CCSpeed_setInnerAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInnerAction'", NULL);
#endif
  {
   self->setInnerAction(pAction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInnerAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInnerAction of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_getInnerAction00
static int tolua_Cocos2d_cocos2d_CCSpeed_getInnerAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpeed* self = (cocos2d::CCSpeed*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInnerAction'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->getInnerAction();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInnerAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCSpeed */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpeed_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCSpeed_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpeed",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fRate = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCSpeed* tolua_ret = (cocos2d::CCSpeed*)  cocos2d::CCSpeed::actionWithAction(pAction,fRate);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpeed");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_new00
static int tolua_Cocos2d_cocos2d_CCFollow_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCFollow* tolua_ret = (cocos2d::CCFollow*)  Mtolua_new((cocos2d::CCFollow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFollow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_new00_local
static int tolua_Cocos2d_cocos2d_CCFollow_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCFollow* tolua_ret = (cocos2d::CCFollow*)  Mtolua_new((cocos2d::CCFollow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFollow");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isBoundarySet of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_isBoundarySet00
static int tolua_Cocos2d_cocos2d_CCFollow_isBoundarySet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFollow* self = (cocos2d::CCFollow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isBoundarySet'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isBoundarySet();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isBoundarySet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBoudarySet of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_setBoudarySet00
static int tolua_Cocos2d_cocos2d_CCFollow_setBoudarySet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFollow* self = (cocos2d::CCFollow*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBoudarySet'", NULL);
#endif
  {
   self->setBoudarySet(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBoudarySet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTarget of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_initWithTarget00
static int tolua_Cocos2d_cocos2d_CCFollow_initWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFollow* self = (cocos2d::CCFollow*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pFollowedNode = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTarget(pFollowedNode);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTarget of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_initWithTarget01
static int tolua_Cocos2d_cocos2d_CCFollow_initWithTarget01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCFollow* self = (cocos2d::CCFollow*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pFollowedNode = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTarget(pFollowedNode,rect);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCFollow_initWithTarget00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCFollow_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFollow* self = (cocos2d::CCFollow*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_step00
static int tolua_Cocos2d_cocos2d_CCFollow_step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFollow* self = (cocos2d::CCFollow*)  tolua_tousertype(tolua_S,1,0);
   float dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
  {
   self->step(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDone of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_isDone00
static int tolua_Cocos2d_cocos2d_CCFollow_isDone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFollow* self = (cocos2d::CCFollow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDone'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDone();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_stop00
static int tolua_Cocos2d_cocos2d_CCFollow_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFollow* self = (cocos2d::CCFollow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithTarget of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_actionWithTarget00
static int tolua_Cocos2d_cocos2d_CCFollow_actionWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* pFollowedNode = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCFollow* tolua_ret = (cocos2d::CCFollow*)  cocos2d::CCFollow::actionWithTarget(pFollowedNode);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFollow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithTarget of class  cocos2d::CCFollow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFollow_actionWithTarget01
static int tolua_Cocos2d_cocos2d_CCFollow_actionWithTarget01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFollow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCNode* pFollowedNode = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCFollow* tolua_ret = (cocos2d::CCFollow*)  cocos2d::CCFollow::actionWithTarget(pFollowedNode,rect);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFollow");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCFollow_actionWithTarget00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  cocos2d::CCRGBAProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRGBAProtocol_setColor00
static int tolua_Cocos2d_cocos2d_CCRGBAProtocol_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRGBAProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRGBAProtocol* self = (cocos2d::CCRGBAProtocol*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B color = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  cocos2d::CCRGBAProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRGBAProtocol_getColor00
static int tolua_Cocos2d_cocos2d_CCRGBAProtocol_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRGBAProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRGBAProtocol* self = (cocos2d::CCRGBAProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  cocos2d::CCRGBAProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRGBAProtocol_getOpacity00
static int tolua_Cocos2d_cocos2d_CCRGBAProtocol_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRGBAProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRGBAProtocol* self = (cocos2d::CCRGBAProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = ( unsigned char)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  cocos2d::CCRGBAProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRGBAProtocol_setOpacity00
static int tolua_Cocos2d_cocos2d_CCRGBAProtocol_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRGBAProtocol",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRGBAProtocol* self = (cocos2d::CCRGBAProtocol*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsOpacityModifyRGB of class  cocos2d::CCRGBAProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRGBAProtocol_setIsOpacityModifyRGB00
static int tolua_Cocos2d_cocos2d_CCRGBAProtocol_setIsOpacityModifyRGB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRGBAProtocol",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRGBAProtocol* self = (cocos2d::CCRGBAProtocol*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsOpacityModifyRGB'", NULL);
#endif
  {
   self->setIsOpacityModifyRGB(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsOpacityModifyRGB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsOpacityModifyRGB of class  cocos2d::CCRGBAProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRGBAProtocol_getIsOpacityModifyRGB00
static int tolua_Cocos2d_cocos2d_CCRGBAProtocol_getIsOpacityModifyRGB00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRGBAProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRGBAProtocol* self = (cocos2d::CCRGBAProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsOpacityModifyRGB'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsOpacityModifyRGB();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsOpacityModifyRGB'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendFunc of class  cocos2d::CCBlendProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBlendProtocol_setBlendFunc00
static int tolua_Cocos2d_cocos2d_CCBlendProtocol_setBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBlendProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccBlendFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBlendProtocol* self = (cocos2d::CCBlendProtocol*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccBlendFunc blendFunc = *((cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendFunc'", NULL);
#endif
  {
   self->setBlendFunc(blendFunc);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlendFunc of class  cocos2d::CCBlendProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBlendProtocol_getBlendFunc00
static int tolua_Cocos2d_cocos2d_CCBlendProtocol_getBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBlendProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBlendProtocol* self = (cocos2d::CCBlendProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlendFunc'", NULL);
#endif
  {
   cocos2d::ccBlendFunc tolua_ret = (cocos2d::ccBlendFunc)  self->getBlendFunc();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccBlendFunc)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccBlendFunc));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCTextureProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureProtocol_getTexture00
static int tolua_Cocos2d_cocos2d_CCTextureProtocol_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureProtocol* self = (cocos2d::CCTextureProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCTextureProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTextureProtocol_setTexture00
static int tolua_Cocos2d_cocos2d_CCTextureProtocol_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTextureProtocol",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTextureProtocol* self = (cocos2d::CCTextureProtocol*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* texture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setString of class  cocos2d::CCLabelProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelProtocol_setString00
static int tolua_Cocos2d_cocos2d_CCLabelProtocol_setString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelProtocol",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelProtocol* self = (cocos2d::CCLabelProtocol*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setString'", NULL);
#endif
  {
   self->setString(label);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getString of class  cocos2d::CCLabelProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelProtocol_getString00
static int tolua_Cocos2d_cocos2d_CCLabelProtocol_getString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelProtocol* self = (cocos2d::CCLabelProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getString'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getString();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateProjection of class  cocos2d::CCProjectionProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProjectionProtocol_updateProjection00
static int tolua_Cocos2d_cocos2d_CCProjectionProtocol_updateProjection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProjectionProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProjectionProtocol* self = (cocos2d::CCProjectionProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateProjection'", NULL);
#endif
  {
   self->updateProjection();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateProjection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_new00
static int tolua_Cocos2d_cocos2d_SelectorProtocol_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::SelectorProtocol* tolua_ret = (cocos2d::SelectorProtocol*)  Mtolua_new((cocos2d::SelectorProtocol)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::SelectorProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_new00_local
static int tolua_Cocos2d_cocos2d_SelectorProtocol_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::SelectorProtocol* tolua_ret = (cocos2d::SelectorProtocol*)  Mtolua_new((cocos2d::SelectorProtocol)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::SelectorProtocol");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_update00
static int tolua_Cocos2d_cocos2d_SelectorProtocol_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,1,0);
   float dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: tick of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_tick00
static int tolua_Cocos2d_cocos2d_SelectorProtocol_tick00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,1,0);
   float dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'tick'", NULL);
#endif
  {
   self->tick(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'tick'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: callfunc of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc00
static int tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'callfunc'", NULL);
#endif
  {
   self->callfunc();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'callfunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: callfunc of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc01
static int tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pSender = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'callfunc'", NULL);
#endif
  {
   self->callfunc(pSender);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: callfunc of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc02
static int tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pSender = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  void* pData = ((void*)  tolua_touserdata(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'callfunc'", NULL);
#endif
  {
   self->callfunc(pSender,pData);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: menuHandler of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_menuHandler00
static int tolua_Cocos2d_cocos2d_SelectorProtocol_menuHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pSender = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'menuHandler'", NULL);
#endif
  {
   self->menuHandler(pSender);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'menuHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: eventHandler of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_eventHandler00
static int tolua_Cocos2d_cocos2d_SelectorProtocol_eventHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'eventHandler'", NULL);
#endif
  {
   self->eventHandler(pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'eventHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectorProtocolRetain of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_selectorProtocolRetain00
static int tolua_Cocos2d_cocos2d_SelectorProtocol_selectorProtocolRetain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectorProtocolRetain'", NULL);
#endif
  {
   self->selectorProtocolRetain();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectorProtocolRetain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectorProtocolRelease of class  cocos2d::SelectorProtocol */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_SelectorProtocol_selectorProtocolRelease00
static int tolua_Cocos2d_cocos2d_SelectorProtocol_selectorProtocolRelease00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* self = (cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectorProtocolRelease'", NULL);
#endif
  {
   self->selectorProtocolRelease();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectorProtocolRelease'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___new00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int uSize = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCMutableArray<CCObject*>* tolua_ret = (cocos2d::CCMutableArray<CCObject*>*)  Mtolua_new((cocos2d::CCMutableArray<CCObject*>)(uSize));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCObject*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___new00_local
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int uSize = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCMutableArray<CCObject*>* tolua_ret = (cocos2d::CCMutableArray<CCObject*>*)  Mtolua_new((cocos2d::CCMutableArray<CCObject*>)(uSize));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCObject*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___delete00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___count00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->count();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexOfObject of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___getIndexOfObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___getIndexOfObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexOfObject'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getIndexOfObject(pObject);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndexOfObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: containsObject of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___containsObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___containsObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'containsObject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->containsObject(pObject);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'containsObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLastObject of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___getLastObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___getLastObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLastObject'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->getLastObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLastObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObjectAtIndex of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___getObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___getObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObjectAtIndex'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->getObjectAtIndex(uIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObject of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___addObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___addObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObject'", NULL);
#endif
  {
   self->addObject(pObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObjectsFromArray of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___addObjectsFromArray00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___addObjectsFromArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCObject*>* pArray = ((cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObjectsFromArray'", NULL);
#endif
  {
   self->addObjectsFromArray(pArray);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObjectsFromArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertObjectAtIndex of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___insertObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___insertObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertObjectAtIndex'", NULL);
#endif
  {
   self->insertObjectAtIndex(pObject,uIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeLastObject of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeLastObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeLastObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeLastObject'", NULL);
#endif
  {
   self->removeLastObject(bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeLastObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObject of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObject'", NULL);
#endif
  {
   self->removeObject(pObject,bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObjectsInArray of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeObjectsInArray00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeObjectsInArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCObject*>* pDeleteArray = ((cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObjectsInArray'", NULL);
#endif
  {
   self->removeObjectsInArray(pDeleteArray);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectsInArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObjectAtIndex of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObjectAtIndex'", NULL);
#endif
  {
   self->removeObjectAtIndex(uIndex,bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllObjects of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeAllObjects00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeAllObjects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllObjects'", NULL);
#endif
  {
   self->removeAllObjects(bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllObjects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replaceObjectAtIndex of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___replaceObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___replaceObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,3,0));
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,4,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replaceObjectAtIndex'", NULL);
#endif
  {
   self->replaceObjectAtIndex(uIndex,pObject,bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replaceObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: begin of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___begin00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___begin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'begin'", NULL);
#endif
  {
   std::vector<cocos2d::CCObject*>::iterator tolua_ret = (std::vector<cocos2d::CCObject*>::iterator)  self->begin();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCObject*>::iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCObject*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCObject*>::iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCObject*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'begin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rbegin of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___rbegin00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___rbegin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rbegin'", NULL);
#endif
  {
   std::vector<cocos2d::CCObject*>::reverse_iterator tolua_ret = (std::vector<cocos2d::CCObject*>::reverse_iterator)  self->rbegin();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCObject*>::reverse_iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCObject*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCObject*>::reverse_iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCObject*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rbegin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endToLua of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___endToLua00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___endToLua00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endToLua'", NULL);
#endif
  {
   std::vector<cocos2d::CCObject*>::iterator tolua_ret = (std::vector<cocos2d::CCObject*>::iterator)  self->endToLua();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCObject*>::iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCObject*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCObject*>::iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCObject*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endToLua'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rend of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___rend00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___rend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rend'", NULL);
#endif
  {
   std::vector<cocos2d::CCObject*>::reverse_iterator tolua_ret = (std::vector<cocos2d::CCObject*>::reverse_iterator)  self->rend();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCObject*>::reverse_iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCObject*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCObject*>::reverse_iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCObject*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___copy00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* self = (cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
  {
   cocos2d::CCMutableArray<CCObject*>* tolua_ret = (cocos2d::CCMutableArray<CCObject*>*)  self->copy();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCObject*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: arrayWithArray of class  cocos2d::CCMutableArray<CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___arrayWithArray00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___arrayWithArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCObject*>* pArray = ((cocos2d::CCMutableArray<CCObject*>*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCMutableArray<CCObject*>* tolua_ret = (cocos2d::CCMutableArray<CCObject*>*)  cocos2d::CCMutableArray<CCObject*>::arrayWithArray(pArray);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCObject*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'arrayWithArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___new00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int uSize = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCMutableArray<CCSpriteFrame*>* tolua_ret = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  Mtolua_new((cocos2d::CCMutableArray<CCSpriteFrame*>)(uSize));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCSpriteFrame*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___new00_local
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int uSize = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCMutableArray<CCSpriteFrame*>* tolua_ret = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  Mtolua_new((cocos2d::CCMutableArray<CCSpriteFrame*>)(uSize));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCSpriteFrame*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___delete00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___count00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->count();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexOfObject of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___getIndexOfObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___getIndexOfObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pObject = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexOfObject'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getIndexOfObject(pObject);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndexOfObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: containsObject of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___containsObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___containsObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pObject = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'containsObject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->containsObject(pObject);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'containsObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLastObject of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___getLastObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___getLastObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLastObject'", NULL);
#endif
  {
   cocos2d::CCSpriteFrame* tolua_ret = (cocos2d::CCSpriteFrame*)  self->getLastObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLastObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObjectAtIndex of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___getObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___getObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObjectAtIndex'", NULL);
#endif
  {
   cocos2d::CCSpriteFrame* tolua_ret = (cocos2d::CCSpriteFrame*)  self->getObjectAtIndex(uIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpriteFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObject of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___addObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___addObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pObject = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObject'", NULL);
#endif
  {
   self->addObject(pObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObjectsFromArray of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___addObjectsFromArray00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___addObjectsFromArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCSpriteFrame*>* pArray = ((cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObjectsFromArray'", NULL);
#endif
  {
   self->addObjectsFromArray(pArray);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObjectsFromArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertObjectAtIndex of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___insertObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___insertObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pObject = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertObjectAtIndex'", NULL);
#endif
  {
   self->insertObjectAtIndex(pObject,uIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeLastObject of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeLastObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeLastObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeLastObject'", NULL);
#endif
  {
   self->removeLastObject(bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeLastObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObject of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pObject = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObject'", NULL);
#endif
  {
   self->removeObject(pObject,bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObjectsInArray of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeObjectsInArray00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeObjectsInArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCSpriteFrame*>* pDeleteArray = ((cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObjectsInArray'", NULL);
#endif
  {
   self->removeObjectsInArray(pDeleteArray);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectsInArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObjectAtIndex of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObjectAtIndex'", NULL);
#endif
  {
   self->removeObjectAtIndex(uIndex,bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllObjects of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeAllObjects00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeAllObjects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllObjects'", NULL);
#endif
  {
   self->removeAllObjects(bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllObjects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replaceObjectAtIndex of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___replaceObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___replaceObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCSpriteFrame* pObject = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,3,0));
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,4,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replaceObjectAtIndex'", NULL);
#endif
  {
   self->replaceObjectAtIndex(uIndex,pObject,bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replaceObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: begin of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___begin00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___begin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'begin'", NULL);
#endif
  {
   std::vector<cocos2d::CCSpriteFrame*>::iterator tolua_ret = (std::vector<cocos2d::CCSpriteFrame*>::iterator)  self->begin();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCSpriteFrame*>::iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCSpriteFrame*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCSpriteFrame*>::iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCSpriteFrame*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'begin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rbegin of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___rbegin00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___rbegin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rbegin'", NULL);
#endif
  {
   std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator tolua_ret = (std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator)  self->rbegin();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rbegin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endToLua of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___endToLua00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___endToLua00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endToLua'", NULL);
#endif
  {
   std::vector<cocos2d::CCSpriteFrame*>::iterator tolua_ret = (std::vector<cocos2d::CCSpriteFrame*>::iterator)  self->endToLua();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCSpriteFrame*>::iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCSpriteFrame*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCSpriteFrame*>::iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCSpriteFrame*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endToLua'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rend of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___rend00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___rend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rend'", NULL);
#endif
  {
   std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator tolua_ret = (std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator)  self->rend();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCSpriteFrame*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___copy00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* self = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
  {
   cocos2d::CCMutableArray<CCSpriteFrame*>* tolua_ret = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  self->copy();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCSpriteFrame*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: arrayWithArray of class  cocos2d::CCMutableArray<CCSpriteFrame*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___arrayWithArray00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___arrayWithArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* pArray = ((cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCMutableArray<CCSpriteFrame*>* tolua_ret = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  cocos2d::CCMutableArray<CCSpriteFrame*>::arrayWithArray(pArray);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCSpriteFrame*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'arrayWithArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___new00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int uSize = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCMutableArray<CCFiniteTimeAction*>* tolua_ret = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  Mtolua_new((cocos2d::CCMutableArray<CCFiniteTimeAction*>)(uSize));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCFiniteTimeAction*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___new00_local
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int uSize = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCMutableArray<CCFiniteTimeAction*>* tolua_ret = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  Mtolua_new((cocos2d::CCMutableArray<CCFiniteTimeAction*>)(uSize));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCFiniteTimeAction*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___delete00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___count00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->count();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIndexOfObject of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___getIndexOfObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___getIndexOfObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pObject = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIndexOfObject'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getIndexOfObject(pObject);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIndexOfObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: containsObject of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___containsObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___containsObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pObject = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'containsObject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->containsObject(pObject);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'containsObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLastObject of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___getLastObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___getLastObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLastObject'", NULL);
#endif
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  self->getLastObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLastObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObjectAtIndex of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___getObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___getObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObjectAtIndex'", NULL);
#endif
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  self->getObjectAtIndex(uIndex);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObject of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___addObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___addObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pObject = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObject'", NULL);
#endif
  {
   self->addObject(pObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObjectsFromArray of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___addObjectsFromArray00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___addObjectsFromArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* pArray = ((cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObjectsFromArray'", NULL);
#endif
  {
   self->addObjectsFromArray(pArray);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObjectsFromArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertObjectAtIndex of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___insertObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___insertObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pObject = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertObjectAtIndex'", NULL);
#endif
  {
   self->insertObjectAtIndex(pObject,uIndex);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeLastObject of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeLastObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeLastObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeLastObject'", NULL);
#endif
  {
   self->removeLastObject(bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeLastObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObject of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeObject00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pObject = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObject'", NULL);
#endif
  {
   self->removeObject(pObject,bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObjectsInArray of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeObjectsInArray00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeObjectsInArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* pDeleteArray = ((cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObjectsInArray'", NULL);
#endif
  {
   self->removeObjectsInArray(pDeleteArray);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectsInArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObjectAtIndex of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObjectAtIndex'", NULL);
#endif
  {
   self->removeObjectAtIndex(uIndex,bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllObjects of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeAllObjects00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeAllObjects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllObjects'", NULL);
#endif
  {
   self->removeAllObjects(bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllObjects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replaceObjectAtIndex of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___replaceObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___replaceObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
  unsigned int uIndex = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCFiniteTimeAction* pObject = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,3,0));
  bool bDeleteObject = ((bool)  tolua_toboolean(tolua_S,4,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replaceObjectAtIndex'", NULL);
#endif
  {
   self->replaceObjectAtIndex(uIndex,pObject,bDeleteObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replaceObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: begin of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___begin00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___begin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'begin'", NULL);
#endif
  {
   std::vector<cocos2d::CCFiniteTimeAction*>::iterator tolua_ret = (std::vector<cocos2d::CCFiniteTimeAction*>::iterator)  self->begin();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCFiniteTimeAction*>::iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCFiniteTimeAction*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCFiniteTimeAction*>::iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCFiniteTimeAction*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'begin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rbegin of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___rbegin00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___rbegin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rbegin'", NULL);
#endif
  {
   std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator tolua_ret = (std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator)  self->rbegin();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rbegin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endToLua of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___endToLua00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___endToLua00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endToLua'", NULL);
#endif
  {
   std::vector<cocos2d::CCFiniteTimeAction*>::iterator tolua_ret = (std::vector<cocos2d::CCFiniteTimeAction*>::iterator)  self->endToLua();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCFiniteTimeAction*>::iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCFiniteTimeAction*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCFiniteTimeAction*>::iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCFiniteTimeAction*>::iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endToLua'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rend of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___rend00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___rend00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rend'", NULL);
#endif
  {
   std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator tolua_ret = (std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator)  self->rend();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<cocos2d::CCFiniteTimeAction*>::reverse_iterator");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rend'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copy of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___copy00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___copy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* self = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copy'", NULL);
#endif
  {
   cocos2d::CCMutableArray<CCFiniteTimeAction*>* tolua_ret = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  self->copy();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCFiniteTimeAction*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: arrayWithArray of class  cocos2d::CCMutableArray<CCFiniteTimeAction*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___arrayWithArray00
static int tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___arrayWithArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCFiniteTimeAction*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCFiniteTimeAction*>* pArray = ((cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCMutableArray<CCFiniteTimeAction*>* tolua_ret = (cocos2d::CCMutableArray<CCFiniteTimeAction*>*)  cocos2d::CCMutableArray<CCFiniteTimeAction*>::arrayWithArray(pArray);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCFiniteTimeAction*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'arrayWithArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___new00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMutableDictionary<std::string,CCObject*>* tolua_ret = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  Mtolua_new((cocos2d::CCMutableDictionary<std::string,CCObject*>)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableDictionary<std::string,CCObject*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___new00_local
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMutableDictionary<std::string,CCObject*>* tolua_ret = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  Mtolua_new((cocos2d::CCMutableDictionary<std::string,CCObject*>)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableDictionary<std::string,CCObject*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___delete00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___count00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->count();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: allKeys of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___allKeys00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___allKeys00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'allKeys'", NULL);
#endif
  {
   std::vector<std::string> tolua_ret = (std::vector<std::string>)  self->allKeys();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allKeys'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: allKeysForObject of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___allKeysForObject00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___allKeysForObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* object = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'allKeysForObject'", NULL);
#endif
  {
   std::vector<std::string> tolua_ret = (std::vector<std::string>)  self->allKeysForObject(object);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::vector<std::string>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::vector<std::string>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::vector<std::string>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'allKeysForObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectForKey of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___objectForKey00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___objectForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectForKey'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->objectForKey(key);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObject of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___setObject00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___setObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->setObject(pObject,key);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObjectForKey of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___removeObjectForKey00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___removeObjectForKey00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObjectForKey'", NULL);
#endif
  {
   self->removeObjectForKey(key);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectForKey'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: begin of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___begin00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___begin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'begin'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->begin();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'begin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: next of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___next00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___next00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,NULL));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'next'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->next(&key);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
   tolua_pushcppstring(tolua_S,(const char*)key);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'next'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endToLua of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___endToLua00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___endToLua00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endToLua'", NULL);
#endif
  {
   self->endToLua();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endToLua'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllObjects of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___removeAllObjects00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___removeAllObjects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableDictionary<std::string,CCObject*>* self = (cocos2d::CCMutableDictionary<std::string,CCObject*>*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllObjects'", NULL);
#endif
  {
   self->removeAllObjects();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllObjects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dictionaryWithDictionary of class  cocos2d::CCMutableDictionary<std::string,CCObject*> */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___dictionaryWithDictionary00
static int tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___dictionaryWithDictionary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMutableDictionary<std::string,CCObject*>",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCMutableDictionary<std::string,cocos2d::CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCMutableDictionary<std::string,cocos2d::CCObject*>* srcDict = ((CCMutableDictionary<std::string,cocos2d::CCObject*>*)  tolua_tousertype(tolua_S,2,0));
  {
   CCMutableDictionary<std::string,cocos2d::CCObject*>* tolua_ret = (CCMutableDictionary<std::string,cocos2d::CCObject*>*)  cocos2d::CCMutableDictionary<std::string,CCObject*>::dictionaryWithDictionary(srcDict);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCMutableDictionary<std::string,cocos2d::CCObject*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dictionaryWithDictionary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTouchDelegateType of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_getTouchDelegateType00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_getTouchDelegateType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTouchDelegateType'", NULL);
#endif
  {
   cocos2d::ccTouchDelegateFlag tolua_ret = (cocos2d::ccTouchDelegateFlag)  self->getTouchDelegateType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTouchDelegateType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroy of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_destroy00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'destroy'", NULL);
#endif
  {
   self->destroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keep of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_keep00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_keep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keep'", NULL);
#endif
  {
   self->keep();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchBegan00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchMoved00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchEnded00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchCancelled00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesBegan of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesBegan00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesBegan'", NULL);
#endif
  {
   self->ccTouchesBegan(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesMoved of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesMoved00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesMoved'", NULL);
#endif
  {
   self->ccTouchesMoved(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesEnded of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesEnded00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesEnded'", NULL);
#endif
  {
   self->ccTouchesEnded(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesCancelled of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesCancelled00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesCancelled'", NULL);
#endif
  {
   self->ccTouchesCancelled(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_new00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTouchDelegate* tolua_ret = (cocos2d::CCTouchDelegate*)  Mtolua_new((cocos2d::CCTouchDelegate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTouchDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_new00_local
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTouchDelegate* tolua_ret = (cocos2d::CCTouchDelegate*)  Mtolua_new((cocos2d::CCTouchDelegate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTouchDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerScriptTouchHandler of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_registerScriptTouchHandler00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_registerScriptTouchHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  int eventType = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* pszScriptFunctionName = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerScriptTouchHandler'", NULL);
#endif
  {
   self->registerScriptTouchHandler(eventType,pszScriptFunctionName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerScriptTouchHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isScriptHandlerExist of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_isScriptHandlerExist00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_isScriptHandlerExist00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  int eventType = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isScriptHandlerExist'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isScriptHandlerExist(eventType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isScriptHandlerExist'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: excuteScriptTouchHandler of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_excuteScriptTouchHandler00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_excuteScriptTouchHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  int eventType = ((int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'excuteScriptTouchHandler'", NULL);
#endif
  {
   self->excuteScriptTouchHandler(eventType,pTouch);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'excuteScriptTouchHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: excuteScriptTouchesHandler of class  cocos2d::CCTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTouchDelegate_excuteScriptTouchesHandler00
static int tolua_Cocos2d_cocos2d_CCTouchDelegate_excuteScriptTouchesHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTouchDelegate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTouchDelegate* self = (cocos2d::CCTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  int eventType = ((int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'excuteScriptTouchesHandler'", NULL);
#endif
  {
   self->excuteScriptTouchesHandler(eventType,pTouches);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'excuteScriptTouchesHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCTargetedTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_new00
static int tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTargetedTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTargetedTouchDelegate* tolua_ret = (cocos2d::CCTargetedTouchDelegate*)  Mtolua_new((cocos2d::CCTargetedTouchDelegate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTargetedTouchDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCTargetedTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_new00_local
static int tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTargetedTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCTargetedTouchDelegate* tolua_ret = (cocos2d::CCTargetedTouchDelegate*)  Mtolua_new((cocos2d::CCTargetedTouchDelegate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTargetedTouchDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  cocos2d::CCTargetedTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchBegan00
static int tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTargetedTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTargetedTouchDelegate* self = (cocos2d::CCTargetedTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  cocos2d::CCTargetedTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchMoved00
static int tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTargetedTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTargetedTouchDelegate* self = (cocos2d::CCTargetedTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  cocos2d::CCTargetedTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchEnded00
static int tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTargetedTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTargetedTouchDelegate* self = (cocos2d::CCTargetedTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  cocos2d::CCTargetedTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchCancelled00
static int tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTargetedTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTargetedTouchDelegate* self = (cocos2d::CCTargetedTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(pTouch,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCStandardTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_new00
static int tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCStandardTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCStandardTouchDelegate* tolua_ret = (cocos2d::CCStandardTouchDelegate*)  Mtolua_new((cocos2d::CCStandardTouchDelegate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCStandardTouchDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCStandardTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_new00_local
static int tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCStandardTouchDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCStandardTouchDelegate* tolua_ret = (cocos2d::CCStandardTouchDelegate*)  Mtolua_new((cocos2d::CCStandardTouchDelegate)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCStandardTouchDelegate");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesBegan of class  cocos2d::CCStandardTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesBegan00
static int tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCStandardTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCStandardTouchDelegate* self = (cocos2d::CCStandardTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesBegan'", NULL);
#endif
  {
   self->ccTouchesBegan(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesMoved of class  cocos2d::CCStandardTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesMoved00
static int tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCStandardTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCStandardTouchDelegate* self = (cocos2d::CCStandardTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesMoved'", NULL);
#endif
  {
   self->ccTouchesMoved(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesEnded of class  cocos2d::CCStandardTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesEnded00
static int tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCStandardTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCStandardTouchDelegate* self = (cocos2d::CCStandardTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesEnded'", NULL);
#endif
  {
   self->ccTouchesEnded(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesCancelled of class  cocos2d::CCStandardTouchDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesCancelled00
static int tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCStandardTouchDelegate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCStandardTouchDelegate* self = (cocos2d::CCStandardTouchDelegate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesCancelled'", NULL);
#endif
  {
   self->ccTouchesCancelled(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_new00
static int tolua_Cocos2d_cocos2d_CCCamera_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCCamera* tolua_ret = (cocos2d::CCCamera*)  Mtolua_new((cocos2d::CCCamera)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCamera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_new00_local
static int tolua_Cocos2d_cocos2d_CCCamera_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCCamera* tolua_ret = (cocos2d::CCCamera*)  Mtolua_new((cocos2d::CCCamera)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCamera");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_init00
static int tolua_Cocos2d_cocos2d_CCCamera_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   self->init();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: description of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_description00
static int tolua_Cocos2d_cocos2d_CCCamera_description00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'description'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->description();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'description'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDirty of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_setDirty00
static int tolua_Cocos2d_cocos2d_CCCamera_setDirty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDirty'", NULL);
#endif
  {
   self->setDirty(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDirty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDirty of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_getDirty00
static int tolua_Cocos2d_cocos2d_CCCamera_getDirty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDirty'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getDirty();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDirty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: restore of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_restore00
static int tolua_Cocos2d_cocos2d_CCCamera_restore00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'restore'", NULL);
#endif
  {
   self->restore();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'restore'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: locate of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_locate00
static int tolua_Cocos2d_cocos2d_CCCamera_locate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'locate'", NULL);
#endif
  {
   self->locate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'locate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEyeXYZ of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_setEyeXYZ00
static int tolua_Cocos2d_cocos2d_CCCamera_setEyeXYZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
  float fEyeX = ((float)  tolua_tonumber(tolua_S,2,0));
  float fEyeY = ((float)  tolua_tonumber(tolua_S,3,0));
  float fEyeZ = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEyeXYZ'", NULL);
#endif
  {
   self->setEyeXYZ(fEyeX,fEyeY,fEyeZ);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEyeXYZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCenterXYZ of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_setCenterXYZ00
static int tolua_Cocos2d_cocos2d_CCCamera_setCenterXYZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
  float fCenterX = ((float)  tolua_tonumber(tolua_S,2,0));
  float fCenterY = ((float)  tolua_tonumber(tolua_S,3,0));
  float fCenterZ = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCenterXYZ'", NULL);
#endif
  {
   self->setCenterXYZ(fCenterX,fCenterY,fCenterZ);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCenterXYZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setUpXYZ of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_setUpXYZ00
static int tolua_Cocos2d_cocos2d_CCCamera_setUpXYZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
  float fUpX = ((float)  tolua_tonumber(tolua_S,2,0));
  float fUpY = ((float)  tolua_tonumber(tolua_S,3,0));
  float fUpZ = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setUpXYZ'", NULL);
#endif
  {
   self->setUpXYZ(fUpX,fUpY,fUpZ);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setUpXYZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEyeXYZ of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_getEyeXYZ00
static int tolua_Cocos2d_cocos2d_CCCamera_getEyeXYZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
  float pEyeX = ((float)  tolua_tonumber(tolua_S,2,0));
  float pEyeY = ((float)  tolua_tonumber(tolua_S,3,0));
  float pEyeZ = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEyeXYZ'", NULL);
#endif
  {
   self->getEyeXYZ(&pEyeX,&pEyeY,&pEyeZ);
   tolua_pushnumber(tolua_S,(lua_Number)pEyeX);
   tolua_pushnumber(tolua_S,(lua_Number)pEyeY);
   tolua_pushnumber(tolua_S,(lua_Number)pEyeZ);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEyeXYZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getCenterXYZ of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_getCenterXYZ00
static int tolua_Cocos2d_cocos2d_CCCamera_getCenterXYZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
  float pCenterX = ((float)  tolua_tonumber(tolua_S,2,0));
  float pCenterY = ((float)  tolua_tonumber(tolua_S,3,0));
  float pCenterZ = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getCenterXYZ'", NULL);
#endif
  {
   self->getCenterXYZ(&pCenterX,&pCenterY,&pCenterZ);
   tolua_pushnumber(tolua_S,(lua_Number)pCenterX);
   tolua_pushnumber(tolua_S,(lua_Number)pCenterY);
   tolua_pushnumber(tolua_S,(lua_Number)pCenterZ);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getCenterXYZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getUpXYZ of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_getUpXYZ00
static int tolua_Cocos2d_cocos2d_CCCamera_getUpXYZ00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCamera* self = (cocos2d::CCCamera*)  tolua_tousertype(tolua_S,1,0);
  float pUpX = ((float)  tolua_tonumber(tolua_S,2,0));
  float pUpY = ((float)  tolua_tonumber(tolua_S,3,0));
  float pUpZ = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getUpXYZ'", NULL);
#endif
  {
   self->getUpXYZ(&pUpX,&pUpY,&pUpZ);
   tolua_pushnumber(tolua_S,(lua_Number)pUpX);
   tolua_pushnumber(tolua_S,(lua_Number)pUpY);
   tolua_pushnumber(tolua_S,(lua_Number)pUpZ);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getUpXYZ'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZEye of class  cocos2d::CCCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCamera_getZEye00
static int tolua_Cocos2d_cocos2d_CCCamera_getZEye00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   float tolua_ret = (float)  cocos2d::CCCamera::getZEye();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZEye'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCActionCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionCamera_new00
static int tolua_Cocos2d_cocos2d_CCActionCamera_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCActionCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCActionCamera* tolua_ret = (cocos2d::CCActionCamera*)  Mtolua_new((cocos2d::CCActionCamera)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionCamera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCActionCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionCamera_new00_local
static int tolua_Cocos2d_cocos2d_CCActionCamera_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCActionCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCActionCamera* tolua_ret = (cocos2d::CCActionCamera*)  Mtolua_new((cocos2d::CCActionCamera)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionCamera");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCActionCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionCamera_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCActionCamera_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionCamera",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionCamera* self = (cocos2d::CCActionCamera*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCActionCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionCamera_reverse00
static int tolua_Cocos2d_cocos2d_CCActionCamera_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionCamera* self = (cocos2d::CCActionCamera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCOrbitCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCOrbitCamera_new00
static int tolua_Cocos2d_cocos2d_CCOrbitCamera_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCOrbitCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCOrbitCamera* tolua_ret = (cocos2d::CCOrbitCamera*)  Mtolua_new((cocos2d::CCOrbitCamera)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCOrbitCamera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCOrbitCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCOrbitCamera_new00_local
static int tolua_Cocos2d_cocos2d_CCOrbitCamera_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCOrbitCamera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCOrbitCamera* tolua_ret = (cocos2d::CCOrbitCamera*)  Mtolua_new((cocos2d::CCOrbitCamera)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCOrbitCamera");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCOrbitCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCOrbitCamera_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCOrbitCamera_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCOrbitCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float t = ((float)  tolua_tonumber(tolua_S,2,0));
  float radius = ((float)  tolua_tonumber(tolua_S,3,0));
  float deltaRadius = ((float)  tolua_tonumber(tolua_S,4,0));
  float angleZ = ((float)  tolua_tonumber(tolua_S,5,0));
  float deltaAngleZ = ((float)  tolua_tonumber(tolua_S,6,0));
  float angleX = ((float)  tolua_tonumber(tolua_S,7,0));
  float deltaAngleX = ((float)  tolua_tonumber(tolua_S,8,0));
  {
   cocos2d::CCOrbitCamera* tolua_ret = (cocos2d::CCOrbitCamera*)  cocos2d::CCOrbitCamera::actionWithDuration(t,radius,deltaRadius,angleZ,deltaAngleZ,angleX,deltaAngleX);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCOrbitCamera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCOrbitCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCOrbitCamera_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCOrbitCamera_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCOrbitCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCOrbitCamera* self = (cocos2d::CCOrbitCamera*)  tolua_tousertype(tolua_S,1,0);
  float t = ((float)  tolua_tonumber(tolua_S,2,0));
  float radius = ((float)  tolua_tonumber(tolua_S,3,0));
  float deltaRadius = ((float)  tolua_tonumber(tolua_S,4,0));
  float angleZ = ((float)  tolua_tonumber(tolua_S,5,0));
  float deltaAngleZ = ((float)  tolua_tonumber(tolua_S,6,0));
  float angleX = ((float)  tolua_tonumber(tolua_S,7,0));
  float deltaAngleX = ((float)  tolua_tonumber(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(t,radius,deltaRadius,angleZ,deltaAngleZ,angleX,deltaAngleX);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sphericalRadius of class  cocos2d::CCOrbitCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCOrbitCamera_sphericalRadius00
static int tolua_Cocos2d_cocos2d_CCOrbitCamera_sphericalRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCOrbitCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCOrbitCamera* self = (cocos2d::CCOrbitCamera*)  tolua_tousertype(tolua_S,1,0);
  float r = ((float)  tolua_tonumber(tolua_S,2,0));
  float zenith = ((float)  tolua_tonumber(tolua_S,3,0));
  float azimuth = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'sphericalRadius'", NULL);
#endif
  {
   self->sphericalRadius(&r,&zenith,&azimuth);
   tolua_pushnumber(tolua_S,(lua_Number)r);
   tolua_pushnumber(tolua_S,(lua_Number)zenith);
   tolua_pushnumber(tolua_S,(lua_Number)azimuth);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sphericalRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCOrbitCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCOrbitCamera_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCOrbitCamera_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCOrbitCamera",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCOrbitCamera* self = (cocos2d::CCOrbitCamera*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCOrbitCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCOrbitCamera_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCOrbitCamera_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCOrbitCamera",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCOrbitCamera* self = (cocos2d::CCOrbitCamera*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCOrbitCamera */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCOrbitCamera_update00
static int tolua_Cocos2d_cocos2d_CCOrbitCamera_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCOrbitCamera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCOrbitCamera* self = (cocos2d::CCOrbitCamera*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCActionEase */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionEase_initWithAction00
static int tolua_Cocos2d_cocos2d_CCActionEase_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionEase",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionEase* self = (cocos2d::CCActionEase*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCActionEase */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionEase_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCActionEase_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionEase",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionEase* self = (cocos2d::CCActionEase*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCActionEase */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionEase_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCActionEase_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionEase",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionEase* self = (cocos2d::CCActionEase*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  cocos2d::CCActionEase */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionEase_stop00
static int tolua_Cocos2d_cocos2d_CCActionEase_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionEase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionEase* self = (cocos2d::CCActionEase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCActionEase */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionEase_update00
static int tolua_Cocos2d_cocos2d_CCActionEase_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionEase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionEase* self = (cocos2d::CCActionEase*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCActionEase */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionEase_reverse00
static int tolua_Cocos2d_cocos2d_CCActionEase_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionEase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionEase* self = (cocos2d::CCActionEase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCActionEase */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionEase_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCActionEase_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCActionEase",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCActionEase* tolua_ret = (cocos2d::CCActionEase*)  cocos2d::CCActionEase::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionEase");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCEaseRateAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseRateAction_delete00
static int tolua_Cocos2d_cocos2d_CCEaseRateAction_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseRateAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseRateAction* self = (cocos2d::CCEaseRateAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRate of class  cocos2d::CCEaseRateAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseRateAction_setRate00
static int tolua_Cocos2d_cocos2d_CCEaseRateAction_setRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseRateAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseRateAction* self = (cocos2d::CCEaseRateAction*)  tolua_tousertype(tolua_S,1,0);
  float rate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRate'", NULL);
#endif
  {
   self->setRate(rate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRate of class  cocos2d::CCEaseRateAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseRateAction_getRate00
static int tolua_Cocos2d_cocos2d_CCEaseRateAction_getRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseRateAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseRateAction* self = (cocos2d::CCEaseRateAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCEaseRateAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseRateAction_initWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseRateAction_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseRateAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseRateAction* self = (cocos2d::CCEaseRateAction*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fRate = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction,fRate);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseRateAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseRateAction_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseRateAction_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseRateAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseRateAction* self = (cocos2d::CCEaseRateAction*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseRateAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseRateAction_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseRateAction_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseRateAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseRateAction* self = (cocos2d::CCEaseRateAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseRateAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseRateAction_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseRateAction_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseRateAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fRate = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCEaseRateAction* tolua_ret = (cocos2d::CCEaseRateAction*)  cocos2d::CCEaseRateAction::actionWithAction(pAction,fRate);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseRateAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseIn_update00
static int tolua_Cocos2d_cocos2d_CCEaseIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseIn* self = (cocos2d::CCEaseIn*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseIn_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseIn* self = (cocos2d::CCEaseIn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseIn_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseIn_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fRate = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCEaseIn* tolua_ret = (cocos2d::CCEaseIn*)  cocos2d::CCEaseIn::actionWithAction(pAction,fRate);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseOut* self = (cocos2d::CCEaseOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseOut* self = (cocos2d::CCEaseOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fRate = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCEaseOut* tolua_ret = (cocos2d::CCEaseOut*)  cocos2d::CCEaseOut::actionWithAction(pAction,fRate);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseInOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseInOut* self = (cocos2d::CCEaseInOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseInOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseInOut* self = (cocos2d::CCEaseInOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseInOut_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseInOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseInOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseInOut* self = (cocos2d::CCEaseInOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseInOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseInOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fRate = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCEaseInOut* tolua_ret = (cocos2d::CCEaseInOut*)  cocos2d::CCEaseInOut::actionWithAction(pAction,fRate);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseExponentialIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialIn_update00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseExponentialIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseExponentialIn* self = (cocos2d::CCEaseExponentialIn*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseExponentialIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialIn_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseExponentialIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseExponentialIn* self = (cocos2d::CCEaseExponentialIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseExponentialIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialIn_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseExponentialIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseExponentialIn* self = (cocos2d::CCEaseExponentialIn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseExponentialIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialIn_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialIn_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseExponentialIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseExponentialIn* tolua_ret = (cocos2d::CCEaseExponentialIn*)  cocos2d::CCEaseExponentialIn::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseExponentialIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseExponentialOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseExponentialOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseExponentialOut* self = (cocos2d::CCEaseExponentialOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseExponentialOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialOut_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseExponentialOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseExponentialOut* self = (cocos2d::CCEaseExponentialOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseExponentialOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseExponentialOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseExponentialOut* self = (cocos2d::CCEaseExponentialOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseExponentialOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseExponentialOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseExponentialOut* tolua_ret = (cocos2d::CCEaseExponentialOut*)  cocos2d::CCEaseExponentialOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseExponentialOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseExponentialInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialInOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseExponentialInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseExponentialInOut* self = (cocos2d::CCEaseExponentialInOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseExponentialInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialInOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseExponentialInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseExponentialInOut* self = (cocos2d::CCEaseExponentialInOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseExponentialInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseExponentialInOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseExponentialInOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseExponentialInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseExponentialInOut* tolua_ret = (cocos2d::CCEaseExponentialInOut*)  cocos2d::CCEaseExponentialInOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseExponentialInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseSineIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineIn_update00
static int tolua_Cocos2d_cocos2d_CCEaseSineIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseSineIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseSineIn* self = (cocos2d::CCEaseSineIn*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseSineIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineIn_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseSineIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseSineIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseSineIn* self = (cocos2d::CCEaseSineIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseSineIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineIn_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseSineIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseSineIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseSineIn* self = (cocos2d::CCEaseSineIn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseSineIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineIn_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseSineIn_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseSineIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseSineIn* tolua_ret = (cocos2d::CCEaseSineIn*)  cocos2d::CCEaseSineIn::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseSineIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseSineOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseSineOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseSineOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseSineOut* self = (cocos2d::CCEaseSineOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseSineOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineOut_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseSineOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseSineOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseSineOut* self = (cocos2d::CCEaseSineOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseSineOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseSineOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseSineOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseSineOut* self = (cocos2d::CCEaseSineOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseSineOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseSineOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseSineOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseSineOut* tolua_ret = (cocos2d::CCEaseSineOut*)  cocos2d::CCEaseSineOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseSineOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseSineInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineInOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseSineInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseSineInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseSineInOut* self = (cocos2d::CCEaseSineInOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseSineInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineInOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseSineInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseSineInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseSineInOut* self = (cocos2d::CCEaseSineInOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseSineInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseSineInOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseSineInOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseSineInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseSineInOut* tolua_ret = (cocos2d::CCEaseSineInOut*)  cocos2d::CCEaseSineInOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseSineInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPeriod of class  cocos2d::CCEaseElastic */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElastic_getPeriod00
static int tolua_Cocos2d_cocos2d_CCEaseElastic_getPeriod00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElastic",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElastic* self = (cocos2d::CCEaseElastic*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPeriod'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getPeriod();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPeriod'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPeriod of class  cocos2d::CCEaseElastic */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElastic_setPeriod00
static int tolua_Cocos2d_cocos2d_CCEaseElastic_setPeriod00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElastic",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElastic* self = (cocos2d::CCEaseElastic*)  tolua_tousertype(tolua_S,1,0);
  float fPeriod = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPeriod'", NULL);
#endif
  {
   self->setPeriod(fPeriod);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPeriod'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCEaseElastic */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElastic_initWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseElastic_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElastic",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElastic* self = (cocos2d::CCEaseElastic*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fPeriod = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction,fPeriod);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCEaseElastic */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElastic_initWithAction01
static int tolua_Cocos2d_cocos2d_CCEaseElastic_initWithAction01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElastic",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCEaseElastic* self = (cocos2d::CCEaseElastic*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCEaseElastic_initWithAction00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseElastic */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElastic_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseElastic_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElastic",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElastic* self = (cocos2d::CCEaseElastic*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseElastic */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElastic_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseElastic_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElastic",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElastic* self = (cocos2d::CCEaseElastic*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseElastic */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElastic_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseElastic_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseElastic",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseElastic* tolua_ret = (cocos2d::CCEaseElastic*)  cocos2d::CCEaseElastic::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseElastic");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseElastic */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElastic_actionWithAction01
static int tolua_Cocos2d_cocos2d_CCEaseElastic_actionWithAction01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseElastic",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fPeriod = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCEaseElastic* tolua_ret = (cocos2d::CCEaseElastic*)  cocos2d::CCEaseElastic::actionWithAction(pAction,fPeriod);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseElastic");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCEaseElastic_actionWithAction00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseElasticIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticIn_update00
static int tolua_Cocos2d_cocos2d_CCEaseElasticIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElasticIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElasticIn* self = (cocos2d::CCEaseElasticIn*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseElasticIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticIn_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseElasticIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElasticIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElasticIn* self = (cocos2d::CCEaseElasticIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseElasticIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticIn_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseElasticIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElasticIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElasticIn* self = (cocos2d::CCEaseElasticIn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseElasticIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticIn_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseElasticIn_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseElasticIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseElasticIn* tolua_ret = (cocos2d::CCEaseElasticIn*)  cocos2d::CCEaseElasticIn::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseElasticIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseElasticIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticIn_actionWithAction01
static int tolua_Cocos2d_cocos2d_CCEaseElasticIn_actionWithAction01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseElasticIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fPeriod = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCEaseElasticIn* tolua_ret = (cocos2d::CCEaseElasticIn*)  cocos2d::CCEaseElasticIn::actionWithAction(pAction,fPeriod);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseElasticIn");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCEaseElasticIn_actionWithAction00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseElasticOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseElasticOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElasticOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElasticOut* self = (cocos2d::CCEaseElasticOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseElasticOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticOut_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseElasticOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElasticOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElasticOut* self = (cocos2d::CCEaseElasticOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseElasticOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseElasticOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElasticOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElasticOut* self = (cocos2d::CCEaseElasticOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseElasticOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseElasticOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseElasticOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseElasticOut* tolua_ret = (cocos2d::CCEaseElasticOut*)  cocos2d::CCEaseElasticOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseElasticOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseElasticOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticOut_actionWithAction01
static int tolua_Cocos2d_cocos2d_CCEaseElasticOut_actionWithAction01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseElasticOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fPeriod = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCEaseElasticOut* tolua_ret = (cocos2d::CCEaseElasticOut*)  cocos2d::CCEaseElasticOut::actionWithAction(pAction,fPeriod);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseElasticOut");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCEaseElasticOut_actionWithAction00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseElasticInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticInOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseElasticInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElasticInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElasticInOut* self = (cocos2d::CCEaseElasticInOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseElasticInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticInOut_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseElasticInOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElasticInOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElasticInOut* self = (cocos2d::CCEaseElasticInOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseElasticInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticInOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseElasticInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseElasticInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseElasticInOut* self = (cocos2d::CCEaseElasticInOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseElasticInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticInOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseElasticInOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseElasticInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseElasticInOut* tolua_ret = (cocos2d::CCEaseElasticInOut*)  cocos2d::CCEaseElasticInOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseElasticInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseElasticInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseElasticInOut_actionWithAction01
static int tolua_Cocos2d_cocos2d_CCEaseElasticInOut_actionWithAction01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseElasticInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  float fPeriod = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCEaseElasticInOut* tolua_ret = (cocos2d::CCEaseElasticInOut*)  cocos2d::CCEaseElasticInOut::actionWithAction(pAction,fPeriod);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseElasticInOut");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCEaseElasticInOut_actionWithAction00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: bounceTime of class  cocos2d::CCEaseBounce */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounce_bounceTime00
static int tolua_Cocos2d_cocos2d_CCEaseBounce_bounceTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounce",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounce* self = (cocos2d::CCEaseBounce*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'bounceTime'", NULL);
#endif
  {
    float tolua_ret = (  float)  self->bounceTime(time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'bounceTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseBounce */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounce_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseBounce_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounce",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounce* self = (cocos2d::CCEaseBounce*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseBounce */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounce_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseBounce_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseBounce",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseBounce* tolua_ret = (cocos2d::CCEaseBounce*)  cocos2d::CCEaseBounce::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseBounce");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseBounceIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceIn_update00
static int tolua_Cocos2d_cocos2d_CCEaseBounceIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounceIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounceIn* self = (cocos2d::CCEaseBounceIn*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseBounceIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceIn_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseBounceIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounceIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounceIn* self = (cocos2d::CCEaseBounceIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseBounceIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceIn_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseBounceIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounceIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounceIn* self = (cocos2d::CCEaseBounceIn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseBounceIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceIn_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseBounceIn_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseBounceIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseBounceIn* tolua_ret = (cocos2d::CCEaseBounceIn*)  cocos2d::CCEaseBounceIn::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseBounceIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseBounceOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseBounceOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounceOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounceOut* self = (cocos2d::CCEaseBounceOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseBounceOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceOut_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseBounceOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounceOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounceOut* self = (cocos2d::CCEaseBounceOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseBounceOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseBounceOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounceOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounceOut* self = (cocos2d::CCEaseBounceOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseBounceOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseBounceOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseBounceOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseBounceOut* tolua_ret = (cocos2d::CCEaseBounceOut*)  cocos2d::CCEaseBounceOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseBounceOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseBounceInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceInOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseBounceInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounceInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounceInOut* self = (cocos2d::CCEaseBounceInOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseBounceInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceInOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseBounceInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBounceInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBounceInOut* self = (cocos2d::CCEaseBounceInOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseBounceInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBounceInOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseBounceInOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseBounceInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseBounceInOut* tolua_ret = (cocos2d::CCEaseBounceInOut*)  cocos2d::CCEaseBounceInOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseBounceInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseBackIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackIn_update00
static int tolua_Cocos2d_cocos2d_CCEaseBackIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBackIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBackIn* self = (cocos2d::CCEaseBackIn*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseBackIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackIn_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseBackIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBackIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBackIn* self = (cocos2d::CCEaseBackIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseBackIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackIn_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseBackIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBackIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBackIn* self = (cocos2d::CCEaseBackIn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseBackIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackIn_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseBackIn_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseBackIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseBackIn* tolua_ret = (cocos2d::CCEaseBackIn*)  cocos2d::CCEaseBackIn::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseBackIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseBackOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseBackOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBackOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBackOut* self = (cocos2d::CCEaseBackOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCEaseBackOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackOut_reverse00
static int tolua_Cocos2d_cocos2d_CCEaseBackOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBackOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBackOut* self = (cocos2d::CCEaseBackOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseBackOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseBackOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBackOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBackOut* self = (cocos2d::CCEaseBackOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseBackOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseBackOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseBackOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseBackOut* tolua_ret = (cocos2d::CCEaseBackOut*)  cocos2d::CCEaseBackOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseBackOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCEaseBackInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackInOut_update00
static int tolua_Cocos2d_cocos2d_CCEaseBackInOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBackInOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBackInOut* self = (cocos2d::CCEaseBackInOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCEaseBackInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackInOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCEaseBackInOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCEaseBackInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCEaseBackInOut* self = (cocos2d::CCEaseBackInOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCEaseBackInOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCEaseBackInOut_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCEaseBackInOut_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCEaseBackInOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCActionInterval",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInterval* pAction = ((cocos2d::CCActionInterval*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCEaseBackInOut* tolua_ret = (cocos2d::CCEaseBackInOut*)  cocos2d::CCEaseBackInOut::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCEaseBackInOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitude of class  cocos2d::CCWaves3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves3D_getAmplitude00
static int tolua_Cocos2d_cocos2d_CCWaves3D_getAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves3D* self = (cocos2d::CCWaves3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitude'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitude();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitude of class  cocos2d::CCWaves3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves3D_setAmplitude00
static int tolua_Cocos2d_cocos2d_CCWaves3D_setAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves3D* self = (cocos2d::CCWaves3D*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitude = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitude'", NULL);
#endif
  {
   self->setAmplitude(fAmplitude);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitudeRate of class  cocos2d::CCWaves3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves3D_getAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCWaves3D_getAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves3D* self = (cocos2d::CCWaves3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitudeRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitudeRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitudeRate of class  cocos2d::CCWaves3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves3D_setAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCWaves3D_setAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves3D* self = (cocos2d::CCWaves3D*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitudeRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitudeRate'", NULL);
#endif
  {
   self->setAmplitudeRate(fAmplitudeRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithWaves of class  cocos2d::CCWaves3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves3D_initWithWaves00
static int tolua_Cocos2d_cocos2d_CCWaves3D_initWithWaves00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves3D* self = (cocos2d::CCWaves3D*)  tolua_tousertype(tolua_S,1,0);
  int wav = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithWaves'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithWaves(wav,amp,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithWaves'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCWaves3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCWaves3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves3D* self = (cocos2d::CCWaves3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCWaves3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves3D_update00
static int tolua_Cocos2d_cocos2d_CCWaves3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves3D* self = (cocos2d::CCWaves3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithWaves of class  cocos2d::CCWaves3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves3D_actionWithWaves00
static int tolua_Cocos2d_cocos2d_CCWaves3D_actionWithWaves00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCWaves3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int wav = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCWaves3D* tolua_ret = (cocos2d::CCWaves3D*)  cocos2d::CCWaves3D::actionWithWaves(wav,amp,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCWaves3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithWaves'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCFlipX3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX3D_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCFlipX3D_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipX3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipX3D* self = (cocos2d::CCFlipX3D*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSize of class  cocos2d::CCFlipX3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX3D_initWithSize00
static int tolua_Cocos2d_cocos2d_CCFlipX3D_initWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipX3D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipX3D* self = (cocos2d::CCFlipX3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSize(gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCFlipX3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCFlipX3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipX3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipX3D* self = (cocos2d::CCFlipX3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCFlipX3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX3D_update00
static int tolua_Cocos2d_cocos2d_CCFlipX3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipX3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipX3D* self = (cocos2d::CCFlipX3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCFlipX3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX3D_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCFlipX3D_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFlipX3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCFlipX3D* tolua_ret = (cocos2d::CCFlipX3D*)  cocos2d::CCFlipX3D::actionWithDuration(duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFlipX3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCFlipY3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY3D_update00
static int tolua_Cocos2d_cocos2d_CCFlipY3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipY3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipY3D* self = (cocos2d::CCFlipY3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCFlipY3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCFlipY3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipY3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipY3D* self = (cocos2d::CCFlipY3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCFlipY3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY3D_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCFlipY3D_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFlipY3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCFlipY3D* tolua_ret = (cocos2d::CCFlipY3D*)  cocos2d::CCFlipY3D::actionWithDuration(duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFlipY3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getLensEffect of class  cocos2d::CCLens3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLens3D_getLensEffect00
static int tolua_Cocos2d_cocos2d_CCLens3D_getLensEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLens3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLens3D* self = (cocos2d::CCLens3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getLensEffect'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getLensEffect();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getLensEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setLensEffect of class  cocos2d::CCLens3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLens3D_setLensEffect00
static int tolua_Cocos2d_cocos2d_CCLens3D_setLensEffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLens3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLens3D* self = (cocos2d::CCLens3D*)  tolua_tousertype(tolua_S,1,0);
  float fLensEffect = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setLensEffect'", NULL);
#endif
  {
   self->setLensEffect(fLensEffect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setLensEffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  cocos2d::CCLens3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLens3D_getPosition00
static int tolua_Cocos2d_cocos2d_CCLens3D_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLens3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLens3D* self = (cocos2d::CCLens3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  cocos2d::CCLens3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLens3D_setPosition00
static int tolua_Cocos2d_cocos2d_CCLens3D_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLens3D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLens3D* self = (cocos2d::CCLens3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'", NULL);
#endif
  {
   self->setPosition(position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithPosition of class  cocos2d::CCLens3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLens3D_initWithPosition00
static int tolua_Cocos2d_cocos2d_CCLens3D_initWithPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLens3D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLens3D* self = (cocos2d::CCLens3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float r = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithPosition'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithPosition(pos,r,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCLens3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLens3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCLens3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLens3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLens3D* self = (cocos2d::CCLens3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCLens3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLens3D_update00
static int tolua_Cocos2d_cocos2d_CCLens3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLens3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLens3D* self = (cocos2d::CCLens3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithPosition of class  cocos2d::CCLens3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLens3D_actionWithPosition00
static int tolua_Cocos2d_cocos2d_CCLens3D_actionWithPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLens3D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float r = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCLens3D* tolua_ret = (cocos2d::CCLens3D*)  cocos2d::CCLens3D::actionWithPosition(pos,r,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLens3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_getPosition00
static int tolua_Cocos2d_cocos2d_CCRipple3D_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRipple3D* self = (cocos2d::CCRipple3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_setPosition00
static int tolua_Cocos2d_cocos2d_CCRipple3D_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRipple3D* self = (cocos2d::CCRipple3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'", NULL);
#endif
  {
   self->setPosition(position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitude of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_getAmplitude00
static int tolua_Cocos2d_cocos2d_CCRipple3D_getAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRipple3D* self = (cocos2d::CCRipple3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitude'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitude();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitude of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_setAmplitude00
static int tolua_Cocos2d_cocos2d_CCRipple3D_setAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRipple3D* self = (cocos2d::CCRipple3D*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitude = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitude'", NULL);
#endif
  {
   self->setAmplitude(fAmplitude);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitudeRate of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_getAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCRipple3D_getAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRipple3D* self = (cocos2d::CCRipple3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitudeRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitudeRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitudeRate of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_setAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCRipple3D_setAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRipple3D* self = (cocos2d::CCRipple3D*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitudeRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitudeRate'", NULL);
#endif
  {
   self->setAmplitudeRate(fAmplitudeRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithPosition of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_initWithPosition00
static int tolua_Cocos2d_cocos2d_CCRipple3D_initWithPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRipple3D* self = (cocos2d::CCRipple3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float r = ((float)  tolua_tonumber(tolua_S,3,0));
  int wav = ((int)  tolua_tonumber(tolua_S,4,0));
  float amp = ((float)  tolua_tonumber(tolua_S,5,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,6,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithPosition'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithPosition(pos,r,wav,amp,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCRipple3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRipple3D* self = (cocos2d::CCRipple3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_update00
static int tolua_Cocos2d_cocos2d_CCRipple3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRipple3D* self = (cocos2d::CCRipple3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithPosition of class  cocos2d::CCRipple3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRipple3D_actionWithPosition00
static int tolua_Cocos2d_cocos2d_CCRipple3D_actionWithPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRipple3D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  float r = ((float)  tolua_tonumber(tolua_S,3,0));
  int wav = ((int)  tolua_tonumber(tolua_S,4,0));
  float amp = ((float)  tolua_tonumber(tolua_S,5,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,6,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,7,0));
  {
   cocos2d::CCRipple3D* tolua_ret = (cocos2d::CCRipple3D*)  cocos2d::CCRipple3D::actionWithPosition(pos,r,wav,amp,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRipple3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithRange of class  cocos2d::CCShaky3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShaky3D_initWithRange00
static int tolua_Cocos2d_cocos2d_CCShaky3D_initWithRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShaky3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShaky3D* self = (cocos2d::CCShaky3D*)  tolua_tousertype(tolua_S,1,0);
  int range = ((int)  tolua_tonumber(tolua_S,2,0));
  bool shakeZ = ((bool)  tolua_toboolean(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithRange'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithRange(range,shakeZ,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCShaky3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShaky3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCShaky3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShaky3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShaky3D* self = (cocos2d::CCShaky3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCShaky3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShaky3D_update00
static int tolua_Cocos2d_cocos2d_CCShaky3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShaky3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShaky3D* self = (cocos2d::CCShaky3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithRange of class  cocos2d::CCShaky3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShaky3D_actionWithRange00
static int tolua_Cocos2d_cocos2d_CCShaky3D_actionWithRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCShaky3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int range = ((int)  tolua_tonumber(tolua_S,2,0));
  bool shakeZ = ((bool)  tolua_toboolean(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCShaky3D* tolua_ret = (cocos2d::CCShaky3D*)  cocos2d::CCShaky3D::actionWithRange(range,shakeZ,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCShaky3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitude of class  cocos2d::CCLiquid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLiquid_getAmplitude00
static int tolua_Cocos2d_cocos2d_CCLiquid_getAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLiquid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLiquid* self = (cocos2d::CCLiquid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitude'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitude();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitude of class  cocos2d::CCLiquid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLiquid_setAmplitude00
static int tolua_Cocos2d_cocos2d_CCLiquid_setAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLiquid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLiquid* self = (cocos2d::CCLiquid*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitude = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitude'", NULL);
#endif
  {
   self->setAmplitude(fAmplitude);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitudeRate of class  cocos2d::CCLiquid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLiquid_getAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCLiquid_getAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLiquid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLiquid* self = (cocos2d::CCLiquid*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitudeRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitudeRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitudeRate of class  cocos2d::CCLiquid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLiquid_setAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCLiquid_setAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLiquid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLiquid* self = (cocos2d::CCLiquid*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitudeRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitudeRate'", NULL);
#endif
  {
   self->setAmplitudeRate(fAmplitudeRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithWaves of class  cocos2d::CCLiquid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLiquid_initWithWaves00
static int tolua_Cocos2d_cocos2d_CCLiquid_initWithWaves00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLiquid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLiquid* self = (cocos2d::CCLiquid*)  tolua_tousertype(tolua_S,1,0);
  int wav = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithWaves'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithWaves(wav,amp,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithWaves'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCLiquid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLiquid_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCLiquid_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLiquid",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLiquid* self = (cocos2d::CCLiquid*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCLiquid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLiquid_update00
static int tolua_Cocos2d_cocos2d_CCLiquid_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLiquid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLiquid* self = (cocos2d::CCLiquid*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithWaves of class  cocos2d::CCLiquid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLiquid_actionWithWaves00
static int tolua_Cocos2d_cocos2d_CCLiquid_actionWithWaves00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLiquid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int wav = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCLiquid* tolua_ret = (cocos2d::CCLiquid*)  cocos2d::CCLiquid::actionWithWaves(wav,amp,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLiquid");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithWaves'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitude of class  cocos2d::CCWaves */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves_getAmplitude00
static int tolua_Cocos2d_cocos2d_CCWaves_getAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves* self = (cocos2d::CCWaves*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitude'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitude();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitude of class  cocos2d::CCWaves */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves_setAmplitude00
static int tolua_Cocos2d_cocos2d_CCWaves_setAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves* self = (cocos2d::CCWaves*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitude = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitude'", NULL);
#endif
  {
   self->setAmplitude(fAmplitude);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitudeRate of class  cocos2d::CCWaves */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves_getAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCWaves_getAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves* self = (cocos2d::CCWaves*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitudeRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitudeRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitudeRate of class  cocos2d::CCWaves */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves_setAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCWaves_setAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves* self = (cocos2d::CCWaves*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitudeRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitudeRate'", NULL);
#endif
  {
   self->setAmplitudeRate(fAmplitudeRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithWaves of class  cocos2d::CCWaves */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves_initWithWaves00
static int tolua_Cocos2d_cocos2d_CCWaves_initWithWaves00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves* self = (cocos2d::CCWaves*)  tolua_tousertype(tolua_S,1,0);
  int wav = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  bool h = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool v = ((bool)  tolua_toboolean(tolua_S,5,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,6,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithWaves'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithWaves(wav,amp,h,v,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithWaves'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCWaves */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCWaves_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves* self = (cocos2d::CCWaves*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCWaves */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves_update00
static int tolua_Cocos2d_cocos2d_CCWaves_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWaves",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWaves* self = (cocos2d::CCWaves*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithWaves of class  cocos2d::CCWaves */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWaves_actionWithWaves00
static int tolua_Cocos2d_cocos2d_CCWaves_actionWithWaves00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCWaves",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int wav = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  bool h = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool v = ((bool)  tolua_toboolean(tolua_S,5,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,6,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,7,0));
  {
   cocos2d::CCWaves* tolua_ret = (cocos2d::CCWaves*)  cocos2d::CCWaves::actionWithWaves(wav,amp,h,v,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCWaves");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithWaves'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getPosition of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_getPosition00
static int tolua_Cocos2d_cocos2d_CCTwirl_getPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTwirl* self = (cocos2d::CCTwirl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getPosition'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setPosition of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_setPosition00
static int tolua_Cocos2d_cocos2d_CCTwirl_setPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTwirl* self = (cocos2d::CCTwirl*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setPosition'", NULL);
#endif
  {
   self->setPosition(position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitude of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_getAmplitude00
static int tolua_Cocos2d_cocos2d_CCTwirl_getAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTwirl* self = (cocos2d::CCTwirl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitude'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitude();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitude of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_setAmplitude00
static int tolua_Cocos2d_cocos2d_CCTwirl_setAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTwirl* self = (cocos2d::CCTwirl*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitude = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitude'", NULL);
#endif
  {
   self->setAmplitude(fAmplitude);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitudeRate of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_getAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCTwirl_getAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTwirl* self = (cocos2d::CCTwirl*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitudeRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitudeRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitudeRate of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_setAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCTwirl_setAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTwirl* self = (cocos2d::CCTwirl*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitudeRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitudeRate'", NULL);
#endif
  {
   self->setAmplitudeRate(fAmplitudeRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithPosition of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_initWithPosition00
static int tolua_Cocos2d_cocos2d_CCTwirl_initWithPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTwirl* self = (cocos2d::CCTwirl*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  int t = ((int)  tolua_tonumber(tolua_S,3,0));
  float amp = ((float)  tolua_tonumber(tolua_S,4,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,5,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithPosition'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithPosition(pos,t,amp,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCTwirl_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTwirl* self = (cocos2d::CCTwirl*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_update00
static int tolua_Cocos2d_cocos2d_CCTwirl_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTwirl* self = (cocos2d::CCTwirl*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithPosition of class  cocos2d::CCTwirl */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTwirl_actionWithPosition00
static int tolua_Cocos2d_cocos2d_CCTwirl_actionWithPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTwirl",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  int t = ((int)  tolua_tonumber(tolua_S,3,0));
  float amp = ((float)  tolua_tonumber(tolua_S,4,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,5,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,6,0));
  {
   cocos2d::CCTwirl* tolua_ret = (cocos2d::CCTwirl*)  cocos2d::CCTwirl::actionWithPosition(pos,t,amp,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTwirl");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCGridAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCGridAction_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCGridAction_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCGridAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCGridAction* self = (cocos2d::CCGridAction*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCGridAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCGridAction_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCGridAction_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCGridAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCGridAction* self = (cocos2d::CCGridAction*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCGridAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCGridAction_reverse00
static int tolua_Cocos2d_cocos2d_CCGridAction_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCGridAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCGridAction* self = (cocos2d::CCGridAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSize of class  cocos2d::CCGridAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCGridAction_initWithSize00
static int tolua_Cocos2d_cocos2d_CCGridAction_initWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCGridAction",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCGridAction* self = (cocos2d::CCGridAction*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSize'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSize(gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGrid of class  cocos2d::CCGridAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCGridAction_getGrid00
static int tolua_Cocos2d_cocos2d_CCGridAction_getGrid00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCGridAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCGridAction* self = (cocos2d::CCGridAction*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGrid'", NULL);
#endif
  {
   cocos2d::CCGridBase* tolua_ret = (cocos2d::CCGridBase*)  self->getGrid();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCGridBase");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGrid'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCGridAction */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCGridAction_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCGridAction_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCGridAction",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCGridAction* tolua_ret = (cocos2d::CCGridAction*)  cocos2d::CCGridAction::actionWithSize(gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCGridAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCAccelDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_delete00
static int tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelDeccelAmplitude* self = (cocos2d::CCAccelDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCAccelDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_initWithAction00
static int tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelDeccelAmplitude",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelDeccelAmplitude* self = (cocos2d::CCAccelDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAction* pAction = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCAccelDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelDeccelAmplitude",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelDeccelAmplitude* self = (cocos2d::CCAccelDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCAccelDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_update00
static int tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelDeccelAmplitude* self = (cocos2d::CCAccelDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCAccelDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_reverse00
static int tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelDeccelAmplitude* self = (cocos2d::CCAccelDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRate of class  cocos2d::CCAccelDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_getRate00
static int tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_getRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelDeccelAmplitude* self = (cocos2d::CCAccelDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRate of class  cocos2d::CCAccelDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_setRate00
static int tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_setRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelDeccelAmplitude* self = (cocos2d::CCAccelDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
  float fRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRate'", NULL);
#endif
  {
   self->setRate(fRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCAccelDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAccelDeccelAmplitude",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* pAction = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCAccelDeccelAmplitude* tolua_ret = (cocos2d::CCAccelDeccelAmplitude*)  cocos2d::CCAccelDeccelAmplitude::actionWithAction(pAction,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAccelDeccelAmplitude");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCAccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelAmplitude_delete00
static int tolua_Cocos2d_cocos2d_CCAccelAmplitude_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelAmplitude",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelAmplitude* self = (cocos2d::CCAccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCAccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelAmplitude_initWithAction00
static int tolua_Cocos2d_cocos2d_CCAccelAmplitude_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelAmplitude",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelAmplitude* self = (cocos2d::CCAccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAction* pAction = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRate of class  cocos2d::CCAccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelAmplitude_getRate00
static int tolua_Cocos2d_cocos2d_CCAccelAmplitude_getRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelAmplitude",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelAmplitude* self = (cocos2d::CCAccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRate of class  cocos2d::CCAccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelAmplitude_setRate00
static int tolua_Cocos2d_cocos2d_CCAccelAmplitude_setRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelAmplitude",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelAmplitude* self = (cocos2d::CCAccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
  float fRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRate'", NULL);
#endif
  {
   self->setRate(fRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCAccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelAmplitude_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCAccelAmplitude_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelAmplitude",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelAmplitude* self = (cocos2d::CCAccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCAccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelAmplitude_update00
static int tolua_Cocos2d_cocos2d_CCAccelAmplitude_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelAmplitude",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelAmplitude* self = (cocos2d::CCAccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCAccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelAmplitude_reverse00
static int tolua_Cocos2d_cocos2d_CCAccelAmplitude_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAccelAmplitude",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAccelAmplitude* self = (cocos2d::CCAccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCAccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAccelAmplitude_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCAccelAmplitude_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAccelAmplitude",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* pAction = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCAccelAmplitude* tolua_ret = (cocos2d::CCAccelAmplitude*)  cocos2d::CCAccelAmplitude::actionWithAction(pAction,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAccelAmplitude");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDeccelAmplitude_delete00
static int tolua_Cocos2d_cocos2d_CCDeccelAmplitude_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDeccelAmplitude* self = (cocos2d::CCDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDeccelAmplitude_initWithAction00
static int tolua_Cocos2d_cocos2d_CCDeccelAmplitude_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDeccelAmplitude",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDeccelAmplitude* self = (cocos2d::CCDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAction* pAction = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRate of class  cocos2d::CCDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDeccelAmplitude_getRate00
static int tolua_Cocos2d_cocos2d_CCDeccelAmplitude_getRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDeccelAmplitude* self = (cocos2d::CCDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRate of class  cocos2d::CCDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDeccelAmplitude_setRate00
static int tolua_Cocos2d_cocos2d_CCDeccelAmplitude_setRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDeccelAmplitude* self = (cocos2d::CCDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
  float fRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRate'", NULL);
#endif
  {
   self->setRate(fRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDeccelAmplitude_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCDeccelAmplitude_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDeccelAmplitude",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDeccelAmplitude* self = (cocos2d::CCDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDeccelAmplitude_update00
static int tolua_Cocos2d_cocos2d_CCDeccelAmplitude_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDeccelAmplitude* self = (cocos2d::CCDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDeccelAmplitude_reverse00
static int tolua_Cocos2d_cocos2d_CCDeccelAmplitude_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDeccelAmplitude",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDeccelAmplitude* self = (cocos2d::CCDeccelAmplitude*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCDeccelAmplitude */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDeccelAmplitude_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCDeccelAmplitude_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCDeccelAmplitude",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAction* pAction = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCDeccelAmplitude* tolua_ret = (cocos2d::CCDeccelAmplitude*)  cocos2d::CCDeccelAmplitude::actionWithAction(pAction,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCDeccelAmplitude");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCStopGrid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCStopGrid_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCStopGrid_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCStopGrid",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCStopGrid* self = (cocos2d::CCStopGrid*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCStopGrid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCStopGrid_action00
static int tolua_Cocos2d_cocos2d_CCStopGrid_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCStopGrid",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCStopGrid* tolua_ret = (cocos2d::CCStopGrid*)  cocos2d::CCStopGrid::action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCStopGrid");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTimes of class  cocos2d::CCReuseGrid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReuseGrid_initWithTimes00
static int tolua_Cocos2d_cocos2d_CCReuseGrid_initWithTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCReuseGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCReuseGrid* self = (cocos2d::CCReuseGrid*)  tolua_tousertype(tolua_S,1,0);
  int times = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTimes'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTimes(times);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCReuseGrid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReuseGrid_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCReuseGrid_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCReuseGrid",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCReuseGrid* self = (cocos2d::CCReuseGrid*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithTimes of class  cocos2d::CCReuseGrid */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReuseGrid_actionWithTimes00
static int tolua_Cocos2d_cocos2d_CCReuseGrid_actionWithTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCReuseGrid",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int times = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCReuseGrid* tolua_ret = (cocos2d::CCReuseGrid*)  cocos2d::CCReuseGrid::actionWithTimes(times);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCReuseGrid");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCActionInstant */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInstant_new00
static int tolua_Cocos2d_cocos2d_CCActionInstant_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCActionInstant",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCActionInstant* tolua_ret = (cocos2d::CCActionInstant*)  Mtolua_new((cocos2d::CCActionInstant)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInstant");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCActionInstant */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInstant_new00_local
static int tolua_Cocos2d_cocos2d_CCActionInstant_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCActionInstant",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCActionInstant* tolua_ret = (cocos2d::CCActionInstant*)  Mtolua_new((cocos2d::CCActionInstant)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInstant");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCActionInstant */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInstant_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCActionInstant_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInstant",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInstant* self = (cocos2d::CCActionInstant*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDone of class  cocos2d::CCActionInstant */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInstant_isDone00
static int tolua_Cocos2d_cocos2d_CCActionInstant_isDone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInstant",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInstant* self = (cocos2d::CCActionInstant*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDone'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDone();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: step of class  cocos2d::CCActionInstant */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInstant_step00
static int tolua_Cocos2d_cocos2d_CCActionInstant_step00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInstant",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInstant* self = (cocos2d::CCActionInstant*)  tolua_tousertype(tolua_S,1,0);
   float dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'step'", NULL);
#endif
  {
   self->step(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'step'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCActionInstant */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInstant_update00
static int tolua_Cocos2d_cocos2d_CCActionInstant_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInstant",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInstant* self = (cocos2d::CCActionInstant*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCActionInstant */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionInstant_reverse00
static int tolua_Cocos2d_cocos2d_CCActionInstant_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionInstant",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionInstant* self = (cocos2d::CCActionInstant*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCShow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShow_new00
static int tolua_Cocos2d_cocos2d_CCShow_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCShow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCShow* tolua_ret = (cocos2d::CCShow*)  Mtolua_new((cocos2d::CCShow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCShow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCShow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShow_new00_local
static int tolua_Cocos2d_cocos2d_CCShow_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCShow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCShow* tolua_ret = (cocos2d::CCShow*)  Mtolua_new((cocos2d::CCShow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCShow");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCShow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShow_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCShow_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShow",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShow* self = (cocos2d::CCShow*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCShow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShow_reverse00
static int tolua_Cocos2d_cocos2d_CCShow_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShow* self = (cocos2d::CCShow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCShow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShow_action00
static int tolua_Cocos2d_cocos2d_CCShow_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCShow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCShow* tolua_ret = (cocos2d::CCShow*)  cocos2d::CCShow::action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCShow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCHide */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCHide_new00
static int tolua_Cocos2d_cocos2d_CCHide_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCHide",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCHide* tolua_ret = (cocos2d::CCHide*)  Mtolua_new((cocos2d::CCHide)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCHide");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCHide */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCHide_new00_local
static int tolua_Cocos2d_cocos2d_CCHide_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCHide",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCHide* tolua_ret = (cocos2d::CCHide*)  Mtolua_new((cocos2d::CCHide)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCHide");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCHide */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCHide_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCHide_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCHide",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCHide* self = (cocos2d::CCHide*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCHide */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCHide_reverse00
static int tolua_Cocos2d_cocos2d_CCHide_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCHide",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCHide* self = (cocos2d::CCHide*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCHide */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCHide_action00
static int tolua_Cocos2d_cocos2d_CCHide_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCHide",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCHide* tolua_ret = (cocos2d::CCHide*)  cocos2d::CCHide::action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCHide");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCToggleVisibility */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCToggleVisibility_new00
static int tolua_Cocos2d_cocos2d_CCToggleVisibility_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCToggleVisibility",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCToggleVisibility* tolua_ret = (cocos2d::CCToggleVisibility*)  Mtolua_new((cocos2d::CCToggleVisibility)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCToggleVisibility");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCToggleVisibility */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCToggleVisibility_new00_local
static int tolua_Cocos2d_cocos2d_CCToggleVisibility_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCToggleVisibility",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCToggleVisibility* tolua_ret = (cocos2d::CCToggleVisibility*)  Mtolua_new((cocos2d::CCToggleVisibility)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCToggleVisibility");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCToggleVisibility */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCToggleVisibility_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCToggleVisibility_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCToggleVisibility",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCToggleVisibility* self = (cocos2d::CCToggleVisibility*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: action of class  cocos2d::CCToggleVisibility */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCToggleVisibility_action00
static int tolua_Cocos2d_cocos2d_CCToggleVisibility_action00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCToggleVisibility",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCToggleVisibility* tolua_ret = (cocos2d::CCToggleVisibility*)  cocos2d::CCToggleVisibility::action();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCToggleVisibility");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'action'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX_new00
static int tolua_Cocos2d_cocos2d_CCFlipX_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCFlipX* tolua_ret = (cocos2d::CCFlipX*)  Mtolua_new((cocos2d::CCFlipX)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFlipX");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX_new00_local
static int tolua_Cocos2d_cocos2d_CCFlipX_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCFlipX* tolua_ret = (cocos2d::CCFlipX*)  Mtolua_new((cocos2d::CCFlipX)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFlipX");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithFlipX of class  cocos2d::CCFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX_actionWithFlipX00
static int tolua_Cocos2d_cocos2d_CCFlipX_actionWithFlipX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFlipX",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool x = ((bool)  tolua_toboolean(tolua_S,2,0));
  {
   cocos2d::CCFlipX* tolua_ret = (cocos2d::CCFlipX*)  cocos2d::CCFlipX::actionWithFlipX(x);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFlipX");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithFlipX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFlipX of class  cocos2d::CCFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX_initWithFlipX00
static int tolua_Cocos2d_cocos2d_CCFlipX_initWithFlipX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipX",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipX* self = (cocos2d::CCFlipX*)  tolua_tousertype(tolua_S,1,0);
  bool x = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFlipX'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFlipX(x);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFlipX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCFlipX_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipX",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipX* self = (cocos2d::CCFlipX*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX_reverse00
static int tolua_Cocos2d_cocos2d_CCFlipX_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipX",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipX* self = (cocos2d::CCFlipX*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCFlipX */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipX_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCFlipX_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipX",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipX* self = (cocos2d::CCFlipX*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY_new00
static int tolua_Cocos2d_cocos2d_CCFlipY_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCFlipY* tolua_ret = (cocos2d::CCFlipY*)  Mtolua_new((cocos2d::CCFlipY)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFlipY");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY_new00_local
static int tolua_Cocos2d_cocos2d_CCFlipY_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCFlipY* tolua_ret = (cocos2d::CCFlipY*)  Mtolua_new((cocos2d::CCFlipY)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFlipY");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithFlipY of class  cocos2d::CCFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY_actionWithFlipY00
static int tolua_Cocos2d_cocos2d_CCFlipY_actionWithFlipY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFlipY",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool y = ((bool)  tolua_toboolean(tolua_S,2,0));
  {
   cocos2d::CCFlipY* tolua_ret = (cocos2d::CCFlipY*)  cocos2d::CCFlipY::actionWithFlipY(y);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFlipY");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithFlipY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFlipY of class  cocos2d::CCFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY_initWithFlipY00
static int tolua_Cocos2d_cocos2d_CCFlipY_initWithFlipY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipY",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipY* self = (cocos2d::CCFlipY*)  tolua_tousertype(tolua_S,1,0);
  bool y = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFlipY'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFlipY(y);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFlipY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCFlipY_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipY",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipY* self = (cocos2d::CCFlipY*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY_reverse00
static int tolua_Cocos2d_cocos2d_CCFlipY_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipY",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipY* self = (cocos2d::CCFlipY*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCFlipY */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFlipY_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCFlipY_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFlipY",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFlipY* self = (cocos2d::CCFlipY*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCPlace */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPlace_new00
static int tolua_Cocos2d_cocos2d_CCPlace_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPlace",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCPlace* tolua_ret = (cocos2d::CCPlace*)  Mtolua_new((cocos2d::CCPlace)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPlace");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCPlace */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPlace_new00_local
static int tolua_Cocos2d_cocos2d_CCPlace_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPlace",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCPlace* tolua_ret = (cocos2d::CCPlace*)  Mtolua_new((cocos2d::CCPlace)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPlace");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithPosition of class  cocos2d::CCPlace */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPlace_actionWithPosition00
static int tolua_Cocos2d_cocos2d_CCPlace_actionWithPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPlace",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCPlace* tolua_ret = (cocos2d::CCPlace*)  cocos2d::CCPlace::actionWithPosition(pos);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPlace");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithPosition of class  cocos2d::CCPlace */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPlace_initWithPosition00
static int tolua_Cocos2d_cocos2d_CCPlace_initWithPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCPlace",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPlace* self = (cocos2d::CCPlace*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint pos = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithPosition'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithPosition(pos);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCPlace */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPlace_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCPlace_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCPlace",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPlace* self = (cocos2d::CCPlace*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCPlace */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPlace_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCPlace_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCPlace",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPlace* self = (cocos2d::CCPlace*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_new00
static int tolua_Cocos2d_cocos2d_CCCallFunc_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCCallFunc* tolua_ret = (cocos2d::CCCallFunc*)  Mtolua_new((cocos2d::CCCallFunc)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFunc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_new00_local
static int tolua_Cocos2d_cocos2d_CCCallFunc_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCCallFunc* tolua_ret = (cocos2d::CCCallFunc*)  Mtolua_new((cocos2d::CCCallFunc)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithTarget of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_actionWithTarget00
static int tolua_Cocos2d_cocos2d_CCCallFunc_actionWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"SEL_CallFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* pSelectorTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  SEL_CallFunc selector = *((SEL_CallFunc*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCCallFunc* tolua_ret = (cocos2d::CCCallFunc*)  cocos2d::CCCallFunc::actionWithTarget(pSelectorTarget,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFunc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithScriptFuncName of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_actionWithScriptFuncName00
static int tolua_Cocos2d_cocos2d_CCCallFunc_actionWithScriptFuncName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszFuncName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCCallFunc* tolua_ret = (cocos2d::CCCallFunc*)  cocos2d::CCCallFunc::actionWithScriptFuncName(pszFuncName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFunc");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithScriptFuncName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTarget of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_initWithTarget00
static int tolua_Cocos2d_cocos2d_CCCallFunc_initWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFunc* self = (cocos2d::CCCallFunc*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pSelectorTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTarget(pSelectorTarget);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithScriptFuncName of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_initWithScriptFuncName00
static int tolua_Cocos2d_cocos2d_CCCallFunc_initWithScriptFuncName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFunc* self = (cocos2d::CCCallFunc*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFuncName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithScriptFuncName'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithScriptFuncName(pszFuncName);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithScriptFuncName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: execute of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_execute00
static int tolua_Cocos2d_cocos2d_CCCallFunc_execute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFunc* self = (cocos2d::CCCallFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'execute'", NULL);
#endif
  {
   self->execute();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'execute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCCallFunc_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFunc* self = (cocos2d::CCCallFunc*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCCallFunc_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFunc* self = (cocos2d::CCCallFunc*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTargetCallback of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_getTargetCallback00
static int tolua_Cocos2d_cocos2d_CCCallFunc_getTargetCallback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFunc* self = (cocos2d::CCCallFunc*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTargetCallback'", NULL);
#endif
  {
   cocos2d::SelectorProtocol* tolua_ret = (cocos2d::SelectorProtocol*)  self->getTargetCallback();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::SelectorProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTargetCallback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTargetCallback of class  cocos2d::CCCallFunc */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFunc_setTargetCallback00
static int tolua_Cocos2d_cocos2d_CCCallFunc_setTargetCallback00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFunc",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFunc* self = (cocos2d::CCCallFunc*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pSel = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTargetCallback'", NULL);
#endif
  {
   self->setTargetCallback(pSel);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTargetCallback'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCCallFuncN */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncN_new00
static int tolua_Cocos2d_cocos2d_CCCallFuncN_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncN",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCCallFuncN* tolua_ret = (cocos2d::CCCallFuncN*)  Mtolua_new((cocos2d::CCCallFuncN)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncN");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCCallFuncN */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncN_new00_local
static int tolua_Cocos2d_cocos2d_CCCallFuncN_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncN",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCCallFuncN* tolua_ret = (cocos2d::CCCallFuncN*)  Mtolua_new((cocos2d::CCCallFuncN)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncN");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithTarget of class  cocos2d::CCCallFuncN */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncN_actionWithTarget00
static int tolua_Cocos2d_cocos2d_CCCallFuncN_actionWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncN",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"SEL_CallFuncN",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* pSelectorTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  SEL_CallFuncN selector = *((SEL_CallFuncN*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCCallFuncN* tolua_ret = (cocos2d::CCCallFuncN*)  cocos2d::CCCallFuncN::actionWithTarget(pSelectorTarget,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncN");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithScriptFuncName of class  cocos2d::CCCallFuncN */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncN_actionWithScriptFuncName00
static int tolua_Cocos2d_cocos2d_CCCallFuncN_actionWithScriptFuncName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncN",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszFuncName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCCallFuncN* tolua_ret = (cocos2d::CCCallFuncN*)  cocos2d::CCCallFuncN::actionWithScriptFuncName(pszFuncName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncN");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithScriptFuncName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTarget of class  cocos2d::CCCallFuncN */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncN_initWithTarget00
static int tolua_Cocos2d_cocos2d_CCCallFuncN_initWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncN",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"SEL_CallFuncN",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncN* self = (cocos2d::CCCallFuncN*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pSelectorTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  SEL_CallFuncN selector = *((SEL_CallFuncN*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTarget(pSelectorTarget,selector);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCCallFuncN */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncN_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCCallFuncN_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncN",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncN* self = (cocos2d::CCCallFuncN*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: execute of class  cocos2d::CCCallFuncN */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncN_execute00
static int tolua_Cocos2d_cocos2d_CCCallFuncN_execute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncN",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncN* self = (cocos2d::CCCallFuncN*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'execute'", NULL);
#endif
  {
   self->execute();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'execute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithTarget of class  cocos2d::CCCallFuncND */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncND_actionWithTarget00
static int tolua_Cocos2d_cocos2d_CCCallFuncND_actionWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncND",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"SEL_CallFuncND",0,&tolua_err)) ||
     !tolua_isuserdata(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* pSelectorTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  SEL_CallFuncND selector = *((SEL_CallFuncND*)  tolua_tousertype(tolua_S,3,0));
  void* d = ((void*)  tolua_touserdata(tolua_S,4,0));
  {
   cocos2d::CCCallFuncND* tolua_ret = (cocos2d::CCCallFuncND*)  cocos2d::CCCallFuncND::actionWithTarget(pSelectorTarget,selector,d);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncND");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithScriptFuncName of class  cocos2d::CCCallFuncND */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncND_actionWithScriptFuncName00
static int tolua_Cocos2d_cocos2d_CCCallFuncND_actionWithScriptFuncName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncND",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszFuncName = ((const char*)  tolua_tostring(tolua_S,2,0));
  void* d = ((void*)  tolua_touserdata(tolua_S,3,0));
  {
   cocos2d::CCCallFuncND* tolua_ret = (cocos2d::CCCallFuncND*)  cocos2d::CCCallFuncND::actionWithScriptFuncName(pszFuncName,d);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncND");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithScriptFuncName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTarget of class  cocos2d::CCCallFuncND */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncND_initWithTarget00
static int tolua_Cocos2d_cocos2d_CCCallFuncND_initWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncND",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"SEL_CallFuncND",0,&tolua_err)) ||
     !tolua_isuserdata(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncND* self = (cocos2d::CCCallFuncND*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pSelectorTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  SEL_CallFuncND selector = *((SEL_CallFuncND*)  tolua_tousertype(tolua_S,3,0));
  void* d = ((void*)  tolua_touserdata(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTarget(pSelectorTarget,selector,d);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCCallFuncND */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncND_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCCallFuncND_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncND",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncND* self = (cocos2d::CCCallFuncND*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: execute of class  cocos2d::CCCallFuncND */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncND_execute00
static int tolua_Cocos2d_cocos2d_CCCallFuncND_execute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncND",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncND* self = (cocos2d::CCCallFuncND*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'execute'", NULL);
#endif
  {
   self->execute();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'execute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCCallFuncO */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncO_new00
static int tolua_Cocos2d_cocos2d_CCCallFuncO_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncO",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCCallFuncO* tolua_ret = (cocos2d::CCCallFuncO*)  Mtolua_new((cocos2d::CCCallFuncO)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncO");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCCallFuncO */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncO_new00_local
static int tolua_Cocos2d_cocos2d_CCCallFuncO_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncO",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCCallFuncO* tolua_ret = (cocos2d::CCCallFuncO*)  Mtolua_new((cocos2d::CCCallFuncO)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncO");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithTarget of class  cocos2d::CCCallFuncO */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncO_actionWithTarget00
static int tolua_Cocos2d_cocos2d_CCCallFuncO_actionWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncO",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"SEL_CallFuncO",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* pSelectorTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  SEL_CallFuncO selector = *((SEL_CallFuncO*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,4,0));
  {
   cocos2d::CCCallFuncO* tolua_ret = (cocos2d::CCCallFuncO*)  cocos2d::CCCallFuncO::actionWithTarget(pSelectorTarget,selector,pObject);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncO");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithScriptFuncName of class  cocos2d::CCCallFuncO */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncO_actionWithScriptFuncName00
static int tolua_Cocos2d_cocos2d_CCCallFuncO_actionWithScriptFuncName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCCallFuncO",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszFuncName = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCCallFuncO* tolua_ret = (cocos2d::CCCallFuncO*)  cocos2d::CCCallFuncO::actionWithScriptFuncName(pszFuncName);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCCallFuncO");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithScriptFuncName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTarget of class  cocos2d::CCCallFuncO */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncO_initWithTarget00
static int tolua_Cocos2d_cocos2d_CCCallFuncO_initWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncO",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"SEL_CallFuncO",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncO* self = (cocos2d::CCCallFuncO*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* pSelectorTarget = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  SEL_CallFuncO selector = *((SEL_CallFuncO*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTarget(pSelectorTarget,selector,pObject);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCCallFuncO */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncO_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCCallFuncO_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncO",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncO* self = (cocos2d::CCCallFuncO*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: execute of class  cocos2d::CCCallFuncO */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncO_execute00
static int tolua_Cocos2d_cocos2d_CCCallFuncO_execute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncO",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncO* self = (cocos2d::CCCallFuncO*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'execute'", NULL);
#endif
  {
   self->execute();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'execute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getObject of class  cocos2d::CCCallFuncO */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncO_getObject00
static int tolua_Cocos2d_cocos2d_CCCallFuncO_getObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncO",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncO* self = (cocos2d::CCCallFuncO*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getObject'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->getObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setObject of class  cocos2d::CCCallFuncO */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCCallFuncO_setObject00
static int tolua_Cocos2d_cocos2d_CCCallFuncO_setObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCCallFuncO",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCCallFuncO* self = (cocos2d::CCCallFuncO*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObj = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setObject'", NULL);
#endif
  {
   self->setObject(pObj);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initOneTwo of class  cocos2d::CCSequence */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSequence_initOneTwo00
static int tolua_Cocos2d_cocos2d_CCSequence_initOneTwo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSequence",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSequence* self = (cocos2d::CCSequence*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pActionOne = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCFiniteTimeAction* pActionTwo = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initOneTwo'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initOneTwo(pActionOne,pActionTwo);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initOneTwo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCSequence */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSequence_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCSequence_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSequence",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSequence* self = (cocos2d::CCSequence*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCSequence */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSequence_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCSequence_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSequence",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSequence* self = (cocos2d::CCSequence*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  cocos2d::CCSequence */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSequence_stop00
static int tolua_Cocos2d_cocos2d_CCSequence_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSequence",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSequence* self = (cocos2d::CCSequence*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCSequence */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSequence_update00
static int tolua_Cocos2d_cocos2d_CCSequence_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSequence",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSequence* self = (cocos2d::CCSequence*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCSequence */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSequence_reverse00
static int tolua_Cocos2d_cocos2d_CCSequence_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSequence",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSequence* self = (cocos2d::CCSequence*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionOneTwo of class  cocos2d::CCSequence */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSequence_actionOneTwo00
static int tolua_Cocos2d_cocos2d_CCSequence_actionOneTwo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSequence",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFiniteTimeAction* pActionOne = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCFiniteTimeAction* pActionTwo = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCSequence* tolua_ret = (cocos2d::CCSequence*)  cocos2d::CCSequence::actionOneTwo(pActionOne,pActionTwo);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSequence");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionOneTwo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionsWithArray of class  cocos2d::CCSequence */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSequence_actionsWithArray00
static int tolua_Cocos2d_cocos2d_CCSequence_actionsWithArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSequence",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* actions = ((cocos2d::CCArray*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  cocos2d::CCSequence::actionsWithArray(actions);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionsWithArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_initWithAction00
static int tolua_Cocos2d_cocos2d_CCRepeat_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeat* self = (cocos2d::CCRepeat*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pAction = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
  unsigned int times = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction,times);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCRepeat_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeat* self = (cocos2d::CCRepeat*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCRepeat_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeat* self = (cocos2d::CCRepeat*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_stop00
static int tolua_Cocos2d_cocos2d_CCRepeat_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeat* self = (cocos2d::CCRepeat*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_update00
static int tolua_Cocos2d_cocos2d_CCRepeat_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeat* self = (cocos2d::CCRepeat*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDone of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_isDone00
static int tolua_Cocos2d_cocos2d_CCRepeat_isDone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeat* self = (cocos2d::CCRepeat*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDone'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDone();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_reverse00
static int tolua_Cocos2d_cocos2d_CCRepeat_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeat* self = (cocos2d::CCRepeat*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setInnerAction of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_setInnerAction00
static int tolua_Cocos2d_cocos2d_CCRepeat_setInnerAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeat* self = (cocos2d::CCRepeat*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pAction = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setInnerAction'", NULL);
#endif
  {
   self->setInnerAction(pAction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setInnerAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInnerAction of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_getInnerAction00
static int tolua_Cocos2d_cocos2d_CCRepeat_getInnerAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRepeat* self = (cocos2d::CCRepeat*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getInnerAction'", NULL);
#endif
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  self->getInnerAction();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInnerAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCRepeat */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRepeat_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCRepeat_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRepeat",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFiniteTimeAction* pAction = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
  unsigned int times = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCRepeat* tolua_ret = (cocos2d::CCRepeat*)  cocos2d::CCRepeat::actionWithAction(pAction,times);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRepeat");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initOneTwo of class  cocos2d::CCSpawn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpawn_initOneTwo00
static int tolua_Cocos2d_cocos2d_CCSpawn_initOneTwo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpawn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpawn* self = (cocos2d::CCSpawn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pAction1 = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCFiniteTimeAction* pAction2 = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initOneTwo'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initOneTwo(pAction1,pAction2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initOneTwo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCSpawn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpawn_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCSpawn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpawn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpawn* self = (cocos2d::CCSpawn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCSpawn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpawn_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCSpawn_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpawn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpawn* self = (cocos2d::CCSpawn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  cocos2d::CCSpawn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpawn_stop00
static int tolua_Cocos2d_cocos2d_CCSpawn_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpawn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpawn* self = (cocos2d::CCSpawn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCSpawn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpawn_update00
static int tolua_Cocos2d_cocos2d_CCSpawn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpawn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpawn* self = (cocos2d::CCSpawn*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCSpawn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpawn_reverse00
static int tolua_Cocos2d_cocos2d_CCSpawn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSpawn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSpawn* self = (cocos2d::CCSpawn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionOneTwo of class  cocos2d::CCSpawn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpawn_actionOneTwo00
static int tolua_Cocos2d_cocos2d_CCSpawn_actionOneTwo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpawn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFiniteTimeAction* pAction1 = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCFiniteTimeAction* pAction2 = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCSpawn* tolua_ret = (cocos2d::CCSpawn*)  cocos2d::CCSpawn::actionOneTwo(pAction1,pAction2);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSpawn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionOneTwo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionsWithArray of class  cocos2d::CCSpawn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSpawn_actionsWithArray00
static int tolua_Cocos2d_cocos2d_CCSpawn_actionsWithArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSpawn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* actions = ((cocos2d::CCArray*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCFiniteTimeAction* tolua_ret = (cocos2d::CCFiniteTimeAction*)  cocos2d::CCSpawn::actionsWithArray(actions);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFiniteTimeAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionsWithArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCRotateTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateTo_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCRotateTo_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRotateTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRotateTo* self = (cocos2d::CCRotateTo*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float fDeltaAngle = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,fDeltaAngle);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCRotateTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCRotateTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRotateTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRotateTo* self = (cocos2d::CCRotateTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCRotateTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCRotateTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRotateTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRotateTo* self = (cocos2d::CCRotateTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCRotateTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateTo_update00
static int tolua_Cocos2d_cocos2d_CCRotateTo_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRotateTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRotateTo* self = (cocos2d::CCRotateTo*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCRotateTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCRotateTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRotateTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float fDeltaAngle = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCRotateTo* tolua_ret = (cocos2d::CCRotateTo*)  cocos2d::CCRotateTo::actionWithDuration(duration,fDeltaAngle);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRotateTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCRotateBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateBy_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCRotateBy_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRotateBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRotateBy* self = (cocos2d::CCRotateBy*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float fDeltaAngle = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,fDeltaAngle);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCRotateBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateBy_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCRotateBy_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRotateBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRotateBy* self = (cocos2d::CCRotateBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCRotateBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateBy_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCRotateBy_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRotateBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRotateBy* self = (cocos2d::CCRotateBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCRotateBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateBy_update00
static int tolua_Cocos2d_cocos2d_CCRotateBy_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRotateBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRotateBy* self = (cocos2d::CCRotateBy*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCRotateBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateBy_reverse00
static int tolua_Cocos2d_cocos2d_CCRotateBy_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCRotateBy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCRotateBy* self = (cocos2d::CCRotateBy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCRotateBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRotateBy_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCRotateBy_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRotateBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float fDeltaAngle = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCRotateBy* tolua_ret = (cocos2d::CCRotateBy*)  cocos2d::CCRotateBy::actionWithDuration(duration,fDeltaAngle);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRotateBy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCMoveTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveTo_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCMoveTo_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMoveTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMoveTo* self = (cocos2d::CCMoveTo*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,position);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCMoveTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCMoveTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMoveTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMoveTo* self = (cocos2d::CCMoveTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCMoveTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCMoveTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMoveTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMoveTo* self = (cocos2d::CCMoveTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCMoveTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveTo_update00
static int tolua_Cocos2d_cocos2d_CCMoveTo_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMoveTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMoveTo* self = (cocos2d::CCMoveTo*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCMoveTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCMoveTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMoveTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCMoveTo* tolua_ret = (cocos2d::CCMoveTo*)  cocos2d::CCMoveTo::actionWithDuration(duration,position);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMoveTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCMoveBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveBy_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCMoveBy_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMoveBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMoveBy* self = (cocos2d::CCMoveBy*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,position);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCMoveBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveBy_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCMoveBy_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMoveBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMoveBy* self = (cocos2d::CCMoveBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCMoveBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveBy_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCMoveBy_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMoveBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMoveBy* self = (cocos2d::CCMoveBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCMoveBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveBy_reverse00
static int tolua_Cocos2d_cocos2d_CCMoveBy_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMoveBy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMoveBy* self = (cocos2d::CCMoveBy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCMoveBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMoveBy_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCMoveBy_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMoveBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCMoveBy* tolua_ret = (cocos2d::CCMoveBy*)  cocos2d::CCMoveBy::actionWithDuration(duration,position);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMoveBy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCSkewTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewTo_new00
static int tolua_Cocos2d_cocos2d_CCSkewTo_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSkewTo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSkewTo* tolua_ret = (cocos2d::CCSkewTo*)  Mtolua_new((cocos2d::CCSkewTo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSkewTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCSkewTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewTo_new00_local
static int tolua_Cocos2d_cocos2d_CCSkewTo_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSkewTo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSkewTo* tolua_ret = (cocos2d::CCSkewTo*)  Mtolua_new((cocos2d::CCSkewTo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSkewTo");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCSkewTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewTo_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCSkewTo_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSkewTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSkewTo* self = (cocos2d::CCSkewTo*)  tolua_tousertype(tolua_S,1,0);
   float t = ((  float)  tolua_tonumber(tolua_S,2,0));
  float sx = ((float)  tolua_tonumber(tolua_S,3,0));
  float sy = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(t,sx,sy);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCSkewTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCSkewTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSkewTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSkewTo* self = (cocos2d::CCSkewTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCSkewTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCSkewTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSkewTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSkewTo* self = (cocos2d::CCSkewTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCSkewTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewTo_update00
static int tolua_Cocos2d_cocos2d_CCSkewTo_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSkewTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSkewTo* self = (cocos2d::CCSkewTo*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCSkewTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCSkewTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSkewTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float t = ((  float)  tolua_tonumber(tolua_S,2,0));
  float sx = ((float)  tolua_tonumber(tolua_S,3,0));
  float sy = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCSkewTo* tolua_ret = (cocos2d::CCSkewTo*)  cocos2d::CCSkewTo::actionWithDuration(t,sx,sy);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSkewTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCSkewBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewBy_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCSkewBy_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSkewBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSkewBy* self = (cocos2d::CCSkewBy*)  tolua_tousertype(tolua_S,1,0);
   float t = ((  float)  tolua_tonumber(tolua_S,2,0));
  float sx = ((float)  tolua_tonumber(tolua_S,3,0));
  float sy = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(t,sx,sy);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCSkewBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewBy_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCSkewBy_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSkewBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSkewBy* self = (cocos2d::CCSkewBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCSkewBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewBy_reverse00
static int tolua_Cocos2d_cocos2d_CCSkewBy_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSkewBy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSkewBy* self = (cocos2d::CCSkewBy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCSkewBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSkewBy_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCSkewBy_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSkewBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float t = ((  float)  tolua_tonumber(tolua_S,2,0));
  float deltaSkewX = ((float)  tolua_tonumber(tolua_S,3,0));
  float deltaSkewY = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCSkewBy* tolua_ret = (cocos2d::CCSkewBy*)  cocos2d::CCSkewBy::actionWithDuration(t,deltaSkewX,deltaSkewY);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSkewBy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCJumpBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpBy_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCJumpBy_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpBy* self = (cocos2d::CCJumpBy*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
   float height = ((  float)  tolua_tonumber(tolua_S,4,0));
  int jumps = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,position,height,jumps);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCJumpBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpBy_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCJumpBy_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpBy* self = (cocos2d::CCJumpBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCJumpBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpBy_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCJumpBy_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpBy* self = (cocos2d::CCJumpBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCJumpBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpBy_update00
static int tolua_Cocos2d_cocos2d_CCJumpBy_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpBy* self = (cocos2d::CCJumpBy*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCJumpBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpBy_reverse00
static int tolua_Cocos2d_cocos2d_CCJumpBy_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpBy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpBy* self = (cocos2d::CCJumpBy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCJumpBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpBy_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCJumpBy_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCJumpBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
   float height = ((  float)  tolua_tonumber(tolua_S,4,0));
  int jumps = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCJumpBy* tolua_ret = (cocos2d::CCJumpBy*)  cocos2d::CCJumpBy::actionWithDuration(duration,position,height,jumps);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCJumpBy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCJumpTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCJumpTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpTo* self = (cocos2d::CCJumpTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCJumpTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCJumpTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpTo* self = (cocos2d::CCJumpTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCJumpTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCJumpTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCJumpTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCPoint position = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
   float height = ((  float)  tolua_tonumber(tolua_S,4,0));
  int jumps = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCJumpTo* tolua_ret = (cocos2d::CCJumpTo*)  cocos2d::CCJumpTo::actionWithDuration(duration,position,height,jumps);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCJumpTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: endPosition of class  cocos2d::ccBezierConfig */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBezierConfig_endPosition
static int tolua_get_cocos2d__ccBezierConfig_endPosition(lua_State* tolua_S)
{
  cocos2d::ccBezierConfig* self = (cocos2d::ccBezierConfig*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'endPosition'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->endPosition,"cocos2d::CCPoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: endPosition of class  cocos2d::ccBezierConfig */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBezierConfig_endPosition
static int tolua_set_cocos2d__ccBezierConfig_endPosition(lua_State* tolua_S)
{
  cocos2d::ccBezierConfig* self = (cocos2d::ccBezierConfig*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'endPosition'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->endPosition = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: controlPoint_1 of class  cocos2d::ccBezierConfig */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBezierConfig_controlPoint_1
static int tolua_get_cocos2d__ccBezierConfig_controlPoint_1(lua_State* tolua_S)
{
  cocos2d::ccBezierConfig* self = (cocos2d::ccBezierConfig*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'controlPoint_1'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->controlPoint_1,"cocos2d::CCPoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: controlPoint_1 of class  cocos2d::ccBezierConfig */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBezierConfig_controlPoint_1
static int tolua_set_cocos2d__ccBezierConfig_controlPoint_1(lua_State* tolua_S)
{
  cocos2d::ccBezierConfig* self = (cocos2d::ccBezierConfig*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'controlPoint_1'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->controlPoint_1 = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: controlPoint_2 of class  cocos2d::ccBezierConfig */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBezierConfig_controlPoint_2
static int tolua_get_cocos2d__ccBezierConfig_controlPoint_2(lua_State* tolua_S)
{
  cocos2d::ccBezierConfig* self = (cocos2d::ccBezierConfig*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'controlPoint_2'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->controlPoint_2,"cocos2d::CCPoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: controlPoint_2 of class  cocos2d::ccBezierConfig */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBezierConfig_controlPoint_2
static int tolua_set_cocos2d__ccBezierConfig_controlPoint_2(lua_State* tolua_S)
{
  cocos2d::ccBezierConfig* self = (cocos2d::ccBezierConfig*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'controlPoint_2'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->controlPoint_2 = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCBezierBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBezierBy_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCBezierBy_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBezierBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccBezierConfig",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBezierBy* self = (cocos2d::CCBezierBy*)  tolua_tousertype(tolua_S,1,0);
   float t = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::ccBezierConfig c = *((cocos2d::ccBezierConfig*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(t,c);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCBezierBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBezierBy_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCBezierBy_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBezierBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBezierBy* self = (cocos2d::CCBezierBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCBezierBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBezierBy_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCBezierBy_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBezierBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBezierBy* self = (cocos2d::CCBezierBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCBezierBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBezierBy_update00
static int tolua_Cocos2d_cocos2d_CCBezierBy_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBezierBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBezierBy* self = (cocos2d::CCBezierBy*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCBezierBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBezierBy_reverse00
static int tolua_Cocos2d_cocos2d_CCBezierBy_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBezierBy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBezierBy* self = (cocos2d::CCBezierBy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCBezierBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBezierBy_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCBezierBy_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCBezierBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccBezierConfig",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float t = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::ccBezierConfig c = *((cocos2d::ccBezierConfig*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCBezierBy* tolua_ret = (cocos2d::CCBezierBy*)  cocos2d::CCBezierBy::actionWithDuration(t,c);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCBezierBy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCBezierTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBezierTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCBezierTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBezierTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBezierTo* self = (cocos2d::CCBezierTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCBezierTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBezierTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCBezierTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBezierTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBezierTo* self = (cocos2d::CCBezierTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCBezierTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBezierTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCBezierTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCBezierTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccBezierConfig",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float t = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::ccBezierConfig c = *((cocos2d::ccBezierConfig*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCBezierTo* tolua_ret = (cocos2d::CCBezierTo*)  cocos2d::CCBezierTo::actionWithDuration(t,c);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCBezierTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCScaleTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleTo_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCScaleTo_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScaleTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScaleTo* self = (cocos2d::CCScaleTo*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float s = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,s);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCScaleTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleTo_initWithDuration01
static int tolua_Cocos2d_cocos2d_CCScaleTo_initWithDuration01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScaleTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCScaleTo* self = (cocos2d::CCScaleTo*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float sx = ((float)  tolua_tonumber(tolua_S,3,0));
  float sy = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,sx,sy);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCScaleTo_initWithDuration00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCScaleTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCScaleTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScaleTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScaleTo* self = (cocos2d::CCScaleTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCScaleTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCScaleTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScaleTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScaleTo* self = (cocos2d::CCScaleTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCScaleTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleTo_update00
static int tolua_Cocos2d_cocos2d_CCScaleTo_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScaleTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScaleTo* self = (cocos2d::CCScaleTo*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCScaleTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCScaleTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCScaleTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float s = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCScaleTo* tolua_ret = (cocos2d::CCScaleTo*)  cocos2d::CCScaleTo::actionWithDuration(duration,s);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCScaleTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCScaleTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleTo_actionWithDuration01
static int tolua_Cocos2d_cocos2d_CCScaleTo_actionWithDuration01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCScaleTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float sx = ((float)  tolua_tonumber(tolua_S,3,0));
  float sy = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCScaleTo* tolua_ret = (cocos2d::CCScaleTo*)  cocos2d::CCScaleTo::actionWithDuration(duration,sx,sy);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCScaleTo");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCScaleTo_actionWithDuration00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCScaleBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleBy_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCScaleBy_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScaleBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScaleBy* self = (cocos2d::CCScaleBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCScaleBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleBy_reverse00
static int tolua_Cocos2d_cocos2d_CCScaleBy_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScaleBy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScaleBy* self = (cocos2d::CCScaleBy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCScaleBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleBy_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCScaleBy_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCScaleBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCScaleBy* self = (cocos2d::CCScaleBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCScaleBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleBy_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCScaleBy_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCScaleBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float s = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCScaleBy* tolua_ret = (cocos2d::CCScaleBy*)  cocos2d::CCScaleBy::actionWithDuration(duration,s);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCScaleBy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCScaleBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCScaleBy_actionWithDuration01
static int tolua_Cocos2d_cocos2d_CCScaleBy_actionWithDuration01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCScaleBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float sx = ((float)  tolua_tonumber(tolua_S,3,0));
  float sy = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCScaleBy* tolua_ret = (cocos2d::CCScaleBy*)  cocos2d::CCScaleBy::actionWithDuration(duration,sx,sy);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCScaleBy");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCScaleBy_actionWithDuration00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCBlink */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBlink_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCBlink_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBlink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBlink* self = (cocos2d::CCBlink*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  unsigned int uBlinks = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,uBlinks);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCBlink */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBlink_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCBlink_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBlink",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBlink* self = (cocos2d::CCBlink*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCBlink */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBlink_update00
static int tolua_Cocos2d_cocos2d_CCBlink_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBlink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBlink* self = (cocos2d::CCBlink*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCBlink */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBlink_reverse00
static int tolua_Cocos2d_cocos2d_CCBlink_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBlink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBlink* self = (cocos2d::CCBlink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCBlink */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBlink_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCBlink_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCBlink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  unsigned int uBlinks = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCBlink* tolua_ret = (cocos2d::CCBlink*)  cocos2d::CCBlink::actionWithDuration(duration,uBlinks);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCBlink");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCFadeIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeIn_update00
static int tolua_Cocos2d_cocos2d_CCFadeIn_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeIn* self = (cocos2d::CCFadeIn*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCFadeIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeIn_reverse00
static int tolua_Cocos2d_cocos2d_CCFadeIn_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeIn",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeIn* self = (cocos2d::CCFadeIn*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCFadeIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeIn_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCFadeIn_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeIn",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeIn* self = (cocos2d::CCFadeIn*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCFadeIn */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeIn_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCFadeIn_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFadeIn",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float d = ((  float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCFadeIn* tolua_ret = (cocos2d::CCFadeIn*)  cocos2d::CCFadeIn::actionWithDuration(d);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFadeIn");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCFadeOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOut_update00
static int tolua_Cocos2d_cocos2d_CCFadeOut_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOut* self = (cocos2d::CCFadeOut*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCFadeOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOut_reverse00
static int tolua_Cocos2d_cocos2d_CCFadeOut_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOut",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOut* self = (cocos2d::CCFadeOut*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCFadeOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOut_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCFadeOut_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOut",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOut* self = (cocos2d::CCFadeOut*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCFadeOut */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOut_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCFadeOut_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFadeOut",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float d = ((  float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCFadeOut* tolua_ret = (cocos2d::CCFadeOut*)  cocos2d::CCFadeOut::actionWithDuration(d);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFadeOut");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCFadeTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeTo_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCFadeTo_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeTo* self = (cocos2d::CCFadeTo*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  unsigned char opacity = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,opacity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCFadeTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCFadeTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeTo* self = (cocos2d::CCFadeTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCFadeTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCFadeTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeTo* self = (cocos2d::CCFadeTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCFadeTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeTo_update00
static int tolua_Cocos2d_cocos2d_CCFadeTo_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeTo* self = (cocos2d::CCFadeTo*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCFadeTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCFadeTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFadeTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  unsigned char opacity = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCFadeTo* tolua_ret = (cocos2d::CCFadeTo*)  cocos2d::CCFadeTo::actionWithDuration(duration,opacity);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFadeTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCTintTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintTo_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCTintTo_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTintTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTintTo* self = (cocos2d::CCTintTo*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  unsigned char red = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
  unsigned char green = (( unsigned char)  tolua_tonumber(tolua_S,4,0));
  unsigned char blue = (( unsigned char)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,red,green,blue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCTintTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCTintTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTintTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTintTo* self = (cocos2d::CCTintTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCTintTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCTintTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTintTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTintTo* self = (cocos2d::CCTintTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCTintTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintTo_update00
static int tolua_Cocos2d_cocos2d_CCTintTo_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTintTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTintTo* self = (cocos2d::CCTintTo*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCTintTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTintTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTintTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  unsigned char red = (( unsigned char)  tolua_tonumber(tolua_S,3,0));
  unsigned char green = (( unsigned char)  tolua_tonumber(tolua_S,4,0));
  unsigned char blue = (( unsigned char)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCTintTo* tolua_ret = (cocos2d::CCTintTo*)  cocos2d::CCTintTo::actionWithDuration(duration,red,green,blue);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTintTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCTintBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintBy_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCTintBy_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTintBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"GLshort",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"GLshort",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"GLshort",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTintBy* self = (cocos2d::CCTintBy*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  GLshort deltaRed = *((GLshort*)  tolua_tousertype(tolua_S,3,0));
  GLshort deltaGreen = *((GLshort*)  tolua_tousertype(tolua_S,4,0));
  GLshort deltaBlue = *((GLshort*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,deltaRed,deltaGreen,deltaBlue);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCTintBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintBy_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCTintBy_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTintBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTintBy* self = (cocos2d::CCTintBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCTintBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintBy_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCTintBy_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTintBy",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTintBy* self = (cocos2d::CCTintBy*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCTintBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintBy_update00
static int tolua_Cocos2d_cocos2d_CCTintBy_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTintBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTintBy* self = (cocos2d::CCTintBy*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCTintBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintBy_reverse00
static int tolua_Cocos2d_cocos2d_CCTintBy_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTintBy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTintBy* self = (cocos2d::CCTintBy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCTintBy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTintBy_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCTintBy_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTintBy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"GLshort",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"GLshort",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"GLshort",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  GLshort deltaRed = *((GLshort*)  tolua_tousertype(tolua_S,3,0));
  GLshort deltaGreen = *((GLshort*)  tolua_tousertype(tolua_S,4,0));
  GLshort deltaBlue = *((GLshort*)  tolua_tousertype(tolua_S,5,0));
  {
   cocos2d::CCTintBy* tolua_ret = (cocos2d::CCTintBy*)  cocos2d::CCTintBy::actionWithDuration(duration,deltaRed,deltaGreen,deltaBlue);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTintBy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCDelayTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDelayTime_update00
static int tolua_Cocos2d_cocos2d_CCDelayTime_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDelayTime",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDelayTime* self = (cocos2d::CCDelayTime*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCDelayTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDelayTime_reverse00
static int tolua_Cocos2d_cocos2d_CCDelayTime_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDelayTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDelayTime* self = (cocos2d::CCDelayTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCDelayTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDelayTime_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCDelayTime_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDelayTime",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDelayTime* self = (cocos2d::CCDelayTime*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCDelayTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDelayTime_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCDelayTime_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCDelayTime",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float d = ((  float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCDelayTime* tolua_ret = (cocos2d::CCDelayTime*)  cocos2d::CCDelayTime::actionWithDuration(d);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCDelayTime");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAction of class  cocos2d::CCReverseTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReverseTime_initWithAction00
static int tolua_Cocos2d_cocos2d_CCReverseTime_initWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCReverseTime",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCReverseTime* self = (cocos2d::CCReverseTime*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCFiniteTimeAction* pAction = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAction'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAction(pAction);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCReverseTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReverseTime_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCReverseTime_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCReverseTime",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCReverseTime* self = (cocos2d::CCReverseTime*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCReverseTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReverseTime_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCReverseTime_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCReverseTime",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCReverseTime* self = (cocos2d::CCReverseTime*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  cocos2d::CCReverseTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReverseTime_stop00
static int tolua_Cocos2d_cocos2d_CCReverseTime_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCReverseTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCReverseTime* self = (cocos2d::CCReverseTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCReverseTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReverseTime_update00
static int tolua_Cocos2d_cocos2d_CCReverseTime_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCReverseTime",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCReverseTime* self = (cocos2d::CCReverseTime*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCReverseTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReverseTime_reverse00
static int tolua_Cocos2d_cocos2d_CCReverseTime_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCReverseTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCReverseTime* self = (cocos2d::CCReverseTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAction of class  cocos2d::CCReverseTime */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCReverseTime_actionWithAction00
static int tolua_Cocos2d_cocos2d_CCReverseTime_actionWithAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCReverseTime",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCFiniteTimeAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFiniteTimeAction* pAction = ((cocos2d::CCFiniteTimeAction*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCReverseTime* tolua_ret = (cocos2d::CCReverseTime*)  cocos2d::CCReverseTime::actionWithAction(pAction);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCReverseTime");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimation of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_getAnimation00
static int tolua_Cocos2d_cocos2d_CCAnimate_getAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimation'", NULL);
#endif
  {
   cocos2d::CCAnimation* tolua_ret = (cocos2d::CCAnimation*)  self->getAnimation();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimation of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_setAnimation00
static int tolua_Cocos2d_cocos2d_CCAnimate_setAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAnimation* pAnimation = ((cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimation'", NULL);
#endif
  {
   self->setAnimation(pAnimation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAnimation of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_initWithAnimation00
static int tolua_Cocos2d_cocos2d_CCAnimate_initWithAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAnimation* pAnimation = ((cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAnimation'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAnimation(pAnimation);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithAnimation of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_initWithAnimation01
static int tolua_Cocos2d_cocos2d_CCAnimate_initWithAnimation01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAnimation* pAnimation = ((cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,2,0));
  bool bRestoreOriginalFrame = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithAnimation'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithAnimation(pAnimation,bRestoreOriginalFrame);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCAnimate_initWithAnimation00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCAnimate_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCAnimation* pAnimation = ((cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,3,0));
  bool bRestoreOriginalFrame = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,pAnimation,bRestoreOriginalFrame);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCAnimate_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCAnimate_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stop of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_stop00
static int tolua_Cocos2d_cocos2d_CCAnimate_stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stop'", NULL);
#endif
  {
   self->stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_update00
static int tolua_Cocos2d_cocos2d_CCAnimate_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_reverse00
static int tolua_Cocos2d_cocos2d_CCAnimate_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimate* self = (cocos2d::CCAnimate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAnimation of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_actionWithAnimation00
static int tolua_Cocos2d_cocos2d_CCAnimate_actionWithAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* pAnimation = ((cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCAnimate* tolua_ret = (cocos2d::CCAnimate*)  cocos2d::CCAnimate::actionWithAnimation(pAnimation);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithAnimation of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_actionWithAnimation01
static int tolua_Cocos2d_cocos2d_CCAnimate_actionWithAnimation01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCAnimation* pAnimation = ((cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,2,0));
  bool bRestoreOriginalFrame = ((bool)  tolua_toboolean(tolua_S,3,0));
  {
   cocos2d::CCAnimate* tolua_ret = (cocos2d::CCAnimate*)  cocos2d::CCAnimate::actionWithAnimation(pAnimation,bRestoreOriginalFrame);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimate");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCAnimate_actionWithAnimation00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCAnimate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimate_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCAnimate_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimate",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCAnimation* pAnimation = ((cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,3,0));
  bool bRestoreOriginalFrame = ((bool)  tolua_toboolean(tolua_S,4,0));
  {
   cocos2d::CCAnimate* tolua_ret = (cocos2d::CCAnimate*)  cocos2d::CCAnimate::actionWithDuration(duration,pAnimation,bRestoreOriginalFrame);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_new00
static int tolua_Cocos2d_cocos2d_CCActionManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCActionManager* tolua_ret = (cocos2d::CCActionManager*)  Mtolua_new((cocos2d::CCActionManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_new00_local
static int tolua_Cocos2d_cocos2d_CCActionManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCActionManager* tolua_ret = (cocos2d::CCActionManager*)  Mtolua_new((cocos2d::CCActionManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_init00
static int tolua_Cocos2d_cocos2d_CCActionManager_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAction of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_addAction00
static int tolua_Cocos2d_cocos2d_CCActionManager_addAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAction* pAction = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,3,0));
  bool paused = ((bool)  tolua_toboolean(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAction'", NULL);
#endif
  {
   self->addAction(pAction,pTarget,paused);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllActions of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_removeAllActions00
static int tolua_Cocos2d_cocos2d_CCActionManager_removeAllActions00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllActions'", NULL);
#endif
  {
   self->removeAllActions();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllActions'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllActionsFromTarget of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_removeAllActionsFromTarget00
static int tolua_Cocos2d_cocos2d_CCActionManager_removeAllActionsFromTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pTarget = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllActionsFromTarget'", NULL);
#endif
  {
   self->removeAllActionsFromTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllActionsFromTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAction of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_removeAction00
static int tolua_Cocos2d_cocos2d_CCActionManager_removeAction00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAction",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAction* pAction = ((cocos2d::CCAction*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAction'", NULL);
#endif
  {
   self->removeAction(pAction);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAction'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeActionByTag of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_removeActionByTag00
static int tolua_Cocos2d_cocos2d_CCActionManager_removeActionByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCObject* pTarget = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeActionByTag'", NULL);
#endif
  {
   self->removeActionByTag(tag,pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeActionByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getActionByTag of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_getActionByTag00
static int tolua_Cocos2d_cocos2d_CCActionManager_getActionByTag00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
  int tag = ((int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::CCObject* pTarget = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getActionByTag'", NULL);
#endif
  {
   cocos2d::CCAction* tolua_ret = (cocos2d::CCAction*)  self->getActionByTag(tag,pTarget);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAction");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getActionByTag'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: numberOfRunningActionsInTarget of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_numberOfRunningActionsInTarget00
static int tolua_Cocos2d_cocos2d_CCActionManager_numberOfRunningActionsInTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pTarget = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'numberOfRunningActionsInTarget'", NULL);
#endif
  {
   int tolua_ret = (int)  self->numberOfRunningActionsInTarget(pTarget);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'numberOfRunningActionsInTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pauseTarget of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_pauseTarget00
static int tolua_Cocos2d_cocos2d_CCActionManager_pauseTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pTarget = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pauseTarget'", NULL);
#endif
  {
   self->pauseTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pauseTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resumeTarget of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_resumeTarget00
static int tolua_Cocos2d_cocos2d_CCActionManager_resumeTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pTarget = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resumeTarget'", NULL);
#endif
  {
   self->resumeTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resumeTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeSharedManager of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_purgeSharedManager00
static int tolua_Cocos2d_cocos2d_CCActionManager_purgeSharedManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'purgeSharedManager'", NULL);
#endif
  {
   self->purgeSharedManager();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeSharedManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectorProtocolRetain of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_selectorProtocolRetain00
static int tolua_Cocos2d_cocos2d_CCActionManager_selectorProtocolRetain00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectorProtocolRetain'", NULL);
#endif
  {
   self->selectorProtocolRetain();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectorProtocolRetain'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectorProtocolRelease of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_selectorProtocolRelease00
static int tolua_Cocos2d_cocos2d_CCActionManager_selectorProtocolRelease00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectorProtocolRelease'", NULL);
#endif
  {
   self->selectorProtocolRelease();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectorProtocolRelease'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedManager of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCActionManager_sharedManager00
static int tolua_Cocos2d_cocos2d_CCActionManager_sharedManager00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCActionManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCActionManager* tolua_ret = (cocos2d::CCActionManager*)  cocos2d::CCActionManager::sharedManager();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedManager'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __SelectorProtocol__ of class  cocos2d::CCActionManager */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCActionManager___SelectorProtocol__
static int tolua_get_cocos2d__CCActionManager___SelectorProtocol__(lua_State* tolua_S)
{
  cocos2d::CCActionManager* self = (cocos2d::CCActionManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__SelectorProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::SelectorProtocol*>(self), "cocos2d::SelectorProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::SelectorProtocol*)self), "cocos2d::SelectorProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCPageTurn3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPageTurn3D_update00
static int tolua_Cocos2d_cocos2d_CCPageTurn3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCPageTurn3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPageTurn3D* self = (cocos2d::CCPageTurn3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCPageTurn3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPageTurn3D_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCPageTurn3D_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPageTurn3D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCPageTurn3D* tolua_ret = (cocos2d::CCPageTurn3D*)  cocos2d::CCPageTurn3D::actionWithSize(gridSize,time);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPageTurn3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCProgressTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTo_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCProgressTo_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTo* self = (cocos2d::CCProgressTo*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float fPercent = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,fPercent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCProgressTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCProgressTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTo* self = (cocos2d::CCProgressTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCProgressTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCProgressTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTo* self = (cocos2d::CCProgressTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCProgressTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTo_update00
static int tolua_Cocos2d_cocos2d_CCProgressTo_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressTo* self = (cocos2d::CCProgressTo*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCProgressTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCProgressTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCProgressTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float fPercent = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCProgressTo* tolua_ret = (cocos2d::CCProgressTo*)  cocos2d::CCProgressTo::actionWithDuration(duration,fPercent);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCProgressTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDuration of class  cocos2d::CCProgressFromTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressFromTo_initWithDuration00
static int tolua_Cocos2d_cocos2d_CCProgressFromTo_initWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressFromTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressFromTo* self = (cocos2d::CCProgressFromTo*)  tolua_tousertype(tolua_S,1,0);
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float fFromPercentage = ((float)  tolua_tonumber(tolua_S,3,0));
  float fToPercentage = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDuration'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDuration(duration,fFromPercentage,fToPercentage);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCProgressFromTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressFromTo_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCProgressFromTo_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressFromTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressFromTo* self = (cocos2d::CCProgressFromTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverse of class  cocos2d::CCProgressFromTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressFromTo_reverse00
static int tolua_Cocos2d_cocos2d_CCProgressFromTo_reverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressFromTo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressFromTo* self = (cocos2d::CCProgressFromTo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverse'", NULL);
#endif
  {
   cocos2d::CCActionInterval* tolua_ret = (cocos2d::CCActionInterval*)  self->reverse();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCActionInterval");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCProgressFromTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressFromTo_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCProgressFromTo_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressFromTo",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressFromTo* self = (cocos2d::CCProgressFromTo*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCProgressFromTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressFromTo_update00
static int tolua_Cocos2d_cocos2d_CCProgressFromTo_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCProgressFromTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCProgressFromTo* self = (cocos2d::CCProgressFromTo*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithDuration of class  cocos2d::CCProgressFromTo */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCProgressFromTo_actionWithDuration00
static int tolua_Cocos2d_cocos2d_CCProgressFromTo_actionWithDuration00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCProgressFromTo",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
   float duration = ((  float)  tolua_tonumber(tolua_S,2,0));
  float fFromPercentage = ((float)  tolua_tonumber(tolua_S,3,0));
  float fToPercentage = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCProgressFromTo* tolua_ret = (cocos2d::CCProgressFromTo*)  cocos2d::CCProgressFromTo::actionWithDuration(duration,fFromPercentage,fToPercentage);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCProgressFromTo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithDuration'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithRange of class  cocos2d::CCShakyTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShakyTiles3D_initWithRange00
static int tolua_Cocos2d_cocos2d_CCShakyTiles3D_initWithRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShakyTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShakyTiles3D* self = (cocos2d::CCShakyTiles3D*)  tolua_tousertype(tolua_S,1,0);
  int nRange = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bShakeZ = ((bool)  tolua_toboolean(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithRange'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithRange(nRange,bShakeZ,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCShakyTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShakyTiles3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCShakyTiles3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShakyTiles3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShakyTiles3D* self = (cocos2d::CCShakyTiles3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCShakyTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShakyTiles3D_update00
static int tolua_Cocos2d_cocos2d_CCShakyTiles3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShakyTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShakyTiles3D* self = (cocos2d::CCShakyTiles3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithRange of class  cocos2d::CCShakyTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShakyTiles3D_actionWithRange00
static int tolua_Cocos2d_cocos2d_CCShakyTiles3D_actionWithRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCShakyTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nRange = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bShakeZ = ((bool)  tolua_toboolean(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCShakyTiles3D* tolua_ret = (cocos2d::CCShakyTiles3D*)  cocos2d::CCShakyTiles3D::actionWithRange(nRange,bShakeZ,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCShakyTiles3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithRange of class  cocos2d::CCShatteredTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShatteredTiles3D_initWithRange00
static int tolua_Cocos2d_cocos2d_CCShatteredTiles3D_initWithRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShatteredTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShatteredTiles3D* self = (cocos2d::CCShatteredTiles3D*)  tolua_tousertype(tolua_S,1,0);
  int nRange = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bShatterZ = ((bool)  tolua_toboolean(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithRange'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithRange(nRange,bShatterZ,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCShatteredTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShatteredTiles3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCShatteredTiles3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShatteredTiles3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShatteredTiles3D* self = (cocos2d::CCShatteredTiles3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCShatteredTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShatteredTiles3D_update00
static int tolua_Cocos2d_cocos2d_CCShatteredTiles3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShatteredTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShatteredTiles3D* self = (cocos2d::CCShatteredTiles3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithRange of class  cocos2d::CCShatteredTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShatteredTiles3D_actionWithRange00
static int tolua_Cocos2d_cocos2d_CCShatteredTiles3D_actionWithRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCShatteredTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nRange = ((int)  tolua_tonumber(tolua_S,2,0));
  bool bShatterZ = ((bool)  tolua_toboolean(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCShatteredTiles3D* tolua_ret = (cocos2d::CCShatteredTiles3D*)  cocos2d::CCShatteredTiles3D::actionWithRange(nRange,bShatterZ,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCShatteredTiles3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSeed of class  cocos2d::CCShuffleTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShuffleTiles_initWithSeed00
static int tolua_Cocos2d_cocos2d_CCShuffleTiles_initWithSeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShuffleTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShuffleTiles* self = (cocos2d::CCShuffleTiles*)  tolua_tousertype(tolua_S,1,0);
  int s = ((int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,3,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSeed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSeed(s,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shuffle of class  cocos2d::CCShuffleTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShuffleTiles_shuffle00
static int tolua_Cocos2d_cocos2d_CCShuffleTiles_shuffle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShuffleTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShuffleTiles* self = (cocos2d::CCShuffleTiles*)  tolua_tousertype(tolua_S,1,0);
  int pArray = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLen = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shuffle'", NULL);
#endif
  {
   self->shuffle(&pArray,nLen);
   tolua_pushnumber(tolua_S,(lua_Number)pArray);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shuffle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDelta of class  cocos2d::CCShuffleTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShuffleTiles_getDelta00
static int tolua_Cocos2d_cocos2d_CCShuffleTiles_getDelta00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShuffleTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShuffleTiles* self = (cocos2d::CCShuffleTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDelta'", NULL);
#endif
  {
   cocos2d::ccGridSize tolua_ret = (cocos2d::ccGridSize)  self->getDelta(pos);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccGridSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccGridSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccGridSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccGridSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDelta'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: placeTile of class  cocos2d::CCShuffleTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShuffleTiles_placeTile00
static int tolua_Cocos2d_cocos2d_CCShuffleTiles_placeTile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShuffleTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::Tile",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShuffleTiles* self = (cocos2d::CCShuffleTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::Tile* t = ((cocos2d::Tile*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'placeTile'", NULL);
#endif
  {
   self->placeTile(pos,t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'placeTile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCShuffleTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShuffleTiles_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCShuffleTiles_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShuffleTiles",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShuffleTiles* self = (cocos2d::CCShuffleTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCShuffleTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShuffleTiles_update00
static int tolua_Cocos2d_cocos2d_CCShuffleTiles_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShuffleTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShuffleTiles* self = (cocos2d::CCShuffleTiles*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCShuffleTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShuffleTiles_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCShuffleTiles_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCShuffleTiles",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCShuffleTiles* self = (cocos2d::CCShuffleTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSeed of class  cocos2d::CCShuffleTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCShuffleTiles_actionWithSeed00
static int tolua_Cocos2d_cocos2d_CCShuffleTiles_actionWithSeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCShuffleTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int s = ((int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,3,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCShuffleTiles* tolua_ret = (cocos2d::CCShuffleTiles*)  cocos2d::CCShuffleTiles::actionWithSeed(s,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCShuffleTiles");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: testFunc of class  cocos2d::CCFadeOutTRTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_testFunc00
static int tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_testFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOutTRTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOutTRTiles* self = (cocos2d::CCFadeOutTRTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'testFunc'", NULL);
#endif
  {
   float tolua_ret = (float)  self->testFunc(pos,time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'testFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: turnOnTile of class  cocos2d::CCFadeOutTRTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_turnOnTile00
static int tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_turnOnTile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOutTRTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOutTRTiles* self = (cocos2d::CCFadeOutTRTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'turnOnTile'", NULL);
#endif
  {
   self->turnOnTile(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'turnOnTile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: turnOffTile of class  cocos2d::CCFadeOutTRTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_turnOffTile00
static int tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_turnOffTile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOutTRTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOutTRTiles* self = (cocos2d::CCFadeOutTRTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'turnOffTile'", NULL);
#endif
  {
   self->turnOffTile(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'turnOffTile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformTile of class  cocos2d::CCFadeOutTRTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_transformTile00
static int tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_transformTile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOutTRTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOutTRTiles* self = (cocos2d::CCFadeOutTRTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
  float distance = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transformTile'", NULL);
#endif
  {
   self->transformTile(pos,distance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformTile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCFadeOutTRTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_update00
static int tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOutTRTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOutTRTiles* self = (cocos2d::CCFadeOutTRTiles*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCFadeOutTRTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFadeOutTRTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCFadeOutTRTiles* tolua_ret = (cocos2d::CCFadeOutTRTiles*)  cocos2d::CCFadeOutTRTiles::actionWithSize(gridSize,time);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFadeOutTRTiles");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: testFunc of class  cocos2d::CCFadeOutBLTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutBLTiles_testFunc00
static int tolua_Cocos2d_cocos2d_CCFadeOutBLTiles_testFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOutBLTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOutBLTiles* self = (cocos2d::CCFadeOutBLTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'testFunc'", NULL);
#endif
  {
   float tolua_ret = (float)  self->testFunc(pos,time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'testFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCFadeOutBLTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutBLTiles_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCFadeOutBLTiles_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFadeOutBLTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCFadeOutBLTiles* tolua_ret = (cocos2d::CCFadeOutBLTiles*)  cocos2d::CCFadeOutBLTiles::actionWithSize(gridSize,time);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFadeOutBLTiles");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: testFunc of class  cocos2d::CCFadeOutUpTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutUpTiles_testFunc00
static int tolua_Cocos2d_cocos2d_CCFadeOutUpTiles_testFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOutUpTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOutUpTiles* self = (cocos2d::CCFadeOutUpTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'testFunc'", NULL);
#endif
  {
   float tolua_ret = (float)  self->testFunc(pos,time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'testFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: transformTile of class  cocos2d::CCFadeOutUpTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutUpTiles_transformTile00
static int tolua_Cocos2d_cocos2d_CCFadeOutUpTiles_transformTile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOutUpTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOutUpTiles* self = (cocos2d::CCFadeOutUpTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
  float distance = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'transformTile'", NULL);
#endif
  {
   self->transformTile(pos,distance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'transformTile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCFadeOutUpTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutUpTiles_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCFadeOutUpTiles_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFadeOutUpTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCFadeOutUpTiles* tolua_ret = (cocos2d::CCFadeOutUpTiles*)  cocos2d::CCFadeOutUpTiles::actionWithSize(gridSize,time);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFadeOutUpTiles");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: testFunc of class  cocos2d::CCFadeOutDownTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutDownTiles_testFunc00
static int tolua_Cocos2d_cocos2d_CCFadeOutDownTiles_testFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCFadeOutDownTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCFadeOutDownTiles* self = (cocos2d::CCFadeOutDownTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'testFunc'", NULL);
#endif
  {
   float tolua_ret = (float)  self->testFunc(pos,time);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'testFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCFadeOutDownTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFadeOutDownTiles_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCFadeOutDownTiles_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFadeOutDownTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float time = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCFadeOutDownTiles* tolua_ret = (cocos2d::CCFadeOutDownTiles*)  cocos2d::CCFadeOutDownTiles::actionWithSize(gridSize,time);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCFadeOutDownTiles");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithSeed of class  cocos2d::CCTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTurnOffTiles_initWithSeed00
static int tolua_Cocos2d_cocos2d_CCTurnOffTiles_initWithSeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTurnOffTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTurnOffTiles* self = (cocos2d::CCTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
  int s = ((int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,3,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithSeed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithSeed(s,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithSeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: shuffle of class  cocos2d::CCTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTurnOffTiles_shuffle00
static int tolua_Cocos2d_cocos2d_CCTurnOffTiles_shuffle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTurnOffTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTurnOffTiles* self = (cocos2d::CCTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
  int pArray = ((int)  tolua_tonumber(tolua_S,2,0));
  int nLen = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'shuffle'", NULL);
#endif
  {
   self->shuffle(&pArray,nLen);
   tolua_pushnumber(tolua_S,(lua_Number)pArray);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'shuffle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: turnOnTile of class  cocos2d::CCTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTurnOffTiles_turnOnTile00
static int tolua_Cocos2d_cocos2d_CCTurnOffTiles_turnOnTile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTurnOffTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTurnOffTiles* self = (cocos2d::CCTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'turnOnTile'", NULL);
#endif
  {
   self->turnOnTile(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'turnOnTile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: turnOffTile of class  cocos2d::CCTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTurnOffTiles_turnOffTile00
static int tolua_Cocos2d_cocos2d_CCTurnOffTiles_turnOffTile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTurnOffTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTurnOffTiles* self = (cocos2d::CCTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccGridSize pos = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'turnOffTile'", NULL);
#endif
  {
   self->turnOffTile(pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'turnOffTile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTurnOffTiles_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCTurnOffTiles_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTurnOffTiles",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTurnOffTiles* self = (cocos2d::CCTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTurnOffTiles_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCTurnOffTiles_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTurnOffTiles",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTurnOffTiles* self = (cocos2d::CCTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTurnOffTiles_update00
static int tolua_Cocos2d_cocos2d_CCTurnOffTiles_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCTurnOffTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCTurnOffTiles* self = (cocos2d::CCTurnOffTiles*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSize of class  cocos2d::CCTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTurnOffTiles_actionWithSize00
static int tolua_Cocos2d_cocos2d_CCTurnOffTiles_actionWithSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTurnOffTiles",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccGridSize size = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,2,0));
   float d = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCTurnOffTiles* tolua_ret = (cocos2d::CCTurnOffTiles*)  cocos2d::CCTurnOffTiles::actionWithSize(size,d);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTurnOffTiles");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithSeed of class  cocos2d::CCTurnOffTiles */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCTurnOffTiles_actionWithSeed00
static int tolua_Cocos2d_cocos2d_CCTurnOffTiles_actionWithSeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCTurnOffTiles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int s = ((int)  tolua_tonumber(tolua_S,2,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,3,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCTurnOffTiles* tolua_ret = (cocos2d::CCTurnOffTiles*)  cocos2d::CCTurnOffTiles::actionWithSeed(s,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTurnOffTiles");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithSeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitude of class  cocos2d::CCWavesTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWavesTiles3D_getAmplitude00
static int tolua_Cocos2d_cocos2d_CCWavesTiles3D_getAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWavesTiles3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWavesTiles3D* self = (cocos2d::CCWavesTiles3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitude'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitude();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitude of class  cocos2d::CCWavesTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWavesTiles3D_setAmplitude00
static int tolua_Cocos2d_cocos2d_CCWavesTiles3D_setAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWavesTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWavesTiles3D* self = (cocos2d::CCWavesTiles3D*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitude = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitude'", NULL);
#endif
  {
   self->setAmplitude(fAmplitude);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitudeRate of class  cocos2d::CCWavesTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWavesTiles3D_getAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCWavesTiles3D_getAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWavesTiles3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWavesTiles3D* self = (cocos2d::CCWavesTiles3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitudeRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitudeRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitudeRate of class  cocos2d::CCWavesTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWavesTiles3D_setAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCWavesTiles3D_setAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWavesTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWavesTiles3D* self = (cocos2d::CCWavesTiles3D*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitudeRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitudeRate'", NULL);
#endif
  {
   self->setAmplitudeRate(fAmplitudeRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithWaves of class  cocos2d::CCWavesTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWavesTiles3D_initWithWaves00
static int tolua_Cocos2d_cocos2d_CCWavesTiles3D_initWithWaves00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWavesTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWavesTiles3D* self = (cocos2d::CCWavesTiles3D*)  tolua_tousertype(tolua_S,1,0);
  int wav = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithWaves'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithWaves(wav,amp,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithWaves'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCWavesTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWavesTiles3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCWavesTiles3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWavesTiles3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWavesTiles3D* self = (cocos2d::CCWavesTiles3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCWavesTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWavesTiles3D_update00
static int tolua_Cocos2d_cocos2d_CCWavesTiles3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCWavesTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCWavesTiles3D* self = (cocos2d::CCWavesTiles3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithWaves of class  cocos2d::CCWavesTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCWavesTiles3D_actionWithWaves00
static int tolua_Cocos2d_cocos2d_CCWavesTiles3D_actionWithWaves00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCWavesTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int wav = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCWavesTiles3D* tolua_ret = (cocos2d::CCWavesTiles3D*)  cocos2d::CCWavesTiles3D::actionWithWaves(wav,amp,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCWavesTiles3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithWaves'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitude of class  cocos2d::CCJumpTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTiles3D_getAmplitude00
static int tolua_Cocos2d_cocos2d_CCJumpTiles3D_getAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpTiles3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpTiles3D* self = (cocos2d::CCJumpTiles3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitude'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitude();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitude of class  cocos2d::CCJumpTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTiles3D_setAmplitude00
static int tolua_Cocos2d_cocos2d_CCJumpTiles3D_setAmplitude00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpTiles3D* self = (cocos2d::CCJumpTiles3D*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitude = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitude'", NULL);
#endif
  {
   self->setAmplitude(fAmplitude);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitude'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAmplitudeRate of class  cocos2d::CCJumpTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTiles3D_getAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCJumpTiles3D_getAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpTiles3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpTiles3D* self = (cocos2d::CCJumpTiles3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAmplitudeRate'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getAmplitudeRate();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAmplitudeRate of class  cocos2d::CCJumpTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTiles3D_setAmplitudeRate00
static int tolua_Cocos2d_cocos2d_CCJumpTiles3D_setAmplitudeRate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpTiles3D* self = (cocos2d::CCJumpTiles3D*)  tolua_tousertype(tolua_S,1,0);
  float fAmplitudeRate = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAmplitudeRate'", NULL);
#endif
  {
   self->setAmplitudeRate(fAmplitudeRate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAmplitudeRate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithJumps of class  cocos2d::CCJumpTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTiles3D_initWithJumps00
static int tolua_Cocos2d_cocos2d_CCJumpTiles3D_initWithJumps00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpTiles3D* self = (cocos2d::CCJumpTiles3D*)  tolua_tousertype(tolua_S,1,0);
  int j = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithJumps'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithJumps(j,amp,gridSize,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithJumps'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCJumpTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTiles3D_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCJumpTiles3D_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpTiles3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpTiles3D* self = (cocos2d::CCJumpTiles3D*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCJumpTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTiles3D_update00
static int tolua_Cocos2d_cocos2d_CCJumpTiles3D_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCJumpTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCJumpTiles3D* self = (cocos2d::CCJumpTiles3D*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithJumps of class  cocos2d::CCJumpTiles3D */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCJumpTiles3D_actionWithJumps00
static int tolua_Cocos2d_cocos2d_CCJumpTiles3D_actionWithJumps00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCJumpTiles3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::ccGridSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int j = ((int)  tolua_tonumber(tolua_S,2,0));
  float amp = ((float)  tolua_tonumber(tolua_S,3,0));
  cocos2d::ccGridSize gridSize = *((cocos2d::ccGridSize*)  tolua_tousertype(tolua_S,4,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCJumpTiles3D* tolua_ret = (cocos2d::CCJumpTiles3D*)  cocos2d::CCJumpTiles3D::actionWithJumps(j,amp,gridSize,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCJumpTiles3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithJumps'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithRows of class  cocos2d::CCSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitRows_initWithRows00
static int tolua_Cocos2d_cocos2d_CCSplitRows_initWithRows00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSplitRows",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSplitRows* self = (cocos2d::CCSplitRows*)  tolua_tousertype(tolua_S,1,0);
  int nRows = ((int)  tolua_tonumber(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithRows'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithRows(nRows,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithRows'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitRows_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCSplitRows_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSplitRows",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSplitRows* self = (cocos2d::CCSplitRows*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitRows_update00
static int tolua_Cocos2d_cocos2d_CCSplitRows_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSplitRows",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSplitRows* self = (cocos2d::CCSplitRows*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitRows_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCSplitRows_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSplitRows",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSplitRows* self = (cocos2d::CCSplitRows*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithRows of class  cocos2d::CCSplitRows */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitRows_actionWithRows00
static int tolua_Cocos2d_cocos2d_CCSplitRows_actionWithRows00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSplitRows",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nRows = ((int)  tolua_tonumber(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCSplitRows* tolua_ret = (cocos2d::CCSplitRows*)  cocos2d::CCSplitRows::actionWithRows(nRows,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSplitRows");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithRows'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithCols of class  cocos2d::CCSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitCols_initWithCols00
static int tolua_Cocos2d_cocos2d_CCSplitCols_initWithCols00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSplitCols",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSplitCols* self = (cocos2d::CCSplitCols*)  tolua_tousertype(tolua_S,1,0);
  int nCols = ((int)  tolua_tonumber(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithCols'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithCols(nCols,duration);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithCols'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: copyWithZone of class  cocos2d::CCSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitCols_copyWithZone00
static int tolua_Cocos2d_cocos2d_CCSplitCols_copyWithZone00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSplitCols",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCZone",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSplitCols* self = (cocos2d::CCSplitCols*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCZone* pZone = ((cocos2d::CCZone*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'copyWithZone'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->copyWithZone(pZone);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'copyWithZone'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitCols_update00
static int tolua_Cocos2d_cocos2d_CCSplitCols_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSplitCols",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSplitCols* self = (cocos2d::CCSplitCols*)  tolua_tousertype(tolua_S,1,0);
   float time = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: startWithTarget of class  cocos2d::CCSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitCols_startWithTarget00
static int tolua_Cocos2d_cocos2d_CCSplitCols_startWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCSplitCols",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCSplitCols* self = (cocos2d::CCSplitCols*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* pTarget = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'startWithTarget'", NULL);
#endif
  {
   self->startWithTarget(pTarget);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'startWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: actionWithCols of class  cocos2d::CCSplitCols */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSplitCols_actionWithCols00
static int tolua_Cocos2d_cocos2d_CCSplitCols_actionWithCols00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSplitCols",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int nCols = ((int)  tolua_tonumber(tolua_S,2,0));
   float duration = ((  float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCSplitCols* tolua_ret = (cocos2d::CCSplitCols*)  cocos2d::CCSplitCols::actionWithCols(nCols,duration);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSplitCols");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'actionWithCols'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getName of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_getName00
static int tolua_Cocos2d_cocos2d_CCAnimation_getName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getName'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setName of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_setName00
static int tolua_Cocos2d_cocos2d_CCAnimation_setName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
  const char* pszName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setName'", NULL);
#endif
  {
   self->setName(pszName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDelay of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_getDelay00
static int tolua_Cocos2d_cocos2d_CCAnimation_getDelay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDelay'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getDelay();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDelay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDelay of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_setDelay00
static int tolua_Cocos2d_cocos2d_CCAnimation_setDelay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
  float fDelay = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDelay'", NULL);
#endif
  {
   self->setDelay(fDelay);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDelay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrames of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_getFrames00
static int tolua_Cocos2d_cocos2d_CCAnimation_getFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrames'", NULL);
#endif
  {
   cocos2d::CCMutableArray<CCSpriteFrame*>* tolua_ret = (cocos2d::CCMutableArray<CCSpriteFrame*>*)  self->getFrames();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMutableArray<CCSpriteFrame*>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFrames of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_setFrames00
static int tolua_Cocos2d_cocos2d_CCAnimation_setFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCSpriteFrame*>* pFrames = ((cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setFrames'", NULL);
#endif
  {
   self->setFrames(pFrames);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFrames of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_initWithFrames00
static int tolua_Cocos2d_cocos2d_CCAnimation_initWithFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCSpriteFrame*>* pFrames = ((cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFrames'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFrames(pFrames);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFrames of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_initWithFrames01
static int tolua_Cocos2d_cocos2d_CCAnimation_initWithFrames01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMutableArray<CCSpriteFrame*>* pFrames = ((cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,2,0));
  float delay = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFrames'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFrames(pFrames,delay);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCAnimation_initWithFrames00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFrame of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_addFrame00
static int tolua_Cocos2d_cocos2d_CCAnimation_addFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSpriteFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSpriteFrame* pFrame = ((cocos2d::CCSpriteFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFrame'", NULL);
#endif
  {
   self->addFrame(pFrame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFrameWithFileName of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_addFrameWithFileName00
static int tolua_Cocos2d_cocos2d_CCAnimation_addFrameWithFileName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFileName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFrameWithFileName'", NULL);
#endif
  {
   self->addFrameWithFileName(pszFileName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFrameWithFileName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addFrameWithTexture of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_addFrameWithTexture00
static int tolua_Cocos2d_cocos2d_CCAnimation_addFrameWithTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* pobTexture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCRect rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addFrameWithTexture'", NULL);
#endif
  {
   self->addFrameWithTexture(pobTexture,rect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addFrameWithTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_init00
static int tolua_Cocos2d_cocos2d_CCAnimation_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimation* self = (cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: animation of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_animation00
static int tolua_Cocos2d_cocos2d_CCAnimation_animation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAnimation* tolua_ret = (cocos2d::CCAnimation*)  cocos2d::CCAnimation::animation();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'animation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: animationWithFrames of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_animationWithFrames00
static int tolua_Cocos2d_cocos2d_CCAnimation_animationWithFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* frames = ((cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCAnimation* tolua_ret = (cocos2d::CCAnimation*)  cocos2d::CCAnimation::animationWithFrames(frames);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'animationWithFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: animationWithFrames of class  cocos2d::CCAnimation */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimation_animationWithFrames01
static int tolua_Cocos2d_cocos2d_CCAnimation_animationWithFrames01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMutableArray<CCSpriteFrame*>",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCMutableArray<CCSpriteFrame*>* frames = ((cocos2d::CCMutableArray<CCSpriteFrame*>*)  tolua_tousertype(tolua_S,2,0));
  float delay = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCAnimation* tolua_ret = (cocos2d::CCAnimation*)  cocos2d::CCAnimation::animationWithFrames(frames,delay);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimation");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCAnimation_animationWithFrames00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCAnimationCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimationCache_new00
static int tolua_Cocos2d_cocos2d_CCAnimationCache_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimationCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAnimationCache* tolua_ret = (cocos2d::CCAnimationCache*)  Mtolua_new((cocos2d::CCAnimationCache)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimationCache");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCAnimationCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimationCache_new00_local
static int tolua_Cocos2d_cocos2d_CCAnimationCache_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimationCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAnimationCache* tolua_ret = (cocos2d::CCAnimationCache*)  Mtolua_new((cocos2d::CCAnimationCache)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimationCache");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedAnimationCache of class  cocos2d::CCAnimationCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimationCache_sharedAnimationCache00
static int tolua_Cocos2d_cocos2d_CCAnimationCache_sharedAnimationCache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimationCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAnimationCache* tolua_ret = (cocos2d::CCAnimationCache*)  cocos2d::CCAnimationCache::sharedAnimationCache();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimationCache");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedAnimationCache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeSharedAnimationCache of class  cocos2d::CCAnimationCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimationCache_purgeSharedAnimationCache00
static int tolua_Cocos2d_cocos2d_CCAnimationCache_purgeSharedAnimationCache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAnimationCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAnimationCache::purgeSharedAnimationCache();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeSharedAnimationCache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addAnimation of class  cocos2d::CCAnimationCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimationCache_addAnimation00
static int tolua_Cocos2d_cocos2d_CCAnimationCache_addAnimation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimationCache",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAnimation",0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimationCache* self = (cocos2d::CCAnimationCache*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAnimation* animation = ((cocos2d::CCAnimation*)  tolua_tousertype(tolua_S,2,0));
  const char* name = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addAnimation'", NULL);
#endif
  {
   self->addAnimation(animation,name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addAnimation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAnimationByName of class  cocos2d::CCAnimationCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimationCache_removeAnimationByName00
static int tolua_Cocos2d_cocos2d_CCAnimationCache_removeAnimationByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimationCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimationCache* self = (cocos2d::CCAnimationCache*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAnimationByName'", NULL);
#endif
  {
   self->removeAnimationByName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAnimationByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: animationByName of class  cocos2d::CCAnimationCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimationCache_animationByName00
static int tolua_Cocos2d_cocos2d_CCAnimationCache_animationByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimationCache",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimationCache* self = (cocos2d::CCAnimationCache*)  tolua_tousertype(tolua_S,1,0);
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'animationByName'", NULL);
#endif
  {
   cocos2d::CCAnimation* tolua_ret = (cocos2d::CCAnimation*)  self->animationByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAnimation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'animationByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCAnimationCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAnimationCache_init00
static int tolua_Cocos2d_cocos2d_CCAnimationCache_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAnimationCache",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAnimationCache* self = (cocos2d::CCAnimationCache*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: array of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_array00
static int tolua_Cocos2d_cocos2d_CCArray_array00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCArray* tolua_ret = (cocos2d::CCArray*)  cocos2d::CCArray::array();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'array'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: arrayWithCapacity of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_arrayWithCapacity00
static int tolua_Cocos2d_cocos2d_CCArray_arrayWithCapacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCArray* tolua_ret = (cocos2d::CCArray*)  cocos2d::CCArray::arrayWithCapacity(capacity);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'arrayWithCapacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: arrayWithArray of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_arrayWithArray00
static int tolua_Cocos2d_cocos2d_CCArray_arrayWithArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* otherArray = ((cocos2d::CCArray*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCArray* tolua_ret = (cocos2d::CCArray*)  cocos2d::CCArray::arrayWithArray(otherArray);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCArray");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'arrayWithArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_init00
static int tolua_Cocos2d_cocos2d_CCArray_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithCapacity of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_initWithCapacity00
static int tolua_Cocos2d_cocos2d_CCArray_initWithCapacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  unsigned int capacity = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithCapacity'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithCapacity(capacity);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithCapacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithArray of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_initWithArray00
static int tolua_Cocos2d_cocos2d_CCArray_initWithArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCArray* otherArray = ((cocos2d::CCArray*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithArray'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithArray(otherArray);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: count of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_count00
static int tolua_Cocos2d_cocos2d_CCArray_count00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'count'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->count();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'count'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: capacity of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_capacity00
static int tolua_Cocos2d_cocos2d_CCArray_capacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'capacity'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->capacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'capacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: indexOfObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_indexOfObject00
static int tolua_Cocos2d_cocos2d_CCArray_indexOfObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* object = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'indexOfObject'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->indexOfObject(object);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'indexOfObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: objectAtIndex of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_objectAtIndex00
static int tolua_Cocos2d_cocos2d_CCArray_objectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'objectAtIndex'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->objectAtIndex(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'objectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: lastObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_lastObject00
static int tolua_Cocos2d_cocos2d_CCArray_lastObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'lastObject'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->lastObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'lastObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: randomObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_randomObject00
static int tolua_Cocos2d_cocos2d_CCArray_randomObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'randomObject'", NULL);
#endif
  {
   cocos2d::CCObject* tolua_ret = (cocos2d::CCObject*)  self->randomObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'randomObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: containsObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_containsObject00
static int tolua_Cocos2d_cocos2d_CCArray_containsObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* object = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'containsObject'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->containsObject(object);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'containsObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_addObject00
static int tolua_Cocos2d_cocos2d_CCArray_addObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* object = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObject'", NULL);
#endif
  {
   self->addObject(object);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObjectsFromArray of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_addObjectsFromArray00
static int tolua_Cocos2d_cocos2d_CCArray_addObjectsFromArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCArray* otherArray = ((cocos2d::CCArray*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObjectsFromArray'", NULL);
#endif
  {
   self->addObjectsFromArray(otherArray);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObjectsFromArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: insertObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_insertObject00
static int tolua_Cocos2d_cocos2d_CCArray_insertObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* object = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'insertObject'", NULL);
#endif
  {
   self->insertObject(object,index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'insertObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeLastObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_removeLastObject00
static int tolua_Cocos2d_cocos2d_CCArray_removeLastObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeLastObject'", NULL);
#endif
  {
   self->removeLastObject();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeLastObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_removeObject00
static int tolua_Cocos2d_cocos2d_CCArray_removeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* object = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObject'", NULL);
#endif
  {
   self->removeObject(object);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObjectAtIndex of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_removeObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCArray_removeObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObjectAtIndex'", NULL);
#endif
  {
   self->removeObjectAtIndex(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObjectsInArray of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_removeObjectsInArray00
static int tolua_Cocos2d_cocos2d_CCArray_removeObjectsInArray00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCArray* otherArray = ((cocos2d::CCArray*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObjectsInArray'", NULL);
#endif
  {
   self->removeObjectsInArray(otherArray);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObjectsInArray'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeAllObjects of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_removeAllObjects00
static int tolua_Cocos2d_cocos2d_CCArray_removeAllObjects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeAllObjects'", NULL);
#endif
  {
   self->removeAllObjects();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeAllObjects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fastRemoveObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_fastRemoveObject00
static int tolua_Cocos2d_cocos2d_CCArray_fastRemoveObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* object = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fastRemoveObject'", NULL);
#endif
  {
   self->fastRemoveObject(object);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fastRemoveObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fastRemoveObjectAtIndex of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_fastRemoveObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCArray_fastRemoveObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'fastRemoveObjectAtIndex'", NULL);
#endif
  {
   self->fastRemoveObjectAtIndex(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fastRemoveObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exchangeObject of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_exchangeObject00
static int tolua_Cocos2d_cocos2d_CCArray_exchangeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* object1 = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCObject* object2 = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exchangeObject'", NULL);
#endif
  {
   self->exchangeObject(object1,object2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exchangeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: exchangeObjectAtIndex of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_exchangeObjectAtIndex00
static int tolua_Cocos2d_cocos2d_CCArray_exchangeObjectAtIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
  unsigned int index1 = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  unsigned int index2 = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'exchangeObjectAtIndex'", NULL);
#endif
  {
   self->exchangeObjectAtIndex(index1,index2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'exchangeObjectAtIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reverseObjects of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_reverseObjects00
static int tolua_Cocos2d_cocos2d_CCArray_reverseObjects00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reverseObjects'", NULL);
#endif
  {
   self->reverseObjects();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reverseObjects'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reduceMemoryFootprint of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCArray_reduceMemoryFootprint00
static int tolua_Cocos2d_cocos2d_CCArray_reduceMemoryFootprint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCArray",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reduceMemoryFootprint'", NULL);
#endif
  {
   self->reduceMemoryFootprint();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reduceMemoryFootprint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: data of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCArray_data_ptr
static int tolua_get_cocos2d__CCArray_data_ptr(lua_State* tolua_S)
{
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'data'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->data,"ccArray");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: data of class  cocos2d::CCArray */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCArray_data_ptr
static int tolua_set_cocos2d__CCArray_data_ptr(lua_State* tolua_S)
{
  cocos2d::CCArray* self = (cocos2d::CCArray*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'data'",NULL);
  if (!tolua_isusertype(tolua_S,2,"ccArray",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->data = ((ccArray*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAtlasNode_new00
static int tolua_Cocos2d_cocos2d_CCAtlasNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAtlasNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAtlasNode* tolua_ret = (cocos2d::CCAtlasNode*)  Mtolua_new((cocos2d::CCAtlasNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAtlasNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAtlasNode_new00_local
static int tolua_Cocos2d_cocos2d_CCAtlasNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAtlasNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAtlasNode* tolua_ret = (cocos2d::CCAtlasNode*)  Mtolua_new((cocos2d::CCAtlasNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAtlasNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: atlasWithTileFile of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAtlasNode_atlasWithTileFile00
static int tolua_Cocos2d_cocos2d_CCAtlasNode_atlasWithTileFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAtlasNode",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* tile = ((const char*)  tolua_tostring(tolua_S,2,0));
  unsigned int tileWidth = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  unsigned int tileHeight = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
  unsigned int itemsToRender = ((unsigned int)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCAtlasNode* tolua_ret = (cocos2d::CCAtlasNode*)  cocos2d::CCAtlasNode::atlasWithTileFile(tile,tileWidth,tileHeight,itemsToRender);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAtlasNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'atlasWithTileFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTileFile of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAtlasNode_initWithTileFile00
static int tolua_Cocos2d_cocos2d_CCAtlasNode_initWithTileFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAtlasNode",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAtlasNode* self = (cocos2d::CCAtlasNode*)  tolua_tousertype(tolua_S,1,0);
  const char* tile = ((const char*)  tolua_tostring(tolua_S,2,0));
  unsigned int tileWidth = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  unsigned int tileHeight = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
  unsigned int itemsToRender = ((unsigned int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTileFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTileFile(tile,tileWidth,tileHeight,itemsToRender);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTileFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAtlasValues of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAtlasNode_updateAtlasValues00
static int tolua_Cocos2d_cocos2d_CCAtlasNode_updateAtlasValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAtlasNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAtlasNode* self = (cocos2d::CCAtlasNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAtlasValues'", NULL);
#endif
  {
   self->updateAtlasValues();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAtlasValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAtlasNode_draw00
static int tolua_Cocos2d_cocos2d_CCAtlasNode_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAtlasNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAtlasNode* self = (cocos2d::CCAtlasNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAtlasNode_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCAtlasNode_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAtlasNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAtlasNode* self = (cocos2d::CCAtlasNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAtlasNode_getTexture00
static int tolua_Cocos2d_cocos2d_CCAtlasNode_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAtlasNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAtlasNode* self = (cocos2d::CCAtlasNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAtlasNode_setTexture00
static int tolua_Cocos2d_cocos2d_CCAtlasNode_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAtlasNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAtlasNode* self = (cocos2d::CCAtlasNode*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* texture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCRGBAProtocol__ of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCAtlasNode___CCRGBAProtocol__
static int tolua_get_cocos2d__CCAtlasNode___CCRGBAProtocol__(lua_State* tolua_S)
{
  cocos2d::CCAtlasNode* self = (cocos2d::CCAtlasNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCRGBAProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCRGBAProtocol*>(self), "cocos2d::CCRGBAProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCRGBAProtocol*)self), "cocos2d::CCRGBAProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTextureProtocol__ of class  cocos2d::CCAtlasNode */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCAtlasNode___CCTextureProtocol__
static int tolua_get_cocos2d__CCAtlasNode___CCTextureProtocol__(lua_State* tolua_S)
{
  cocos2d::CCAtlasNode* self = (cocos2d::CCAtlasNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTextureProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCTextureProtocol*>(self), "cocos2d::CCTextureProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCTextureProtocol*)self), "cocos2d::CCTextureProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCAutoreleasePool */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAutoreleasePool_new00
static int tolua_Cocos2d_cocos2d_CCAutoreleasePool_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAutoreleasePool",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAutoreleasePool* tolua_ret = (cocos2d::CCAutoreleasePool*)  Mtolua_new((cocos2d::CCAutoreleasePool)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAutoreleasePool");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCAutoreleasePool */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAutoreleasePool_new00_local
static int tolua_Cocos2d_cocos2d_CCAutoreleasePool_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCAutoreleasePool",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCAutoreleasePool* tolua_ret = (cocos2d::CCAutoreleasePool*)  Mtolua_new((cocos2d::CCAutoreleasePool)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAutoreleasePool");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObject of class  cocos2d::CCAutoreleasePool */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAutoreleasePool_addObject00
static int tolua_Cocos2d_cocos2d_CCAutoreleasePool_addObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAutoreleasePool",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAutoreleasePool* self = (cocos2d::CCAutoreleasePool*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObject'", NULL);
#endif
  {
   self->addObject(pObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObject of class  cocos2d::CCAutoreleasePool */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAutoreleasePool_removeObject00
static int tolua_Cocos2d_cocos2d_CCAutoreleasePool_removeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAutoreleasePool",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAutoreleasePool* self = (cocos2d::CCAutoreleasePool*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObject'", NULL);
#endif
  {
   self->removeObject(pObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: clear of class  cocos2d::CCAutoreleasePool */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCAutoreleasePool_clear00
static int tolua_Cocos2d_cocos2d_CCAutoreleasePool_clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCAutoreleasePool",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCAutoreleasePool* self = (cocos2d::CCAutoreleasePool*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'clear'", NULL);
#endif
  {
   self->clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCPoolManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoolManager_new00
static int tolua_Cocos2d_cocos2d_CCPoolManager_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPoolManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCPoolManager* tolua_ret = (cocos2d::CCPoolManager*)  Mtolua_new((cocos2d::CCPoolManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPoolManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCPoolManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoolManager_new00_local
static int tolua_Cocos2d_cocos2d_CCPoolManager_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPoolManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCPoolManager* tolua_ret = (cocos2d::CCPoolManager*)  Mtolua_new((cocos2d::CCPoolManager)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPoolManager");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: finalize of class  cocos2d::CCPoolManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoolManager_finalize00
static int tolua_Cocos2d_cocos2d_CCPoolManager_finalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCPoolManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoolManager* self = (cocos2d::CCPoolManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'finalize'", NULL);
#endif
  {
   self->finalize();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'finalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: push of class  cocos2d::CCPoolManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoolManager_push00
static int tolua_Cocos2d_cocos2d_CCPoolManager_push00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCPoolManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoolManager* self = (cocos2d::CCPoolManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'push'", NULL);
#endif
  {
   self->push();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'push'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pop of class  cocos2d::CCPoolManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoolManager_pop00
static int tolua_Cocos2d_cocos2d_CCPoolManager_pop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCPoolManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoolManager* self = (cocos2d::CCPoolManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pop'", NULL);
#endif
  {
   self->pop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeObject of class  cocos2d::CCPoolManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoolManager_removeObject00
static int tolua_Cocos2d_cocos2d_CCPoolManager_removeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCPoolManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoolManager* self = (cocos2d::CCPoolManager*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeObject'", NULL);
#endif
  {
   self->removeObject(pObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addObject of class  cocos2d::CCPoolManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoolManager_addObject00
static int tolua_Cocos2d_cocos2d_CCPoolManager_addObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCPoolManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoolManager* self = (cocos2d::CCPoolManager*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCObject* pObject = ((cocos2d::CCObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addObject'", NULL);
#endif
  {
   self->addObject(pObject);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getInstance of class  cocos2d::CCPoolManager */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoolManager_getInstance00
static int tolua_Cocos2d_cocos2d_CCPoolManager_getInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPoolManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCPoolManager* tolua_ret = (cocos2d::CCPoolManager*)  cocos2d::CCPoolManager::getInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPoolManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_new00
static int tolua_Cocos2d_cocos2d_CCLabelTTF_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLabelTTF* tolua_ret = (cocos2d::CCLabelTTF*)  Mtolua_new((cocos2d::CCLabelTTF)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelTTF");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_new00_local
static int tolua_Cocos2d_cocos2d_CCLabelTTF_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLabelTTF* tolua_ret = (cocos2d::CCLabelTTF*)  Mtolua_new((cocos2d::CCLabelTTF)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelTTF");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_delete00
static int tolua_Cocos2d_cocos2d_CCLabelTTF_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelTTF* self = (cocos2d::CCLabelTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: description of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_description00
static int tolua_Cocos2d_cocos2d_CCLabelTTF_description00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelTTF* self = (cocos2d::CCLabelTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'description'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->description();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'description'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelWithString of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_labelWithString00
static int tolua_Cocos2d_cocos2d_CCLabelTTF_labelWithString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::CCSize dimensions = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCTextAlignment alignment = ((cocos2d::CCTextAlignment) (int)  tolua_tonumber(tolua_S,4,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,5,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,6,0));
  {
   cocos2d::CCLabelTTF* tolua_ret = (cocos2d::CCLabelTTF*)  cocos2d::CCLabelTTF::labelWithString(label,dimensions,alignment,fontName,fontSize);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelTTF");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelWithString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelWithString of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_labelWithString01
static int tolua_Cocos2d_cocos2d_CCLabelTTF_labelWithString01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,3,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCLabelTTF* tolua_ret = (cocos2d::CCLabelTTF*)  cocos2d::CCLabelTTF::labelWithString(label,fontName,fontSize);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelTTF");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCLabelTTF_labelWithString00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithString of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_initWithString00
static int tolua_Cocos2d_cocos2d_CCLabelTTF_initWithString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isstring(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelTTF* self = (cocos2d::CCLabelTTF*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::CCSize dimensions = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCTextAlignment alignment = ((cocos2d::CCTextAlignment) (int)  tolua_tonumber(tolua_S,4,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,5,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithString(label,dimensions,alignment,fontName,fontSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithString of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_initWithString01
static int tolua_Cocos2d_cocos2d_CCLabelTTF_initWithString01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCLabelTTF* self = (cocos2d::CCLabelTTF*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* fontName = ((const char*)  tolua_tostring(tolua_S,3,0));
  float fontSize = ((float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithString(label,fontName,fontSize);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCLabelTTF_initWithString00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setString of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_setString00
static int tolua_Cocos2d_cocos2d_CCLabelTTF_setString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelTTF* self = (cocos2d::CCLabelTTF*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setString'", NULL);
#endif
  {
   self->setString(label);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getString of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_getString00
static int tolua_Cocos2d_cocos2d_CCLabelTTF_getString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelTTF* self = (cocos2d::CCLabelTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getString'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getString();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToLabelProtocol of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelTTF_convertToLabelProtocol00
static int tolua_Cocos2d_cocos2d_CCLabelTTF_convertToLabelProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelTTF",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelTTF* self = (cocos2d::CCLabelTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToLabelProtocol'", NULL);
#endif
  {
   cocos2d::CCLabelProtocol* tolua_ret = (cocos2d::CCLabelProtocol*)  self->convertToLabelProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToLabelProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCLabelProtocol__ of class  cocos2d::CCLabelTTF */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCLabelTTF___CCLabelProtocol__
static int tolua_get_cocos2d__CCLabelTTF___CCLabelProtocol__(lua_State* tolua_S)
{
  cocos2d::CCLabelTTF* self = (cocos2d::CCLabelTTF*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCLabelProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCLabelProtocol*>(self), "cocos2d::CCLabelProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCLabelProtocol*)self), "cocos2d::CCLabelProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_init00
static int tolua_Cocos2d_cocos2d_CCDirector_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRunningScene of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getRunningScene00
static int tolua_Cocos2d_cocos2d_CCDirector_getRunningScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRunningScene'", NULL);
#endif
  {
   cocos2d::CCScene* tolua_ret = (cocos2d::CCScene*)  self->getRunningScene();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCScene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRunningScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getAnimationInterval of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getAnimationInterval00
static int tolua_Cocos2d_cocos2d_CCDirector_getAnimationInterval00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getAnimationInterval'", NULL);
#endif
  {
   double tolua_ret = (double)  self->getAnimationInterval();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getAnimationInterval'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnimationInterval of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setAnimationInterval00
static int tolua_Cocos2d_cocos2d_CCDirector_setAnimationInterval00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  double dValue = ((double)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnimationInterval'", NULL);
#endif
  {
   self->setAnimationInterval(dValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnimationInterval'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isDisplayFPS of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_isDisplayFPS00
static int tolua_Cocos2d_cocos2d_CCDirector_isDisplayFPS00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isDisplayFPS'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isDisplayFPS();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isDisplayFPS'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDisplayFPS of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setDisplayFPS00
static int tolua_Cocos2d_cocos2d_CCDirector_setDisplayFPS00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  bool bDisplayFPS = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDisplayFPS'", NULL);
#endif
  {
   self->setDisplayFPS(bDisplayFPS);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDisplayFPS'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpenGLView of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getOpenGLView00
static int tolua_Cocos2d_cocos2d_CCDirector_getOpenGLView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpenGLView'", NULL);
#endif
  {
   CC_GLVIEW* tolua_ret = (CC_GLVIEW*)  self->getOpenGLView();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CC_GLVIEW");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpenGLView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpenGLView of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setOpenGLView00
static int tolua_Cocos2d_cocos2d_CCDirector_setOpenGLView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CC_GLVIEW",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  CC_GLVIEW* pobOpenGLView = ((CC_GLVIEW*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpenGLView'", NULL);
#endif
  {
   self->setOpenGLView(pobOpenGLView);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpenGLView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isNextDeltaTimeZero of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_isNextDeltaTimeZero00
static int tolua_Cocos2d_cocos2d_CCDirector_isNextDeltaTimeZero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isNextDeltaTimeZero'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isNextDeltaTimeZero();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isNextDeltaTimeZero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setNextDeltaTimeZero of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setNextDeltaTimeZero00
static int tolua_Cocos2d_cocos2d_CCDirector_setNextDeltaTimeZero00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  bool bNextDeltaTimeZero = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setNextDeltaTimeZero'", NULL);
#endif
  {
   self->setNextDeltaTimeZero(bNextDeltaTimeZero);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setNextDeltaTimeZero'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isPaused of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_isPaused00
static int tolua_Cocos2d_cocos2d_CCDirector_isPaused00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isPaused'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isPaused();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isPaused'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getFrames of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getFrames00
static int tolua_Cocos2d_cocos2d_CCDirector_getFrames00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getFrames'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->getFrames();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getFrames'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getProjection of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getProjection00
static int tolua_Cocos2d_cocos2d_CCDirector_getProjection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getProjection'", NULL);
#endif
  {
   cocos2d::ccDirectorProjection tolua_ret = (cocos2d::ccDirectorProjection)  self->getProjection();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getProjection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setProjection of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setProjection00
static int tolua_Cocos2d_cocos2d_CCDirector_setProjection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccDirectorProjection kProjection = ((cocos2d::ccDirectorProjection) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setProjection'", NULL);
#endif
  {
   self->setProjection(kProjection);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setProjection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isSendCleanupToScene of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_isSendCleanupToScene00
static int tolua_Cocos2d_cocos2d_CCDirector_isSendCleanupToScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isSendCleanupToScene'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isSendCleanupToScene();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isSendCleanupToScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWinSize of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getWinSize00
static int tolua_Cocos2d_cocos2d_CCDirector_getWinSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWinSize'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getWinSize();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWinSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getWinSizeInPixels of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getWinSizeInPixels00
static int tolua_Cocos2d_cocos2d_CCDirector_getWinSizeInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getWinSizeInPixels'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getWinSizeInPixels();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getWinSizeInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDisplaySizeInPixels of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getDisplaySizeInPixels00
static int tolua_Cocos2d_cocos2d_CCDirector_getDisplaySizeInPixels00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDisplaySizeInPixels'", NULL);
#endif
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  self->getDisplaySizeInPixels();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDisplaySizeInPixels'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: reshapeProjection of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_reshapeProjection00
static int tolua_Cocos2d_cocos2d_CCDirector_reshapeProjection00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize newWindowSize = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'reshapeProjection'", NULL);
#endif
  {
   self->reshapeProjection(newWindowSize);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'reshapeProjection'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToGL of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_convertToGL00
static int tolua_Cocos2d_cocos2d_CCDirector_convertToGL00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint obPoint = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToGL'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->convertToGL(obPoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToGL'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToUI of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_convertToUI00
static int tolua_Cocos2d_cocos2d_CCDirector_convertToUI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint obPoint = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToUI'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->convertToUI(obPoint);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToUI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getZEye of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getZEye00
static int tolua_Cocos2d_cocos2d_CCDirector_getZEye00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getZEye'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getZEye();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getZEye'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: runWithScene of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_runWithScene00
static int tolua_Cocos2d_cocos2d_CCDirector_runWithScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCScene* pScene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'runWithScene'", NULL);
#endif
  {
   self->runWithScene(pScene);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'runWithScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pushScene of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_pushScene00
static int tolua_Cocos2d_cocos2d_CCDirector_pushScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCScene* pScene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pushScene'", NULL);
#endif
  {
   self->pushScene(pScene);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pushScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: popScene of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_popScene00
static int tolua_Cocos2d_cocos2d_CCDirector_popScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'popScene'", NULL);
#endif
  {
   self->popScene();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'popScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: replaceScene of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_replaceScene00
static int tolua_Cocos2d_cocos2d_CCDirector_replaceScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCScene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCScene* pScene = ((cocos2d::CCScene*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'replaceScene'", NULL);
#endif
  {
   self->replaceScene(pScene);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'replaceScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: endToLua of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_endToLua00
static int tolua_Cocos2d_cocos2d_CCDirector_endToLua00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'endToLua'", NULL);
#endif
  {
   self->endToLua();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'endToLua'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: pause of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_pause00
static int tolua_Cocos2d_cocos2d_CCDirector_pause00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'pause'", NULL);
#endif
  {
   self->pause();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'pause'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resume of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_resume00
static int tolua_Cocos2d_cocos2d_CCDirector_resume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resume'", NULL);
#endif
  {
   self->resume();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: drawScene of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_drawScene00
static int tolua_Cocos2d_cocos2d_CCDirector_drawScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'drawScene'", NULL);
#endif
  {
   self->drawScene();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'drawScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeCachedData of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_purgeCachedData00
static int tolua_Cocos2d_cocos2d_CCDirector_purgeCachedData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'purgeCachedData'", NULL);
#endif
  {
   self->purgeCachedData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeCachedData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGLDefaultValues of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setGLDefaultValues00
static int tolua_Cocos2d_cocos2d_CCDirector_setGLDefaultValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGLDefaultValues'", NULL);
#endif
  {
   self->setGLDefaultValues();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGLDefaultValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAlphaBlending of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setAlphaBlending00
static int tolua_Cocos2d_cocos2d_CCDirector_setAlphaBlending00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  bool bOn = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAlphaBlending'", NULL);
#endif
  {
   self->setAlphaBlending(bOn);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAlphaBlending'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDepthTest of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setDepthTest00
static int tolua_Cocos2d_cocos2d_CCDirector_setDepthTest00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  bool bOn = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDepthTest'", NULL);
#endif
  {
   self->setDepthTest(bOn);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDepthTest'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: mainLoop of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_mainLoop00
static int tolua_Cocos2d_cocos2d_CCDirector_mainLoop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'mainLoop'", NULL);
#endif
  {
   self->mainLoop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'mainLoop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: showProfilers of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_showProfilers00
static int tolua_Cocos2d_cocos2d_CCDirector_showProfilers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'showProfilers'", NULL);
#endif
  {
   self->showProfilers();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'showProfilers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: applyOrientation of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_applyOrientation00
static int tolua_Cocos2d_cocos2d_CCDirector_applyOrientation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'applyOrientation'", NULL);
#endif
  {
   self->applyOrientation();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'applyOrientation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDeviceOrientation of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getDeviceOrientation00
static int tolua_Cocos2d_cocos2d_CCDirector_getDeviceOrientation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDeviceOrientation'", NULL);
#endif
  {
   cocos2d::ccDeviceOrientation tolua_ret = (cocos2d::ccDeviceOrientation)  self->getDeviceOrientation();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDeviceOrientation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDeviceOrientation of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setDeviceOrientation00
static int tolua_Cocos2d_cocos2d_CCDirector_setDeviceOrientation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccDeviceOrientation kDeviceOrientation = ((cocos2d::ccDeviceOrientation) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDeviceOrientation'", NULL);
#endif
  {
   self->setDeviceOrientation(kDeviceOrientation);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDeviceOrientation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContentScaleFactor of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setContentScaleFactor00
static int tolua_Cocos2d_cocos2d_CCDirector_setContentScaleFactor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CGFloat scaleFactor = ((cocos2d::CGFloat)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContentScaleFactor'", NULL);
#endif
  {
   self->setContentScaleFactor(scaleFactor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContentScaleFactor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getContentScaleFactor of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_getContentScaleFactor00
static int tolua_Cocos2d_cocos2d_CCDirector_getContentScaleFactor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getContentScaleFactor'", NULL);
#endif
  {
   cocos2d::CGFloat tolua_ret = (cocos2d::CGFloat)  self->getContentScaleFactor();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getContentScaleFactor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: enableRetinaDisplay of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_enableRetinaDisplay00
static int tolua_Cocos2d_cocos2d_CCDirector_enableRetinaDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'enableRetinaDisplay'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->enableRetinaDisplay(enabled);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'enableRetinaDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isRetinaDisplay of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_isRetinaDisplay00
static int tolua_Cocos2d_cocos2d_CCDirector_isRetinaDisplay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCDirector* self = (cocos2d::CCDirector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isRetinaDisplay'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isRetinaDisplay();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isRetinaDisplay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDirectorType of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_setDirectorType00
static int tolua_Cocos2d_cocos2d_CCDirector_setDirectorType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccDirectorType obDirectorType = ((cocos2d::ccDirectorType) (int)  tolua_tonumber(tolua_S,2,0));
  {
   bool tolua_ret = (bool)  cocos2d::CCDirector::setDirectorType(obDirectorType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDirectorType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedDirector of class  cocos2d::CCDirector */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCDirector_sharedDirector00
static int tolua_Cocos2d_cocos2d_CCDirector_sharedDirector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCDirector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCDirector* tolua_ret = (cocos2d::CCDirector*)  cocos2d::CCDirector::sharedDirector();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCDirector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedDirector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccDrawPoint */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccDrawPoint00
static int tolua_Cocos2d_cocos2d_ccDrawPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoint point = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  {
   cocos2d::ccDrawPoint(point);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccDrawPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccDrawPoints */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccDrawPoints00
static int tolua_Cocos2d_cocos2d_ccDrawPoints00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* points = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  unsigned int numberOfPoints = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::ccDrawPoints(points,numberOfPoints);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccDrawPoints'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccDrawLine */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccDrawLine00
static int tolua_Cocos2d_cocos2d_ccDrawLine00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoint origin = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  cocos2d::CCPoint destination = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::ccDrawLine(origin,destination);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccDrawLine'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccDrawPoly */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccDrawPoly00
static int tolua_Cocos2d_cocos2d_ccDrawPoly00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const cocos2d::CCPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* vertices = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  int numOfVertices = ((int)  tolua_tonumber(tolua_S,2,0));
  bool closePolygon = ((bool)  tolua_toboolean(tolua_S,3,0));
  {
   cocos2d::ccDrawPoly(vertices,numOfVertices,closePolygon);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccDrawPoly'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccDrawCircle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccDrawCircle00
static int tolua_Cocos2d_cocos2d_ccDrawCircle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoint center = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  float radius = ((float)  tolua_tonumber(tolua_S,2,0));
  float angle = ((float)  tolua_tonumber(tolua_S,3,0));
  int segments = ((int)  tolua_tonumber(tolua_S,4,0));
  bool drawLineToCenter = ((bool)  tolua_toboolean(tolua_S,5,0));
  {
   cocos2d::ccDrawCircle(center,radius,angle,segments,drawLineToCenter);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccDrawCircle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccDrawQuadBezier */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccDrawQuadBezier00
static int tolua_Cocos2d_cocos2d_ccDrawQuadBezier00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoint origin = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  cocos2d::CCPoint control = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCPoint destination = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  int segments = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::ccDrawQuadBezier(origin,control,destination,segments);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccDrawQuadBezier'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::ccDrawCubicBezier */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_ccDrawCubicBezier00
static int tolua_Cocos2d_cocos2d_ccDrawCubicBezier00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     (tolua_isvaluenil(tolua_S,1,&tolua_err) || !tolua_isusertype(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCPoint origin = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0));
  cocos2d::CCPoint control1 = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCPoint control2 = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCPoint destination = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,4,0));
  int segments = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::ccDrawCubicBezier(origin,control1,control2,destination,segments);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccDrawCubicBezier'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: x of class  cocos2d::CCPoint */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCPoint_x
static int tolua_get_cocos2d__CCPoint_x(lua_State* tolua_S)
{
  cocos2d::CCPoint* self = (cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->x);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: x of class  cocos2d::CCPoint */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCPoint_x
static int tolua_set_cocos2d__CCPoint_x(lua_State* tolua_S)
{
  cocos2d::CCPoint* self = (cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'x'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->x = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: y of class  cocos2d::CCPoint */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCPoint_y
static int tolua_get_cocos2d__CCPoint_y(lua_State* tolua_S)
{
  cocos2d::CCPoint* self = (cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->y);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: y of class  cocos2d::CCPoint */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCPoint_y
static int tolua_set_cocos2d__CCPoint_y(lua_State* tolua_S)
{
  cocos2d::CCPoint* self = (cocos2d::CCPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'y'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->y = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCPoint */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoint_new00
static int tolua_Cocos2d_cocos2d_CCPoint_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCPoint* tolua_ret = (cocos2d::CCPoint*)  Mtolua_new((cocos2d::CCPoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCPoint */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoint_new00_local
static int tolua_Cocos2d_cocos2d_CCPoint_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCPoint* tolua_ret = (cocos2d::CCPoint*)  Mtolua_new((cocos2d::CCPoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCPoint */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoint_new01
static int tolua_Cocos2d_cocos2d_CCPoint_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCPoint* tolua_ret = (cocos2d::CCPoint*)  Mtolua_new((cocos2d::CCPoint)(x,y));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPoint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCPoint_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCPoint */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoint_new01_local
static int tolua_Cocos2d_cocos2d_CCPoint_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCPoint* tolua_ret = (cocos2d::CCPoint*)  Mtolua_new((cocos2d::CCPoint)(x,y));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCPoint_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCPointEqualToPoint of class  cocos2d::CCPoint */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPoint_CCPointEqualToPoint00
static int tolua_Cocos2d_cocos2d_CCPoint_CCPointEqualToPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCPoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCPoint* point1 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCPoint* point2 = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  cocos2d::CCPoint::CCPointEqualToPoint(*point1,*point2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCPointEqualToPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: width of class  cocos2d::CCSize */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCSize_width
static int tolua_get_cocos2d__CCSize_width(lua_State* tolua_S)
{
  cocos2d::CCSize* self = (cocos2d::CCSize*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'width'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->width);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: width of class  cocos2d::CCSize */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCSize_width
static int tolua_set_cocos2d__CCSize_width(lua_State* tolua_S)
{
  cocos2d::CCSize* self = (cocos2d::CCSize*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'width'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->width = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: height of class  cocos2d::CCSize */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCSize_height
static int tolua_get_cocos2d__CCSize_height(lua_State* tolua_S)
{
  cocos2d::CCSize* self = (cocos2d::CCSize*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'height'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->height);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: height of class  cocos2d::CCSize */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCSize_height
static int tolua_set_cocos2d__CCSize_height(lua_State* tolua_S)
{
  cocos2d::CCSize* self = (cocos2d::CCSize*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'height'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->height = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCSize */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSize_new00
static int tolua_Cocos2d_cocos2d_CCSize_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSize",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSize* tolua_ret = (cocos2d::CCSize*)  Mtolua_new((cocos2d::CCSize)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSize");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCSize */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSize_new00_local
static int tolua_Cocos2d_cocos2d_CCSize_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSize",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCSize* tolua_ret = (cocos2d::CCSize*)  Mtolua_new((cocos2d::CCSize)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCSize */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSize_new01
static int tolua_Cocos2d_cocos2d_CCSize_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSize",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCSize* tolua_ret = (cocos2d::CCSize*)  Mtolua_new((cocos2d::CCSize)(width,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSize");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSize_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCSize */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSize_new01_local
static int tolua_Cocos2d_cocos2d_CCSize_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSize",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
  {
   cocos2d::CCSize* tolua_ret = (cocos2d::CCSize*)  Mtolua_new((cocos2d::CCSize)(width,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCSize_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCSizeEqualToSize of class  cocos2d::CCSize */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSize_CCSizeEqualToSize00
static int tolua_Cocos2d_cocos2d_CCSize_CCSizeEqualToSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCSize",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCSize",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCSize* size1 = ((const cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCSize* size2 = ((const cocos2d::CCSize*)  tolua_tousertype(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  cocos2d::CCSize::CCSizeEqualToSize(*size1,*size2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCSizeEqualToSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: origin of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCRect_origin
static int tolua_get_cocos2d__CCRect_origin(lua_State* tolua_S)
{
  cocos2d::CCRect* self = (cocos2d::CCRect*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'origin'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->origin,"cocos2d::CCPoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: origin of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCRect_origin
static int tolua_set_cocos2d__CCRect_origin(lua_State* tolua_S)
{
  cocos2d::CCRect* self = (cocos2d::CCRect*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'origin'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->origin = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: size of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCRect_size
static int tolua_get_cocos2d__CCRect_size(lua_State* tolua_S)
{
  cocos2d::CCRect* self = (cocos2d::CCRect*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->size,"cocos2d::CCSize");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: size of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__CCRect_size
static int tolua_set_cocos2d__CCRect_size(lua_State* tolua_S)
{
  cocos2d::CCRect* self = (cocos2d::CCRect*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'size'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->size = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_new00
static int tolua_Cocos2d_cocos2d_CCRect_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRect* tolua_ret = (cocos2d::CCRect*)  Mtolua_new((cocos2d::CCRect)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRect");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_new00_local
static int tolua_Cocos2d_cocos2d_CCRect_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCRect* tolua_ret = (cocos2d::CCRect*)  Mtolua_new((cocos2d::CCRect)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_new01
static int tolua_Cocos2d_cocos2d_CCRect_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float width = ((float)  tolua_tonumber(tolua_S,4,0));
  float height = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCRect* tolua_ret = (cocos2d::CCRect*)  Mtolua_new((cocos2d::CCRect)(x,y,width,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRect");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCRect_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_new01_local
static int tolua_Cocos2d_cocos2d_CCRect_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float width = ((float)  tolua_tonumber(tolua_S,4,0));
  float height = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCRect* tolua_ret = (cocos2d::CCRect*)  Mtolua_new((cocos2d::CCRect)(x,y,width,height));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCRect_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectGetMinX of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_CCRectGetMinX00
static int tolua_Cocos2d_cocos2d_CCRect_CCRectGetMinX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCRect* rect = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  {
   float tolua_ret = (float)  cocos2d::CCRect::CCRectGetMinX(*rect);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectGetMinX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectGetMaxX of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_CCRectGetMaxX00
static int tolua_Cocos2d_cocos2d_CCRect_CCRectGetMaxX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCRect* rect = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  {
   float tolua_ret = (float)  cocos2d::CCRect::CCRectGetMaxX(*rect);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectGetMaxX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectGetMidX of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_CCRectGetMidX00
static int tolua_Cocos2d_cocos2d_CCRect_CCRectGetMidX00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCRect* rect = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  {
   float tolua_ret = (float)  cocos2d::CCRect::CCRectGetMidX(*rect);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectGetMidX'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectGetMinY of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_CCRectGetMinY00
static int tolua_Cocos2d_cocos2d_CCRect_CCRectGetMinY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCRect* rect = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  {
   float tolua_ret = (float)  cocos2d::CCRect::CCRectGetMinY(*rect);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectGetMinY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectGetMaxY of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_CCRectGetMaxY00
static int tolua_Cocos2d_cocos2d_CCRect_CCRectGetMaxY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCRect* rect = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  {
   float tolua_ret = (float)  cocos2d::CCRect::CCRectGetMaxY(*rect);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectGetMaxY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectGetMidY of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_CCRectGetMidY00
static int tolua_Cocos2d_cocos2d_CCRect_CCRectGetMidY00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCRect* rect = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  {
   float tolua_ret = (float)  cocos2d::CCRect::CCRectGetMidY(*rect);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectGetMidY'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectEqualToRect of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_CCRectEqualToRect00
static int tolua_Cocos2d_cocos2d_CCRect_CCRectEqualToRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCRect",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCRect* rect1 = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCRect* rect2 = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  cocos2d::CCRect::CCRectEqualToRect(*rect1,*rect2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectEqualToRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectContainsPoint of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_CCRectContainsPoint00
static int tolua_Cocos2d_cocos2d_CCRect_CCRectContainsPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCRect",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCRect* rect = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCPoint* point = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  cocos2d::CCRect::CCRectContainsPoint(*rect,*point);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectContainsPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CCRectIntersectsRect of class  cocos2d::CCRect */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRect_CCRectIntersectsRect00
static int tolua_Cocos2d_cocos2d_CCRect_CCRectIntersectsRect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCRect",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCRect",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCRect",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const cocos2d::CCRect* rectA = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCRect* rectB = ((const cocos2d::CCRect*)  tolua_tousertype(tolua_S,3,0));
  {
   bool tolua_ret = (bool)  cocos2d::CCRect::CCRectIntersectsRect(*rectA,*rectB);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectIntersectsRect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::CCPointMake */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCPointMake00
static int tolua_Cocos2d_cocos2d_CCPointMake00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float x = ((float)  tolua_tonumber(tolua_S,1,0));
  float y = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  cocos2d::CCPointMake(x,y);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCPointMake'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::CCSizeMake */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCSizeMake00
static int tolua_Cocos2d_cocos2d_CCSizeMake00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float width = ((float)  tolua_tonumber(tolua_S,1,0));
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCSize tolua_ret = (cocos2d::CCSize)  cocos2d::CCSizeMake(width,height);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCSize)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCSize));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCSize");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCSizeMake'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::CCRectMake */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCRectMake00
static int tolua_Cocos2d_cocos2d_CCRectMake00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnumber(tolua_S,1,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float x = ((float)  tolua_tonumber(tolua_S,1,0));
  float y = ((float)  tolua_tonumber(tolua_S,2,0));
  float width = ((float)  tolua_tonumber(tolua_S,3,0));
  float height = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCRect tolua_ret = (cocos2d::CCRect)  cocos2d::CCRectMake(x,y,width,height);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCRectMake'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: begin of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_get_CCIMEKeyboardNotificationInfo_begin
static int tolua_get_CCIMEKeyboardNotificationInfo_begin(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'begin'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->begin,"CCRect");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: begin of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_set_CCIMEKeyboardNotificationInfo_begin
static int tolua_set_CCIMEKeyboardNotificationInfo_begin(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'begin'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCRect",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->begin = *((CCRect*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: end of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_get_CCIMEKeyboardNotificationInfo_end
static int tolua_get_CCIMEKeyboardNotificationInfo_end(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'end'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->end,"CCRect");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: end of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_set_CCIMEKeyboardNotificationInfo_end
static int tolua_set_CCIMEKeyboardNotificationInfo_end(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'end'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCRect",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->end = *((CCRect*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: duration of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_get_CCIMEKeyboardNotificationInfo_duration
static int tolua_get_CCIMEKeyboardNotificationInfo_duration(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->duration);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: duration of class  CCIMEKeyboardNotificationInfo */
#ifndef TOLUA_DISABLE_tolua_set_CCIMEKeyboardNotificationInfo_duration
static int tolua_set_CCIMEKeyboardNotificationInfo_duration(lua_State* tolua_S)
{
  CCIMEKeyboardNotificationInfo* self = (CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'duration'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->duration = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: attachWithIME of class  CCIMEDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_CCIMEDelegate_attachWithIME00
static int tolua_Cocos2d_CCIMEDelegate_attachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCIMEDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCIMEDelegate* self = (CCIMEDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'attachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->attachWithIME();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'attachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: detachWithIME of class  CCIMEDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_CCIMEDelegate_detachWithIME00
static int tolua_Cocos2d_CCIMEDelegate_detachWithIME00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCIMEDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCIMEDelegate* self = (CCIMEDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'detachWithIME'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->detachWithIME();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'detachWithIME'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedDispatcher of class  CCIMEDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_CCIMEDispatcher_sharedDispatcher00
static int tolua_Cocos2d_CCIMEDispatcher_sharedDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CCIMEDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   CCIMEDispatcher* tolua_ret = (CCIMEDispatcher*)  CCIMEDispatcher::sharedDispatcher();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CCIMEDispatcher");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dispatchInsertText of class  CCIMEDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_CCIMEDispatcher_dispatchInsertText00
static int tolua_Cocos2d_CCIMEDispatcher_dispatchInsertText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCIMEDispatcher",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCIMEDispatcher* self = (CCIMEDispatcher*)  tolua_tousertype(tolua_S,1,0);
  const char* pText = ((const char*)  tolua_tostring(tolua_S,2,0));
  int nLen = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dispatchInsertText'", NULL);
#endif
  {
   self->dispatchInsertText(pText,nLen);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dispatchInsertText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dispatchDeleteBackward of class  CCIMEDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_CCIMEDispatcher_dispatchDeleteBackward00
static int tolua_Cocos2d_CCIMEDispatcher_dispatchDeleteBackward00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCIMEDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCIMEDispatcher* self = (CCIMEDispatcher*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dispatchDeleteBackward'", NULL);
#endif
  {
   self->dispatchDeleteBackward();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dispatchDeleteBackward'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dispatchKeyboardWillShow of class  CCIMEDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardWillShow00
static int tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardWillShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCIMEDispatcher",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCIMEKeyboardNotificationInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCIMEDispatcher* self = (CCIMEDispatcher*)  tolua_tousertype(tolua_S,1,0);
  CCIMEKeyboardNotificationInfo* info = ((CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dispatchKeyboardWillShow'", NULL);
#endif
  {
   self->dispatchKeyboardWillShow(*info);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dispatchKeyboardWillShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dispatchKeyboardDidShow of class  CCIMEDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardDidShow00
static int tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardDidShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCIMEDispatcher",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCIMEKeyboardNotificationInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCIMEDispatcher* self = (CCIMEDispatcher*)  tolua_tousertype(tolua_S,1,0);
  CCIMEKeyboardNotificationInfo* info = ((CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dispatchKeyboardDidShow'", NULL);
#endif
  {
   self->dispatchKeyboardDidShow(*info);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dispatchKeyboardDidShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dispatchKeyboardWillHide of class  CCIMEDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardWillHide00
static int tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardWillHide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCIMEDispatcher",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCIMEKeyboardNotificationInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCIMEDispatcher* self = (CCIMEDispatcher*)  tolua_tousertype(tolua_S,1,0);
  CCIMEKeyboardNotificationInfo* info = ((CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dispatchKeyboardWillHide'", NULL);
#endif
  {
   self->dispatchKeyboardWillHide(*info);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dispatchKeyboardWillHide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dispatchKeyboardDidHide of class  CCIMEDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardDidHide00
static int tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardDidHide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CCIMEDispatcher",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"CCIMEKeyboardNotificationInfo",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CCIMEDispatcher* self = (CCIMEDispatcher*)  tolua_tousertype(tolua_S,1,0);
  CCIMEKeyboardNotificationInfo* info = ((CCIMEKeyboardNotificationInfo*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dispatchKeyboardDidHide'", NULL);
#endif
  {
   self->dispatchKeyboardDidHide(*info);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dispatchKeyboardDidHide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: KeypadDestroy of class  cocos2d::CCKeypadDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDelegate_KeypadDestroy00
static int tolua_Cocos2d_cocos2d_CCKeypadDelegate_KeypadDestroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadDelegate* self = (cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'KeypadDestroy'", NULL);
#endif
  {
   self->KeypadDestroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'KeypadDestroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: KeypadKeep of class  cocos2d::CCKeypadDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDelegate_KeypadKeep00
static int tolua_Cocos2d_cocos2d_CCKeypadDelegate_KeypadKeep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadDelegate* self = (cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'KeypadKeep'", NULL);
#endif
  {
   self->KeypadKeep();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'KeypadKeep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keyBackClicked of class  cocos2d::CCKeypadDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDelegate_keyBackClicked00
static int tolua_Cocos2d_cocos2d_CCKeypadDelegate_keyBackClicked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadDelegate* self = (cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keyBackClicked'", NULL);
#endif
  {
   self->keyBackClicked();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keyBackClicked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keyMenuClicked of class  cocos2d::CCKeypadDelegate */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDelegate_keyMenuClicked00
static int tolua_Cocos2d_cocos2d_CCKeypadDelegate_keyMenuClicked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadDelegate* self = (cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keyMenuClicked'", NULL);
#endif
  {
   self->keyMenuClicked();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keyMenuClicked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getDelegate of class  cocos2d::CCKeypadHandler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadHandler_getDelegate00
static int tolua_Cocos2d_cocos2d_CCKeypadHandler_getDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadHandler",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadHandler* self = (cocos2d::CCKeypadHandler*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getDelegate'", NULL);
#endif
  {
   cocos2d::CCKeypadDelegate* tolua_ret = (cocos2d::CCKeypadDelegate*)  self->getDelegate();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCKeypadDelegate");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setDelegate of class  cocos2d::CCKeypadHandler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadHandler_setDelegate00
static int tolua_Cocos2d_cocos2d_CCKeypadHandler_setDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadHandler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadHandler* self = (cocos2d::CCKeypadHandler*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCKeypadDelegate* pDelegate = ((cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setDelegate'", NULL);
#endif
  {
   self->setDelegate(pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDelegate of class  cocos2d::CCKeypadHandler */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadHandler_initWithDelegate00
static int tolua_Cocos2d_cocos2d_CCKeypadHandler_initWithDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadHandler",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadHandler* self = (cocos2d::CCKeypadHandler*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCKeypadDelegate* pDelegate = ((cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDelegate'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDelegate(pDelegate);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCKeypadDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDispatcher_new00
static int tolua_Cocos2d_cocos2d_CCKeypadDispatcher_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCKeypadDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCKeypadDispatcher* tolua_ret = (cocos2d::CCKeypadDispatcher*)  Mtolua_new((cocos2d::CCKeypadDispatcher)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCKeypadDispatcher");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCKeypadDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDispatcher_new00_local
static int tolua_Cocos2d_cocos2d_CCKeypadDispatcher_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCKeypadDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCKeypadDispatcher* tolua_ret = (cocos2d::CCKeypadDispatcher*)  Mtolua_new((cocos2d::CCKeypadDispatcher)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCKeypadDispatcher");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: sharedDispatcher of class  cocos2d::CCKeypadDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDispatcher_sharedDispatcher00
static int tolua_Cocos2d_cocos2d_CCKeypadDispatcher_sharedDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCKeypadDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCKeypadDispatcher* tolua_ret = (cocos2d::CCKeypadDispatcher*)  cocos2d::CCKeypadDispatcher::sharedDispatcher();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCKeypadDispatcher");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'sharedDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeSharedDispatcher of class  cocos2d::CCKeypadDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDispatcher_purgeSharedDispatcher00
static int tolua_Cocos2d_cocos2d_CCKeypadDispatcher_purgeSharedDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCKeypadDispatcher",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCKeypadDispatcher::purgeSharedDispatcher();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeSharedDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addDelegate of class  cocos2d::CCKeypadDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDispatcher_addDelegate00
static int tolua_Cocos2d_cocos2d_CCKeypadDispatcher_addDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadDispatcher* self = (cocos2d::CCKeypadDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCKeypadDelegate* pDelegate = ((cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addDelegate'", NULL);
#endif
  {
   self->addDelegate(pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: removeDelegate of class  cocos2d::CCKeypadDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDispatcher_removeDelegate00
static int tolua_Cocos2d_cocos2d_CCKeypadDispatcher_removeDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadDispatcher* self = (cocos2d::CCKeypadDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCKeypadDelegate* pDelegate = ((cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'removeDelegate'", NULL);
#endif
  {
   self->removeDelegate(pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'removeDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: forceAddDelegate of class  cocos2d::CCKeypadDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDispatcher_forceAddDelegate00
static int tolua_Cocos2d_cocos2d_CCKeypadDispatcher_forceAddDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadDispatcher* self = (cocos2d::CCKeypadDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCKeypadDelegate* pDelegate = ((cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'forceAddDelegate'", NULL);
#endif
  {
   self->forceAddDelegate(pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'forceAddDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: forceRemoveDelegate of class  cocos2d::CCKeypadDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDispatcher_forceRemoveDelegate00
static int tolua_Cocos2d_cocos2d_CCKeypadDispatcher_forceRemoveDelegate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadDispatcher",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCKeypadDelegate",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadDispatcher* self = (cocos2d::CCKeypadDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCKeypadDelegate* pDelegate = ((cocos2d::CCKeypadDelegate*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'forceRemoveDelegate'", NULL);
#endif
  {
   self->forceRemoveDelegate(pDelegate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'forceRemoveDelegate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: dispatchKeypadMSG of class  cocos2d::CCKeypadDispatcher */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCKeypadDispatcher_dispatchKeypadMSG00
static int tolua_Cocos2d_cocos2d_CCKeypadDispatcher_dispatchKeypadMSG00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCKeypadDispatcher",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCKeypadDispatcher* self = (cocos2d::CCKeypadDispatcher*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccKeypadMSGType nMsgType = ((cocos2d::ccKeypadMSGType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'dispatchKeypadMSG'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->dispatchKeypadMSG(nMsgType);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'dispatchKeypadMSG'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_new00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLabelAtlas* tolua_ret = (cocos2d::CCLabelAtlas*)  Mtolua_new((cocos2d::CCLabelAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_new00_local
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLabelAtlas* tolua_ret = (cocos2d::CCLabelAtlas*)  Mtolua_new((cocos2d::CCLabelAtlas)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelAtlas");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelWithString of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_labelWithString00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_labelWithString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* charMapFile = ((const char*)  tolua_tostring(tolua_S,3,0));
  int itemWidth = ((int)  tolua_tonumber(tolua_S,4,0));
  int itemHeight = ((int)  tolua_tonumber(tolua_S,5,0));
  char startCharMap = ((char)  tolua_tonumber(tolua_S,6,0));
  {
   cocos2d::CCLabelAtlas* tolua_ret = (cocos2d::CCLabelAtlas*)  cocos2d::CCLabelAtlas::labelWithString(label,charMapFile,itemWidth,itemHeight,startCharMap);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelAtlas");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelWithString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithString of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_initWithString00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_initWithString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* charMapFile = ((const char*)  tolua_tostring(tolua_S,3,0));
  int itemWidth = ((int)  tolua_tonumber(tolua_S,4,0));
  int itemHeight = ((int)  tolua_tonumber(tolua_S,5,0));
  char startCharMap = ((char)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithString(label,charMapFile,itemWidth,itemHeight,startCharMap);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAtlasValues of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_updateAtlasValues00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_updateAtlasValues00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAtlasValues'", NULL);
#endif
  {
   self->updateAtlasValues();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateAtlasValues'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setString of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_setString00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_setString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setString'", NULL);
#endif
  {
   self->setString(label);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getString of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_getString00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_getString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getString'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getString();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_draw00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToLabelProtocol of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_convertToLabelProtocol00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_convertToLabelProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToLabelProtocol'", NULL);
#endif
  {
   cocos2d::CCLabelProtocol* tolua_ret = (cocos2d::CCLabelProtocol*)  self->convertToLabelProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToLabelProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: atlasWithTileFile of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_atlasWithTileFile00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_atlasWithTileFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* tile = ((const char*)  tolua_tostring(tolua_S,2,0));
  int tileWidth = ((int)  tolua_tonumber(tolua_S,3,0));
  int tileHeight = ((int)  tolua_tonumber(tolua_S,4,0));
  int itemsToRender = ((int)  tolua_tonumber(tolua_S,5,0));
  {
   cocos2d::CCAtlasNode* tolua_ret = (cocos2d::CCAtlasNode*)  cocos2d::CCLabelAtlas::atlasWithTileFile(tile,tileWidth,tileHeight,itemsToRender);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCAtlasNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'atlasWithTileFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTileFile of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_initWithTileFile00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_initWithTileFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  const char* tile = ((const char*)  tolua_tostring(tolua_S,2,0));
  int tileWidth = ((int)  tolua_tonumber(tolua_S,3,0));
  int tileHeight = ((int)  tolua_tonumber(tolua_S,4,0));
  int itemsToRender = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTileFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTileFile(tile,tileWidth,tileHeight,itemsToRender);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTileFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateAtlasValues of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_updateAtlasValues01
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_updateAtlasValues01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateAtlasValues'", NULL);
#endif
  {
   self->updateAtlasValues();
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCLabelAtlas_updateAtlasValues00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_draw01
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_draw01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCLabelAtlas_draw00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_getTexture00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelAtlas_setTexture00
static int tolua_Cocos2d_cocos2d_CCLabelAtlas_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelAtlas",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* texture = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(texture);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCLabelProtocol__ of class  cocos2d::CCLabelAtlas */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCLabelAtlas___CCLabelProtocol__
static int tolua_get_cocos2d__CCLabelAtlas___CCLabelProtocol__(lua_State* tolua_S)
{
  cocos2d::CCLabelAtlas* self = (cocos2d::CCLabelAtlas*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCLabelProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCLabelProtocol*>(self), "cocos2d::CCLabelProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCLabelProtocol*)self), "cocos2d::CCLabelProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: charID of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBMFontDef_unsigned_charID
static int tolua_get_cocos2d__ccBMFontDef_unsigned_charID(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'charID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->charID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: charID of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBMFontDef_unsigned_charID
static int tolua_set_cocos2d__ccBMFontDef_unsigned_charID(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'charID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->charID = ((unsigned int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: rect of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBMFontDef_rect
static int tolua_get_cocos2d__ccBMFontDef_rect(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'rect'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->rect,"cocos2d::CCRect");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: rect of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBMFontDef_rect
static int tolua_set_cocos2d__ccBMFontDef_rect(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'rect'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCRect",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->rect = *((cocos2d::CCRect*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: xOffset of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBMFontDef_xOffset
static int tolua_get_cocos2d__ccBMFontDef_xOffset(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'xOffset'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->xOffset);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: xOffset of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBMFontDef_xOffset
static int tolua_set_cocos2d__ccBMFontDef_xOffset(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'xOffset'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->xOffset = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: yOffset of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBMFontDef_yOffset
static int tolua_get_cocos2d__ccBMFontDef_yOffset(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'yOffset'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->yOffset);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: yOffset of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBMFontDef_yOffset
static int tolua_set_cocos2d__ccBMFontDef_yOffset(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'yOffset'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->yOffset = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: xAdvance of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBMFontDef_xAdvance
static int tolua_get_cocos2d__ccBMFontDef_xAdvance(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'xAdvance'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->xAdvance);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: xAdvance of class  cocos2d::ccBMFontDef */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBMFontDef_xAdvance
static int tolua_set_cocos2d__ccBMFontDef_xAdvance(lua_State* tolua_S)
{
  cocos2d::ccBMFontDef* self = (cocos2d::ccBMFontDef*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'xAdvance'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->xAdvance = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: left of class  cocos2d::ccBMFontPadding */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBMFontPadding_left
static int tolua_get_cocos2d__ccBMFontPadding_left(lua_State* tolua_S)
{
  cocos2d::ccBMFontPadding* self = (cocos2d::ccBMFontPadding*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'left'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->left);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: left of class  cocos2d::ccBMFontPadding */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBMFontPadding_left
static int tolua_set_cocos2d__ccBMFontPadding_left(lua_State* tolua_S)
{
  cocos2d::ccBMFontPadding* self = (cocos2d::ccBMFontPadding*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'left'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->left = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: top of class  cocos2d::ccBMFontPadding */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBMFontPadding_top
static int tolua_get_cocos2d__ccBMFontPadding_top(lua_State* tolua_S)
{
  cocos2d::ccBMFontPadding* self = (cocos2d::ccBMFontPadding*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'top'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->top);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: top of class  cocos2d::ccBMFontPadding */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBMFontPadding_top
static int tolua_set_cocos2d__ccBMFontPadding_top(lua_State* tolua_S)
{
  cocos2d::ccBMFontPadding* self = (cocos2d::ccBMFontPadding*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'top'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->top = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: right of class  cocos2d::ccBMFontPadding */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBMFontPadding_right
static int tolua_get_cocos2d__ccBMFontPadding_right(lua_State* tolua_S)
{
  cocos2d::ccBMFontPadding* self = (cocos2d::ccBMFontPadding*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'right'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->right);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: right of class  cocos2d::ccBMFontPadding */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBMFontPadding_right
static int tolua_set_cocos2d__ccBMFontPadding_right(lua_State* tolua_S)
{
  cocos2d::ccBMFontPadding* self = (cocos2d::ccBMFontPadding*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'right'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->right = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: bottom of class  cocos2d::ccBMFontPadding */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__ccBMFontPadding_bottom
static int tolua_get_cocos2d__ccBMFontPadding_bottom(lua_State* tolua_S)
{
  cocos2d::ccBMFontPadding* self = (cocos2d::ccBMFontPadding*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bottom'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->bottom);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: bottom of class  cocos2d::ccBMFontPadding */
#ifndef TOLUA_DISABLE_tolua_set_cocos2d__ccBMFontPadding_bottom
static int tolua_set_cocos2d__ccBMFontPadding_bottom(lua_State* tolua_S)
{
  cocos2d::ccBMFontPadding* self = (cocos2d::ccBMFontPadding*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'bottom'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->bottom = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCBMFontConfiguration */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBMFontConfiguration_new00
static int tolua_Cocos2d_cocos2d_CCBMFontConfiguration_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCBMFontConfiguration",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCBMFontConfiguration* tolua_ret = (cocos2d::CCBMFontConfiguration*)  Mtolua_new((cocos2d::CCBMFontConfiguration)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCBMFontConfiguration");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCBMFontConfiguration */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBMFontConfiguration_new00_local
static int tolua_Cocos2d_cocos2d_CCBMFontConfiguration_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCBMFontConfiguration",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCBMFontConfiguration* tolua_ret = (cocos2d::CCBMFontConfiguration*)  Mtolua_new((cocos2d::CCBMFontConfiguration)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCBMFontConfiguration");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: description of class  cocos2d::CCBMFontConfiguration */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBMFontConfiguration_description00
static int tolua_Cocos2d_cocos2d_CCBMFontConfiguration_description00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBMFontConfiguration",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBMFontConfiguration* self = (cocos2d::CCBMFontConfiguration*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'description'", NULL);
#endif
  {
   char* tolua_ret = (char*)  self->description();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'description'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: configurationWithFNTFile of class  cocos2d::CCBMFontConfiguration */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBMFontConfiguration_configurationWithFNTFile00
static int tolua_Cocos2d_cocos2d_CCBMFontConfiguration_configurationWithFNTFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCBMFontConfiguration",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* FNTfile = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCBMFontConfiguration* tolua_ret = (cocos2d::CCBMFontConfiguration*)  cocos2d::CCBMFontConfiguration::configurationWithFNTFile(FNTfile);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCBMFontConfiguration");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'configurationWithFNTFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFNTfile of class  cocos2d::CCBMFontConfiguration */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCBMFontConfiguration_initWithFNTfile00
static int tolua_Cocos2d_cocos2d_CCBMFontConfiguration_initWithFNTfile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCBMFontConfiguration",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCBMFontConfiguration* self = (cocos2d::CCBMFontConfiguration*)  tolua_tousertype(tolua_S,1,0);
  const char* FNTfile = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFNTfile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFNTfile(FNTfile);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFNTfile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_new00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLabelBMFont* tolua_ret = (cocos2d::CCLabelBMFont*)  Mtolua_new((cocos2d::CCLabelBMFont)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelBMFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_new00_local
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLabelBMFont* tolua_ret = (cocos2d::CCLabelBMFont*)  Mtolua_new((cocos2d::CCLabelBMFont)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelBMFont");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: purgeCachedData of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_purgeCachedData00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_purgeCachedData00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLabelBMFont::purgeCachedData();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'purgeCachedData'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: labelWithString of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_labelWithString00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_labelWithString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* fntFile = ((const char*)  tolua_tostring(tolua_S,3,0));
  {
   cocos2d::CCLabelBMFont* tolua_ret = (cocos2d::CCLabelBMFont*)  cocos2d::CCLabelBMFont::labelWithString(str,fntFile);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelBMFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'labelWithString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithString of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_initWithString00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_initWithString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* fntFile = ((const char*)  tolua_tostring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithString(str,fntFile);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: createFontChars of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_createFontChars00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_createFontChars00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'createFontChars'", NULL);
#endif
  {
   self->createFontChars();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'createFontChars'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setString of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_setString00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_setString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setString'", NULL);
#endif
  {
   self->setString(label);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getString of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_getString00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_getString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getString'", NULL);
#endif
  {
   const char* tolua_ret = (const char*)  self->getString();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setCString of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_setCString00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_setCString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setCString'", NULL);
#endif
  {
   self->setCString(label);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setCString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setAnchorPoint of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_setAnchorPoint00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_setAnchorPoint00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint var = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setAnchorPoint'", NULL);
#endif
  {
   self->setAnchorPoint(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setAnchorPoint'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToLabelProtocol of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_convertToLabelProtocol00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_convertToLabelProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToLabelProtocol'", NULL);
#endif
  {
   cocos2d::CCLabelProtocol* tolua_ret = (cocos2d::CCLabelProtocol*)  self->convertToLabelProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLabelProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToLabelProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLabelBMFont_draw00
static int tolua_Cocos2d_cocos2d_CCLabelBMFont_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLabelBMFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCLabelProtocol__ of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCLabelBMFont___CCLabelProtocol__
static int tolua_get_cocos2d__CCLabelBMFont___CCLabelProtocol__(lua_State* tolua_S)
{
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCLabelProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCLabelProtocol*>(self), "cocos2d::CCLabelProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCLabelProtocol*)self), "cocos2d::CCLabelProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCRGBAProtocol__ of class  cocos2d::CCLabelBMFont */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCLabelBMFont___CCRGBAProtocol__
static int tolua_get_cocos2d__CCLabelBMFont___CCRGBAProtocol__(lua_State* tolua_S)
{
  cocos2d::CCLabelBMFont* self = (cocos2d::CCLabelBMFont*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCRGBAProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCRGBAProtocol*>(self), "cocos2d::CCRGBAProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCRGBAProtocol*)self), "cocos2d::CCRGBAProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::FNTConfigLoadFile */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_FNTConfigLoadFile00
static int tolua_Cocos2d_cocos2d_FNTConfigLoadFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* file = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   cocos2d::CCBMFontConfiguration* tolua_ret = (cocos2d::CCBMFontConfiguration*)  cocos2d::FNTConfigLoadFile(file);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCBMFontConfiguration");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'FNTConfigLoadFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::FNTConfigRemoveCache */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_FNTConfigRemoveCache00
static int tolua_Cocos2d_cocos2d_FNTConfigRemoveCache00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::FNTConfigRemoveCache();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'FNTConfigRemoveCache'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_new00
static int tolua_Cocos2d_cocos2d_CCLayer_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLayer* tolua_ret = (cocos2d::CCLayer*)  Mtolua_new((cocos2d::CCLayer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_new00_local
static int tolua_Cocos2d_cocos2d_CCLayer_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLayer* tolua_ret = (cocos2d::CCLayer*)  Mtolua_new((cocos2d::CCLayer)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayer");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_init00
static int tolua_Cocos2d_cocos2d_CCLayer_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_node00
static int tolua_Cocos2d_cocos2d_CCLayer_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLayer* tolua_ret = (cocos2d::CCLayer*)  cocos2d::CCLayer::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_onEnter00
static int tolua_Cocos2d_cocos2d_CCLayer_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_onExit00
static int tolua_Cocos2d_cocos2d_CCLayer_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnterTransitionDidFinish of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_onEnterTransitionDidFinish00
static int tolua_Cocos2d_cocos2d_CCLayer_onEnterTransitionDidFinish00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnterTransitionDidFinish'", NULL);
#endif
  {
   self->onEnterTransitionDidFinish();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnterTransitionDidFinish'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_ccTouchBegan00
static int tolua_Cocos2d_cocos2d_CCLayer_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroy of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_destroy00
static int tolua_Cocos2d_cocos2d_CCLayer_destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'destroy'", NULL);
#endif
  {
   self->destroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keep of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_keep00
static int tolua_Cocos2d_cocos2d_CCLayer_keep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keep'", NULL);
#endif
  {
   self->keep();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: didAccelerate of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_didAccelerate00
static int tolua_Cocos2d_cocos2d_CCLayer_didAccelerate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAcceleration",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAcceleration* pAccelerationValue = ((cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'didAccelerate'", NULL);
#endif
  {
   self->didAccelerate(pAccelerationValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'didAccelerate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: KeypadDestroy of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_KeypadDestroy00
static int tolua_Cocos2d_cocos2d_CCLayer_KeypadDestroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'KeypadDestroy'", NULL);
#endif
  {
   self->KeypadDestroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'KeypadDestroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: KeypadKeep of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_KeypadKeep00
static int tolua_Cocos2d_cocos2d_CCLayer_KeypadKeep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'KeypadKeep'", NULL);
#endif
  {
   self->KeypadKeep();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'KeypadKeep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerWithTouchDispatcher of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_registerWithTouchDispatcher00
static int tolua_Cocos2d_cocos2d_CCLayer_registerWithTouchDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerWithTouchDispatcher'", NULL);
#endif
  {
   self->registerWithTouchDispatcher();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerWithTouchDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsTouchEnabled of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_setIsTouchEnabled00
static int tolua_Cocos2d_cocos2d_CCLayer_setIsTouchEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsTouchEnabled'", NULL);
#endif
  {
   self->setIsTouchEnabled(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsTouchEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsTouchEnabled of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_getIsTouchEnabled00
static int tolua_Cocos2d_cocos2d_CCLayer_getIsTouchEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsTouchEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsTouchEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsTouchEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsAccelerometerEnabled of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_setIsAccelerometerEnabled00
static int tolua_Cocos2d_cocos2d_CCLayer_setIsAccelerometerEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsAccelerometerEnabled'", NULL);
#endif
  {
   self->setIsAccelerometerEnabled(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsAccelerometerEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsAccelerometerEnabled of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_getIsAccelerometerEnabled00
static int tolua_Cocos2d_cocos2d_CCLayer_getIsAccelerometerEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsAccelerometerEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsAccelerometerEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsAccelerometerEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsKeypadEnabled of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_setIsKeypadEnabled00
static int tolua_Cocos2d_cocos2d_CCLayer_setIsKeypadEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsKeypadEnabled'", NULL);
#endif
  {
   self->setIsKeypadEnabled(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsKeypadEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsKeypadEnabled of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_getIsKeypadEnabled00
static int tolua_Cocos2d_cocos2d_CCLayer_getIsKeypadEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsKeypadEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsKeypadEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsKeypadEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesBegan of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_ccTouchesBegan00
static int tolua_Cocos2d_cocos2d_CCLayer_ccTouchesBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesBegan'", NULL);
#endif
  {
   self->ccTouchesBegan(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesMoved of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_ccTouchesMoved00
static int tolua_Cocos2d_cocos2d_CCLayer_ccTouchesMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesMoved'", NULL);
#endif
  {
   self->ccTouchesMoved(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesEnded of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_ccTouchesEnded00
static int tolua_Cocos2d_cocos2d_CCLayer_ccTouchesEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesEnded'", NULL);
#endif
  {
   self->ccTouchesEnded(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchesCancelled of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayer_ccTouchesCancelled00
static int tolua_Cocos2d_cocos2d_CCLayer_ccTouchesCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCSet",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSet* pTouches = ((cocos2d::CCSet*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchesCancelled'", NULL);
#endif
  {
   self->ccTouchesCancelled(pTouches,pEvent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchesCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTouchDelegate__ of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCLayer___CCTouchDelegate__
static int tolua_get_cocos2d__CCLayer___CCTouchDelegate__(lua_State* tolua_S)
{
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTouchDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCTouchDelegate*>(self), "cocos2d::CCTouchDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCTouchDelegate*)self), "cocos2d::CCTouchDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCAccelerometerDelegate__ of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCLayer___CCAccelerometerDelegate__
static int tolua_get_cocos2d__CCLayer___CCAccelerometerDelegate__(lua_State* tolua_S)
{
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCAccelerometerDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCAccelerometerDelegate*>(self), "cocos2d::CCAccelerometerDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCAccelerometerDelegate*)self), "cocos2d::CCAccelerometerDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCKeypadDelegate__ of class  cocos2d::CCLayer */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCLayer___CCKeypadDelegate__
static int tolua_get_cocos2d__CCLayer___CCKeypadDelegate__(lua_State* tolua_S)
{
  cocos2d::CCLayer* self = (cocos2d::CCLayer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCKeypadDelegate__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCKeypadDelegate*>(self), "cocos2d::CCKeypadDelegate");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCKeypadDelegate*)self), "cocos2d::CCKeypadDelegate");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_new00
static int tolua_Cocos2d_cocos2d_CCLayerColor_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLayerColor* tolua_ret = (cocos2d::CCLayerColor*)  Mtolua_new((cocos2d::CCLayerColor)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayerColor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_new00_local
static int tolua_Cocos2d_cocos2d_CCLayerColor_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLayerColor* tolua_ret = (cocos2d::CCLayerColor*)  Mtolua_new((cocos2d::CCLayerColor)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayerColor");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: draw of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_draw00
static int tolua_Cocos2d_cocos2d_CCLayerColor_draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'draw'", NULL);
#endif
  {
   self->draw();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setContentSize of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_setContentSize00
static int tolua_Cocos2d_cocos2d_CCLayerColor_setContentSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCSize",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCSize var = *((cocos2d::CCSize*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setContentSize'", NULL);
#endif
  {
   self->setContentSize(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setContentSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: layerWithColorWidthHeight of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_layerWithColorWidthHeight00
static int tolua_Cocos2d_cocos2d_CCLayerColor_layerWithColorWidthHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccColor4B color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0));
   float width = ((  float)  tolua_tonumber(tolua_S,3,0));
   float height = ((  float)  tolua_tonumber(tolua_S,4,0));
  {
   cocos2d::CCLayerColor* tolua_ret = (cocos2d::CCLayerColor*)  cocos2d::CCLayerColor::layerWithColorWidthHeight(color,width,height);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayerColor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'layerWithColorWidthHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: layerWithColor of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_layerWithColor00
static int tolua_Cocos2d_cocos2d_CCLayerColor_layerWithColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccColor4B color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCLayerColor* tolua_ret = (cocos2d::CCLayerColor*)  cocos2d::CCLayerColor::layerWithColor(color);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayerColor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'layerWithColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithColorWidthHeight of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_initWithColorWidthHeight00
static int tolua_Cocos2d_cocos2d_CCLayerColor_initWithColorWidthHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor4B color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0));
   float width = ((  float)  tolua_tonumber(tolua_S,3,0));
   float height = ((  float)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithColorWidthHeight'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithColorWidthHeight(color,width,height);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithColorWidthHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithColor of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_initWithColor00
static int tolua_Cocos2d_cocos2d_CCLayerColor_initWithColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor4B color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithColor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithColor(color);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeWidth of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_changeWidth00
static int tolua_Cocos2d_cocos2d_CCLayerColor_changeWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
   float w = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeWidth'", NULL);
#endif
  {
   self->changeWidth(w);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeHeight of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_changeHeight00
static int tolua_Cocos2d_cocos2d_CCLayerColor_changeHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
   float h = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeHeight'", NULL);
#endif
  {
   self->changeHeight(h);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: changeWidthAndHeight of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_changeWidthAndHeight00
static int tolua_Cocos2d_cocos2d_CCLayerColor_changeWidthAndHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
   float w = ((  float)  tolua_tonumber(tolua_S,2,0));
   float h = ((  float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'changeWidthAndHeight'", NULL);
#endif
  {
   self->changeWidthAndHeight(w,h);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'changeWidthAndHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_getOpacity00
static int tolua_Cocos2d_cocos2d_CCLayerColor_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = ( unsigned char)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_setOpacity00
static int tolua_Cocos2d_cocos2d_CCLayerColor_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
  unsigned char var = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_setColor00
static int tolua_Cocos2d_cocos2d_CCLayerColor_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B Value = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(Value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_getColor00
static int tolua_Cocos2d_cocos2d_CCLayerColor_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendFunc of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_setBlendFunc00
static int tolua_Cocos2d_cocos2d_CCLayerColor_setBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccBlendFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccBlendFunc Value = *((cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendFunc'", NULL);
#endif
  {
   self->setBlendFunc(Value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlendFunc of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_getBlendFunc00
static int tolua_Cocos2d_cocos2d_CCLayerColor_getBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlendFunc'", NULL);
#endif
  {
   cocos2d::ccBlendFunc tolua_ret = (cocos2d::ccBlendFunc)  self->getBlendFunc();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccBlendFunc)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccBlendFunc));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerColor_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCLayerColor_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerColor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCRGBAProtocol__ of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCLayerColor___CCRGBAProtocol__
static int tolua_get_cocos2d__CCLayerColor___CCRGBAProtocol__(lua_State* tolua_S)
{
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCRGBAProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCRGBAProtocol*>(self), "cocos2d::CCRGBAProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCRGBAProtocol*)self), "cocos2d::CCRGBAProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCBlendProtocol__ of class  cocos2d::CCLayerColor */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCLayerColor___CCBlendProtocol__
static int tolua_get_cocos2d__CCLayerColor___CCBlendProtocol__(lua_State* tolua_S)
{
  cocos2d::CCLayerColor* self = (cocos2d::CCLayerColor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCBlendProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCBlendProtocol*>(self), "cocos2d::CCBlendProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCBlendProtocol*)self), "cocos2d::CCBlendProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: layerWithColor of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_layerWithColor00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_layerWithColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::ccColor4B start = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::ccColor4B end = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCLayerGradient* tolua_ret = (cocos2d::CCLayerGradient*)  cocos2d::CCLayerGradient::layerWithColor(start,end);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayerGradient");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'layerWithColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: layerWithColor of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_layerWithColor01
static int tolua_Cocos2d_cocos2d_CCLayerGradient_layerWithColor01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccColor4B",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::ccColor4B start = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::ccColor4B end = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCPoint v = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,4,0));
  {
   cocos2d::CCLayerGradient* tolua_ret = (cocos2d::CCLayerGradient*)  cocos2d::CCLayerGradient::layerWithColor(start,end,v);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayerGradient");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCLayerGradient_layerWithColor00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithColor of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_initWithColor00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_initWithColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor4B start = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::ccColor4B end = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithColor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithColor(start,end);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithColor of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_initWithColor01
static int tolua_Cocos2d_cocos2d_CCLayerGradient_initWithColor01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor4B",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"cocos2d::ccColor4B",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor4B start = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::ccColor4B end = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCPoint v = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithColor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithColor(start,end,v);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCLayerGradient_initWithColor00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStartColor of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_getStartColor00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_getStartColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStartColor'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getStartColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStartColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStartColor of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_setStartColor00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_setStartColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B colors = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStartColor'", NULL);
#endif
  {
   self->setStartColor(colors);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStartColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEndColor of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_setEndColor00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_setEndColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B Value = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEndColor'", NULL);
#endif
  {
   self->setEndColor(Value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEndColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEndColor of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_getEndColor00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_getEndColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEndColor'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getEndColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEndColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStartOpacity of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_setStartOpacity00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_setStartOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
  unsigned char Value = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStartOpacity'", NULL);
#endif
  {
   self->setStartOpacity(Value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStartOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStartOpacity of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_getStartOpacity00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_getStartOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStartOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = ( unsigned char)  self->getStartOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStartOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEndOpacity of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_setEndOpacity00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_setEndOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
  unsigned char Value = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEndOpacity'", NULL);
#endif
  {
   self->setEndOpacity(Value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEndOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEndOpacity of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_getEndOpacity00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_getEndOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEndOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = ( unsigned char)  self->getEndOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEndOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setVector of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_setVector00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_setVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCPoint Value = *((cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setVector'", NULL);
#endif
  {
   self->setVector(Value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getVector of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_getVector00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_getVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getVector'", NULL);
#endif
  {
   cocos2d::CCPoint tolua_ret = (cocos2d::CCPoint)  self->getVector();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCPoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCPoint));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsCompressedInterpolation of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_setIsCompressedInterpolation00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_setIsCompressedInterpolation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
  bool Value = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsCompressedInterpolation'", NULL);
#endif
  {
   self->setIsCompressedInterpolation(Value);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsCompressedInterpolation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsCompressedInterpolation of class  cocos2d::CCLayerGradient */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerGradient_getIsCompressedInterpolation00
static int tolua_Cocos2d_cocos2d_CCLayerGradient_getIsCompressedInterpolation00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerGradient",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerGradient* self = (cocos2d::CCLayerGradient*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsCompressedInterpolation'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsCompressedInterpolation();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsCompressedInterpolation'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCLayerMultiplex */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerMultiplex_new00
static int tolua_Cocos2d_cocos2d_CCLayerMultiplex_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayerMultiplex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLayerMultiplex* tolua_ret = (cocos2d::CCLayerMultiplex*)  Mtolua_new((cocos2d::CCLayerMultiplex)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayerMultiplex");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCLayerMultiplex */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerMultiplex_new00_local
static int tolua_Cocos2d_cocos2d_CCLayerMultiplex_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayerMultiplex",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLayerMultiplex* tolua_ret = (cocos2d::CCLayerMultiplex*)  Mtolua_new((cocos2d::CCLayerMultiplex)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayerMultiplex");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: layerWithLayer of class  cocos2d::CCLayerMultiplex */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerMultiplex_layerWithLayer00
static int tolua_Cocos2d_cocos2d_CCLayerMultiplex_layerWithLayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCLayerMultiplex",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayer* layer = ((cocos2d::CCLayer*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCLayerMultiplex* tolua_ret = (cocos2d::CCLayerMultiplex*)  cocos2d::CCLayerMultiplex::layerWithLayer(layer);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayerMultiplex");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'layerWithLayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addLayer of class  cocos2d::CCLayerMultiplex */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerMultiplex_addLayer00
static int tolua_Cocos2d_cocos2d_CCLayerMultiplex_addLayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerMultiplex",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerMultiplex* self = (cocos2d::CCLayerMultiplex*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCLayer* layer = ((cocos2d::CCLayer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addLayer'", NULL);
#endif
  {
   self->addLayer(layer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addLayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithLayer of class  cocos2d::CCLayerMultiplex */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerMultiplex_initWithLayer00
static int tolua_Cocos2d_cocos2d_CCLayerMultiplex_initWithLayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerMultiplex",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCLayer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerMultiplex* self = (cocos2d::CCLayerMultiplex*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCLayer* layer = ((cocos2d::CCLayer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithLayer'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithLayer(layer);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithLayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithLayers of class  cocos2d::CCLayerMultiplex */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerMultiplex_initWithLayers00
static int tolua_Cocos2d_cocos2d_CCLayerMultiplex_initWithLayers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerMultiplex",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCLayer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"va_list",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerMultiplex* self = (cocos2d::CCLayerMultiplex*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCLayer* layer = ((cocos2d::CCLayer*)  tolua_tousertype(tolua_S,2,0));
  va_list params = *((va_list*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithLayers'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithLayers(layer,params);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithLayers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: switchTo of class  cocos2d::CCLayerMultiplex */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerMultiplex_switchTo00
static int tolua_Cocos2d_cocos2d_CCLayerMultiplex_switchTo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerMultiplex",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerMultiplex* self = (cocos2d::CCLayerMultiplex*)  tolua_tousertype(tolua_S,1,0);
  unsigned int n = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'switchTo'", NULL);
#endif
  {
   self->switchTo(n);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'switchTo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: switchToAndReleaseMe of class  cocos2d::CCLayerMultiplex */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLayerMultiplex_switchToAndReleaseMe00
static int tolua_Cocos2d_cocos2d_CCLayerMultiplex_switchToAndReleaseMe00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCLayerMultiplex",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCLayerMultiplex* self = (cocos2d::CCLayerMultiplex*)  tolua_tousertype(tolua_S,1,0);
  unsigned int n = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'switchToAndReleaseMe'", NULL);
#endif
  {
   self->switchToAndReleaseMe(n);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'switchToAndReleaseMe'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_new00
static int tolua_Cocos2d_cocos2d_CCMenu_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenu* tolua_ret = (cocos2d::CCMenu*)  Mtolua_new((cocos2d::CCMenu)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenu");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_new00_local
static int tolua_Cocos2d_cocos2d_CCMenu_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenu* tolua_ret = (cocos2d::CCMenu*)  Mtolua_new((cocos2d::CCMenu)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenu");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_delete00
static int tolua_Cocos2d_cocos2d_CCMenu_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: menuWithItem of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_menuWithItem00
static int tolua_Cocos2d_cocos2d_CCMenu_menuWithItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItem* item = ((cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCMenu* tolua_ret = (cocos2d::CCMenu*)  cocos2d::CCMenu::menuWithItem(item);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenu");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'menuWithItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithItems of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_initWithItems00
static int tolua_Cocos2d_cocos2d_CCMenu_initWithItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMenuItem",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"va_list",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMenuItem* item = ((cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,2,0));
  va_list args = *((va_list*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithItems'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithItems(item,args);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: alignItemsVertically of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_alignItemsVertically00
static int tolua_Cocos2d_cocos2d_CCMenu_alignItemsVertically00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'alignItemsVertically'", NULL);
#endif
  {
   self->alignItemsVertically();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'alignItemsVertically'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: alignItemsVerticallyWithPadding of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_alignItemsVerticallyWithPadding00
static int tolua_Cocos2d_cocos2d_CCMenu_alignItemsVerticallyWithPadding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  float padding = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'alignItemsVerticallyWithPadding'", NULL);
#endif
  {
   self->alignItemsVerticallyWithPadding(padding);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'alignItemsVerticallyWithPadding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: alignItemsHorizontally of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_alignItemsHorizontally00
static int tolua_Cocos2d_cocos2d_CCMenu_alignItemsHorizontally00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'alignItemsHorizontally'", NULL);
#endif
  {
   self->alignItemsHorizontally();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'alignItemsHorizontally'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: alignItemsHorizontallyWithPadding of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_alignItemsHorizontallyWithPadding00
static int tolua_Cocos2d_cocos2d_CCMenu_alignItemsHorizontallyWithPadding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  float padding = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'alignItemsHorizontallyWithPadding'", NULL);
#endif
  {
   self->alignItemsHorizontallyWithPadding(padding);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'alignItemsHorizontallyWithPadding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: alignItemsInColumns of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_alignItemsInColumns00
static int tolua_Cocos2d_cocos2d_CCMenu_alignItemsInColumns00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"va_list",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  unsigned int columns = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  va_list args = *((va_list*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'alignItemsInColumns'", NULL);
#endif
  {
   self->alignItemsInColumns(columns,args);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'alignItemsInColumns'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: alignItemsInRows of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_alignItemsInRows00
static int tolua_Cocos2d_cocos2d_CCMenu_alignItemsInRows00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"va_list",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  unsigned int rows = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
  va_list args = *((va_list*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'alignItemsInRows'", NULL);
#endif
  {
   self->alignItemsInRows(rows,args);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'alignItemsInRows'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_addChild00
static int tolua_Cocos2d_cocos2d_CCMenu_addChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addChild of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_addChild01
static int tolua_Cocos2d_cocos2d_CCMenu_addChild01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* child = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  int zOrder = ((int)  tolua_tonumber(tolua_S,3,0));
  int tag = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addChild'", NULL);
#endif
  {
   self->addChild(child,zOrder,tag);
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenu_addChild00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerWithTouchDispatcher of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_registerWithTouchDispatcher00
static int tolua_Cocos2d_cocos2d_CCMenu_registerWithTouchDispatcher00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerWithTouchDispatcher'", NULL);
#endif
  {
   self->registerWithTouchDispatcher();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerWithTouchDispatcher'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_ccTouchBegan00
static int tolua_Cocos2d_cocos2d_CCMenu_ccTouchBegan00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* touch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* event = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(touch,event);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchBegan'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchEnded of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_ccTouchEnded00
static int tolua_Cocos2d_cocos2d_CCMenu_ccTouchEnded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* touch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* event = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchEnded'", NULL);
#endif
  {
   self->ccTouchEnded(touch,event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchEnded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchCancelled of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_ccTouchCancelled00
static int tolua_Cocos2d_cocos2d_CCMenu_ccTouchCancelled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* touch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* event = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchCancelled'", NULL);
#endif
  {
   self->ccTouchCancelled(touch,event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchCancelled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchMoved of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_ccTouchMoved00
static int tolua_Cocos2d_cocos2d_CCMenu_ccTouchMoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* touch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* event = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchMoved'", NULL);
#endif
  {
   self->ccTouchMoved(touch,event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ccTouchMoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroy of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_destroy00
static int tolua_Cocos2d_cocos2d_CCMenu_destroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'destroy'", NULL);
#endif
  {
   self->destroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'destroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: keep of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_keep00
static int tolua_Cocos2d_cocos2d_CCMenu_keep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keep'", NULL);
#endif
  {
   self->keep();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'keep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_onExit00
static int tolua_Cocos2d_cocos2d_CCMenu_onExit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onExit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_setOpacity00
static int tolua_Cocos2d_cocos2d_CCMenu_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_getOpacity00
static int tolua_Cocos2d_cocos2d_CCMenu_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = ( unsigned char)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_getColor00
static int tolua_Cocos2d_cocos2d_CCMenu_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_setColor00
static int tolua_Cocos2d_cocos2d_CCMenu_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B color = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCMenu_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_init00
static int tolua_Cocos2d_cocos2d_CCMenu_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_node00
static int tolua_Cocos2d_cocos2d_CCMenu_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCLayer* tolua_ret = (cocos2d::CCLayer*)  cocos2d::CCMenu::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCLayer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnter of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_onEnter00
static int tolua_Cocos2d_cocos2d_CCMenu_onEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnter'", NULL);
#endif
  {
   self->onEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: onExit of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_onExit01
static int tolua_Cocos2d_cocos2d_CCMenu_onExit01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onExit'", NULL);
#endif
  {
   self->onExit();
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenu_onExit00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: onEnterTransitionDidFinish of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_onEnterTransitionDidFinish00
static int tolua_Cocos2d_cocos2d_CCMenu_onEnterTransitionDidFinish00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'onEnterTransitionDidFinish'", NULL);
#endif
  {
   self->onEnterTransitionDidFinish();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'onEnterTransitionDidFinish'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ccTouchBegan of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_ccTouchBegan01
static int tolua_Cocos2d_cocos2d_CCMenu_ccTouchBegan01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTouch",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCEvent",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTouch* pTouch = ((cocos2d::CCTouch*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCEvent* pEvent = ((cocos2d::CCEvent*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ccTouchBegan'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->ccTouchBegan(pTouch,pEvent);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenu_ccTouchBegan00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: destroy of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_destroy01
static int tolua_Cocos2d_cocos2d_CCMenu_destroy01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'destroy'", NULL);
#endif
  {
   self->destroy();
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenu_destroy00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: keep of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_keep01
static int tolua_Cocos2d_cocos2d_CCMenu_keep01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'keep'", NULL);
#endif
  {
   self->keep();
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenu_keep00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: didAccelerate of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_didAccelerate00
static int tolua_Cocos2d_cocos2d_CCMenu_didAccelerate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCAcceleration",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCAcceleration* pAccelerationValue = ((cocos2d::CCAcceleration*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'didAccelerate'", NULL);
#endif
  {
   self->didAccelerate(pAccelerationValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'didAccelerate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: KeypadDestroy of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_KeypadDestroy00
static int tolua_Cocos2d_cocos2d_CCMenu_KeypadDestroy00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'KeypadDestroy'", NULL);
#endif
  {
   self->KeypadDestroy();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'KeypadDestroy'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: KeypadKeep of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_KeypadKeep00
static int tolua_Cocos2d_cocos2d_CCMenu_KeypadKeep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'KeypadKeep'", NULL);
#endif
  {
   self->KeypadKeep();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'KeypadKeep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerWithTouchDispatcher of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_registerWithTouchDispatcher01
static int tolua_Cocos2d_cocos2d_CCMenu_registerWithTouchDispatcher01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerWithTouchDispatcher'", NULL);
#endif
  {
   self->registerWithTouchDispatcher();
  }
 }
 return 0;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenu_registerWithTouchDispatcher00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsTouchEnabled of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_setIsTouchEnabled00
static int tolua_Cocos2d_cocos2d_CCMenu_setIsTouchEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsTouchEnabled'", NULL);
#endif
  {
   self->setIsTouchEnabled(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsTouchEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsTouchEnabled of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_getIsTouchEnabled00
static int tolua_Cocos2d_cocos2d_CCMenu_getIsTouchEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsTouchEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsTouchEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsTouchEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsAccelerometerEnabled of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_setIsAccelerometerEnabled00
static int tolua_Cocos2d_cocos2d_CCMenu_setIsAccelerometerEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsAccelerometerEnabled'", NULL);
#endif
  {
   self->setIsAccelerometerEnabled(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsAccelerometerEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsAccelerometerEnabled of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_getIsAccelerometerEnabled00
static int tolua_Cocos2d_cocos2d_CCMenu_getIsAccelerometerEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsAccelerometerEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsAccelerometerEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsAccelerometerEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsKeypadEnabled of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_setIsKeypadEnabled00
static int tolua_Cocos2d_cocos2d_CCMenu_setIsKeypadEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
  bool bValue = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsKeypadEnabled'", NULL);
#endif
  {
   self->setIsKeypadEnabled(bValue);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsKeypadEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getIsKeypadEnabled of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenu_getIsKeypadEnabled00
static int tolua_Cocos2d_cocos2d_CCMenu_getIsKeypadEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenu",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getIsKeypadEnabled'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->getIsKeypadEnabled();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getIsKeypadEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCRGBAProtocol__ of class  cocos2d::CCMenu */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCMenu___CCRGBAProtocol__
static int tolua_get_cocos2d__CCMenu___CCRGBAProtocol__(lua_State* tolua_S)
{
  cocos2d::CCMenu* self = (cocos2d::CCMenu*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCRGBAProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCRGBAProtocol*>(self), "cocos2d::CCRGBAProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCRGBAProtocol*)self), "cocos2d::CCRGBAProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMenuItem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItem_new00
static int tolua_Cocos2d_cocos2d_CCMenuItem_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItem* tolua_ret = (cocos2d::CCMenuItem*)  Mtolua_new((cocos2d::CCMenuItem)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMenuItem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItem_new00_local
static int tolua_Cocos2d_cocos2d_CCMenuItem_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItem* tolua_ret = (cocos2d::CCMenuItem*)  Mtolua_new((cocos2d::CCMenuItem)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItem");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemWithTarget of class  cocos2d::CCMenuItem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItem_itemWithTarget00
static int tolua_Cocos2d_cocos2d_CCMenuItem_itemWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::SelectorProtocol* rec = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCMenuItem* tolua_ret = (cocos2d::CCMenuItem*)  cocos2d::CCMenuItem::itemWithTarget(rec,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'itemWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTarget of class  cocos2d::CCMenuItem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItem_initWithTarget00
static int tolua_Cocos2d_cocos2d_CCMenuItem_initWithTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItem* self = (cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::SelectorProtocol* rec = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,2,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTarget(rec,selector);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: rect of class  cocos2d::CCMenuItem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItem_rect00
static int tolua_Cocos2d_cocos2d_CCMenuItem_rect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItem* self = (cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'rect'", NULL);
#endif
  {
   cocos2d::CCRect tolua_ret = (cocos2d::CCRect)  self->rect();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::CCRect)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::CCRect));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::CCRect");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'rect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: activate of class  cocos2d::CCMenuItem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItem_activate00
static int tolua_Cocos2d_cocos2d_CCMenuItem_activate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItem* self = (cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'activate'", NULL);
#endif
  {
   self->activate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'activate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selected of class  cocos2d::CCMenuItem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItem_selected00
static int tolua_Cocos2d_cocos2d_CCMenuItem_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItem* self = (cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selected'", NULL);
#endif
  {
   self->selected();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unselected of class  cocos2d::CCMenuItem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItem_unselected00
static int tolua_Cocos2d_cocos2d_CCMenuItem_unselected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItem* self = (cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unselected'", NULL);
#endif
  {
   self->unselected();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unselected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: registerScriptHandler of class  cocos2d::CCMenuItem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItem_registerScriptHandler00
static int tolua_Cocos2d_cocos2d_CCMenuItem_registerScriptHandler00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItem* self = (cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,1,0);
  const char* pszFunctionName = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'registerScriptHandler'", NULL);
#endif
  {
   self->registerScriptHandler(pszFunctionName);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'registerScriptHandler'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_new00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemLabel* tolua_ret = (cocos2d::CCMenuItemLabel*)  Mtolua_new((cocos2d::CCMenuItemLabel)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemLabel");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_new00_local
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemLabel* tolua_ret = (cocos2d::CCMenuItemLabel*)  Mtolua_new((cocos2d::CCMenuItemLabel)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemLabel");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemWithLabel of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_itemWithLabel00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_itemWithLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* label = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,3,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,4,0));
  {
   cocos2d::CCMenuItemLabel* tolua_ret = (cocos2d::CCMenuItemLabel*)  cocos2d::CCMenuItemLabel::itemWithLabel(label,target,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemLabel");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'itemWithLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemWithLabel of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_itemWithLabel01
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_itemWithLabel01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCNode* label = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCMenuItemLabel* tolua_ret = (cocos2d::CCMenuItemLabel*)  cocos2d::CCMenuItemLabel::itemWithLabel(label);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemLabel");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenuItemLabel_itemWithLabel00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithLabel of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_initWithLabel00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_initWithLabel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* label = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,3,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithLabel'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithLabel(label,target,selector);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithLabel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setString of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_setString00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_setString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
  const char* label = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setString'", NULL);
#endif
  {
   self->setString(label);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: activate of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_activate00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_activate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'activate'", NULL);
#endif
  {
   self->activate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'activate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selected of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_selected00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selected'", NULL);
#endif
  {
   self->selected();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unselected of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_unselected00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_unselected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unselected'", NULL);
#endif
  {
   self->unselected();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unselected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsEnabled of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_setIsEnabled00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_setIsEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
  bool enabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsEnabled'", NULL);
#endif
  {
   self->setIsEnabled(enabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_setOpacity00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_getOpacity00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = ( unsigned char)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_setColor00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B color = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_getColor00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemLabel_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCMenuItemLabel_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemLabel",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCRGBAProtocol__ of class  cocos2d::CCMenuItemLabel */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCMenuItemLabel___CCRGBAProtocol__
static int tolua_get_cocos2d__CCMenuItemLabel___CCRGBAProtocol__(lua_State* tolua_S)
{
  cocos2d::CCMenuItemLabel* self = (cocos2d::CCMenuItemLabel*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCRGBAProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCRGBAProtocol*>(self), "cocos2d::CCRGBAProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCRGBAProtocol*)self), "cocos2d::CCRGBAProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMenuItemAtlasFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_new00
static int tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemAtlasFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemAtlasFont* tolua_ret = (cocos2d::CCMenuItemAtlasFont*)  Mtolua_new((cocos2d::CCMenuItemAtlasFont)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemAtlasFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMenuItemAtlasFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_new00_local
static int tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemAtlasFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemAtlasFont* tolua_ret = (cocos2d::CCMenuItemAtlasFont*)  Mtolua_new((cocos2d::CCMenuItemAtlasFont)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemAtlasFont");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromString of class  cocos2d::CCMenuItemAtlasFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_itemFromString00
static int tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_itemFromString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemAtlasFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* charMapFile = ((const char*)  tolua_tostring(tolua_S,3,0));
  int itemWidth = ((int)  tolua_tonumber(tolua_S,4,0));
  int itemHeight = ((int)  tolua_tonumber(tolua_S,5,0));
  char startCharMap = ((char)  tolua_tonumber(tolua_S,6,0));
  {
   cocos2d::CCMenuItemAtlasFont* tolua_ret = (cocos2d::CCMenuItemAtlasFont*)  cocos2d::CCMenuItemAtlasFont::itemFromString(value,charMapFile,itemWidth,itemHeight,startCharMap);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemAtlasFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'itemFromString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromString of class  cocos2d::CCMenuItemAtlasFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_itemFromString01
static int tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_itemFromString01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemAtlasFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,8,&tolua_err) || !tolua_isusertype(tolua_S,8,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* charMapFile = ((const char*)  tolua_tostring(tolua_S,3,0));
  int itemWidth = ((int)  tolua_tonumber(tolua_S,4,0));
  int itemHeight = ((int)  tolua_tonumber(tolua_S,5,0));
  char startCharMap = ((char)  tolua_tonumber(tolua_S,6,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,7,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,8,0));
  {
   cocos2d::CCMenuItemAtlasFont* tolua_ret = (cocos2d::CCMenuItemAtlasFont*)  cocos2d::CCMenuItemAtlasFont::itemFromString(value,charMapFile,itemWidth,itemHeight,startCharMap,target,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemAtlasFont");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_itemFromString00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initFromString of class  cocos2d::CCMenuItemAtlasFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_initFromString00
static int tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_initFromString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemAtlasFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,7,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,8,&tolua_err) || !tolua_isusertype(tolua_S,8,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,9,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemAtlasFont* self = (cocos2d::CCMenuItemAtlasFont*)  tolua_tousertype(tolua_S,1,0);
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* charMapFile = ((const char*)  tolua_tostring(tolua_S,3,0));
  int itemWidth = ((int)  tolua_tonumber(tolua_S,4,0));
  int itemHeight = ((int)  tolua_tonumber(tolua_S,5,0));
  char startCharMap = ((char)  tolua_tonumber(tolua_S,6,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,7,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,8,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initFromString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initFromString(value,charMapFile,itemWidth,itemHeight,startCharMap,target,selector);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initFromString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMenuItemFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemFont_new00
static int tolua_Cocos2d_cocos2d_CCMenuItemFont_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemFont* tolua_ret = (cocos2d::CCMenuItemFont*)  Mtolua_new((cocos2d::CCMenuItemFont)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMenuItemFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemFont_new00_local
static int tolua_Cocos2d_cocos2d_CCMenuItemFont_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemFont* tolua_ret = (cocos2d::CCMenuItemFont*)  Mtolua_new((cocos2d::CCMenuItemFont)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemFont");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFontSize of class  cocos2d::CCMenuItemFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemFont_setFontSize00
static int tolua_Cocos2d_cocos2d_CCMenuItemFont_setFontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemFont",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int s = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   cocos2d::CCMenuItemFont::setFontSize(s);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fontSize of class  cocos2d::CCMenuItemFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemFont_fontSize00
static int tolua_Cocos2d_cocos2d_CCMenuItemFont_fontSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  cocos2d::CCMenuItemFont::fontSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fontSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setFontName of class  cocos2d::CCMenuItemFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemFont_setFontName00
static int tolua_Cocos2d_cocos2d_CCMenuItemFont_setFontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* name = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCMenuItemFont::setFontName(name);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setFontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fontName of class  cocos2d::CCMenuItemFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemFont_fontName00
static int tolua_Cocos2d_cocos2d_CCMenuItemFont_fontName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemFont",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   const char* tolua_ret = (const char*)  cocos2d::CCMenuItemFont::fontName();
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fontName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromString of class  cocos2d::CCMenuItemFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemFont_itemFromString00
static int tolua_Cocos2d_cocos2d_CCMenuItemFont_itemFromString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCMenuItemFont* tolua_ret = (cocos2d::CCMenuItemFont*)  cocos2d::CCMenuItemFont::itemFromString(value);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemFont");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'itemFromString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromString of class  cocos2d::CCMenuItemFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemFont_itemFromString01
static int tolua_Cocos2d_cocos2d_CCMenuItemFont_itemFromString01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,3,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,4,0));
  {
   cocos2d::CCMenuItemFont* tolua_ret = (cocos2d::CCMenuItemFont*)  cocos2d::CCMenuItemFont::itemFromString(value,target,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemFont");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenuItemFont_itemFromString00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initFromString of class  cocos2d::CCMenuItemFont */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemFont_initFromString00
static int tolua_Cocos2d_cocos2d_CCMenuItemFont_initFromString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemFont",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemFont* self = (cocos2d::CCMenuItemFont*)  tolua_tousertype(tolua_S,1,0);
  const char* value = ((const char*)  tolua_tostring(tolua_S,2,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,3,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initFromString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initFromString(value,target,selector);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initFromString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_new00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemSprite* tolua_ret = (cocos2d::CCMenuItemSprite*)  Mtolua_new((cocos2d::CCMenuItemSprite)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_new00_local
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemSprite* tolua_ret = (cocos2d::CCMenuItemSprite*)  Mtolua_new((cocos2d::CCMenuItemSprite)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemSprite");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromNormalSprite of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCNode* normalSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCNode* selectedSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,3,0));
  {
   cocos2d::CCMenuItemSprite* tolua_ret = (cocos2d::CCMenuItemSprite*)  cocos2d::CCMenuItemSprite::itemFromNormalSprite(normalSprite,selectedSprite);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemSprite");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'itemFromNormalSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromNormalSprite of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite01
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCNode* normalSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCNode* selectedSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,4,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,5,0));
  {
   cocos2d::CCMenuItemSprite* tolua_ret = (cocos2d::CCMenuItemSprite*)  cocos2d::CCMenuItemSprite::itemFromNormalSprite(normalSprite,selectedSprite,target,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemSprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromNormalSprite of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite02
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  cocos2d::CCNode* normalSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCNode* selectedSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCNode* disabledSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,4,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,5,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,6,0));
  {
   cocos2d::CCMenuItemSprite* tolua_ret = (cocos2d::CCMenuItemSprite*)  cocos2d::CCMenuItemSprite::itemFromNormalSprite(normalSprite,selectedSprite,disabledSprite,target,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemSprite");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initFromNormalSprite of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_initFromNormalSprite00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_initFromNormalSprite00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"cocos2d::CCNode",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCNode* normalSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,2,0));
  cocos2d::CCNode* selectedSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,3,0));
  cocos2d::CCNode* disabledSprite = ((cocos2d::CCNode*)  tolua_tousertype(tolua_S,4,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,5,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initFromNormalSprite'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initFromNormalSprite(normalSprite,selectedSprite,disabledSprite,target,selector);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initFromNormalSprite'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_setColor00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B color = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_getColor00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_setOpacity00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_getOpacity00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = ( unsigned char)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selected of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_selected00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selected'", NULL);
#endif
  {
   self->selected();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unselected of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_unselected00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_unselected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unselected'", NULL);
#endif
  {
   self->unselected();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unselected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsEnabled of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_setIsEnabled00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_setIsEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
  bool bEnabled = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsEnabled'", NULL);
#endif
  {
   self->setIsEnabled(bEnabled);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemSprite_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCMenuItemSprite_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemSprite",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCRGBAProtocol__ of class  cocos2d::CCMenuItemSprite */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCMenuItemSprite___CCRGBAProtocol__
static int tolua_get_cocos2d__CCMenuItemSprite___CCRGBAProtocol__(lua_State* tolua_S)
{
  cocos2d::CCMenuItemSprite* self = (cocos2d::CCMenuItemSprite*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCRGBAProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCRGBAProtocol*>(self), "cocos2d::CCRGBAProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCRGBAProtocol*)self), "cocos2d::CCRGBAProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_new00
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemImage* tolua_ret = (cocos2d::CCMenuItemImage*)  Mtolua_new((cocos2d::CCMenuItemImage)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemImage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_new00_local
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemImage* tolua_ret = (cocos2d::CCMenuItemImage*)  Mtolua_new((cocos2d::CCMenuItemImage)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemImage");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromNormalImage of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage00
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* normalImage = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* selectedImage = ((const char*)  tolua_tostring(tolua_S,3,0));
  {
   cocos2d::CCMenuItemImage* tolua_ret = (cocos2d::CCMenuItemImage*)  cocos2d::CCMenuItemImage::itemFromNormalImage(normalImage,selectedImage);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemImage");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'itemFromNormalImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromNormalImage of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage01
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* normalImage = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* selectedImage = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* disabledImage = ((const char*)  tolua_tostring(tolua_S,4,0));
  {
   cocos2d::CCMenuItemImage* tolua_ret = (cocos2d::CCMenuItemImage*)  cocos2d::CCMenuItemImage::itemFromNormalImage(normalImage,selectedImage,disabledImage);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemImage");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromNormalImage of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage02
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* normalImage = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* selectedImage = ((const char*)  tolua_tostring(tolua_S,3,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,4,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,5,0));
  {
   cocos2d::CCMenuItemImage* tolua_ret = (cocos2d::CCMenuItemImage*)  cocos2d::CCMenuItemImage::itemFromNormalImage(normalImage,selectedImage,target,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemImage");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemFromNormalImage of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage03
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const char* normalImage = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* selectedImage = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* disabledImage = ((const char*)  tolua_tostring(tolua_S,4,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,5,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,6,0));
  {
   cocos2d::CCMenuItemImage* tolua_ret = (cocos2d::CCMenuItemImage*)  cocos2d::CCMenuItemImage::itemFromNormalImage(normalImage,selectedImage,disabledImage,target,selector);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemImage");
  }
 }
 return 1;
tolua_lerror:
 return tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: initFromNormalImage of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_initFromNormalImage00
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_initFromNormalImage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"cocos2d::SelectorProtocol",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"SEL_MenuHandler",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemImage* self = (cocos2d::CCMenuItemImage*)  tolua_tousertype(tolua_S,1,0);
  const char* normalImage = ((const char*)  tolua_tostring(tolua_S,2,0));
  const char* selectedImage = ((const char*)  tolua_tostring(tolua_S,3,0));
  const char* disabledImage = ((const char*)  tolua_tostring(tolua_S,4,0));
  cocos2d::SelectorProtocol* target = ((cocos2d::SelectorProtocol*)  tolua_tousertype(tolua_S,5,0));
  SEL_MenuHandler selector = *((SEL_MenuHandler*)  tolua_tousertype(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initFromNormalImage'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initFromNormalImage(normalImage,selectedImage,disabledImage,target,selector);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initFromNormalImage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setColor of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_setColor00
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_setColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccColor3B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemImage* self = (cocos2d::CCMenuItemImage*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccColor3B color = *((cocos2d::ccColor3B*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setColor'", NULL);
#endif
  {
   self->setColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getColor of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_getColor00
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_getColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemImage* self = (cocos2d::CCMenuItemImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getColor'", NULL);
#endif
  {
   cocos2d::ccColor3B tolua_ret = (cocos2d::ccColor3B)  self->getColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccColor3B)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccColor3B));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccColor3B");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setOpacity of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_setOpacity00
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_setOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemImage* self = (cocos2d::CCMenuItemImage*)  tolua_tousertype(tolua_S,1,0);
  unsigned char opacity = (( unsigned char)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setOpacity'", NULL);
#endif
  {
   self->setOpacity(opacity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getOpacity of class  cocos2d::CCMenuItemImage */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemImage_getOpacity00
static int tolua_Cocos2d_cocos2d_CCMenuItemImage_getOpacity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemImage",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemImage* self = (cocos2d::CCMenuItemImage*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getOpacity'", NULL);
#endif
  {
   unsigned char tolua_ret = ( unsigned char)  self->getOpacity();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getOpacity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_new00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemToggle* tolua_ret = (cocos2d::CCMenuItemToggle*)  Mtolua_new((cocos2d::CCMenuItemToggle)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemToggle");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_new00_local
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMenuItemToggle* tolua_ret = (cocos2d::CCMenuItemToggle*)  Mtolua_new((cocos2d::CCMenuItemToggle)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemToggle");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: itemWithItem of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_itemWithItem00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_itemWithItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItem* item = ((cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,2,0));
  {
   cocos2d::CCMenuItemToggle* tolua_ret = (cocos2d::CCMenuItemToggle*)  cocos2d::CCMenuItemToggle::itemWithItem(item);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItemToggle");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'itemWithItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithItem of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_initWithItem00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_initWithItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMenuItem* item = ((cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithItem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithItem(item);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addSubItem of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_addSubItem00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_addSubItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCMenuItem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCMenuItem* item = ((cocos2d::CCMenuItem*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addSubItem'", NULL);
#endif
  {
   self->addSubItem(item);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addSubItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selectedItem of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_selectedItem00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_selectedItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selectedItem'", NULL);
#endif
  {
   cocos2d::CCMenuItem* tolua_ret = (cocos2d::CCMenuItem*)  self->selectedItem();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMenuItem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selectedItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: activate of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_activate00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_activate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'activate'", NULL);
#endif
  {
   self->activate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'activate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: selected of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_selected00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_selected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'selected'", NULL);
#endif
  {
   self->selected();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'selected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: unselected of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_unselected00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_unselected00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'unselected'", NULL);
#endif
  {
   self->unselected();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'unselected'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setIsEnabled of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_setIsEnabled00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_setIsEnabled00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*)  tolua_tousertype(tolua_S,1,0);
  bool var = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setIsEnabled'", NULL);
#endif
  {
   self->setIsEnabled(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setIsEnabled'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: convertToRGBAProtocol of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMenuItemToggle_convertToRGBAProtocol00
static int tolua_Cocos2d_cocos2d_CCMenuItemToggle_convertToRGBAProtocol00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMenuItemToggle",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'convertToRGBAProtocol'", NULL);
#endif
  {
   cocos2d::CCRGBAProtocol* tolua_ret = (cocos2d::CCRGBAProtocol*)  self->convertToRGBAProtocol();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRGBAProtocol");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'convertToRGBAProtocol'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCRGBAProtocol__ of class  cocos2d::CCMenuItemToggle */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCMenuItemToggle___CCRGBAProtocol__
static int tolua_get_cocos2d__CCMenuItemToggle___CCRGBAProtocol__(lua_State* tolua_S)
{
  cocos2d::CCMenuItemToggle* self = (cocos2d::CCMenuItemToggle*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCRGBAProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCRGBAProtocol*>(self), "cocos2d::CCRGBAProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCRGBAProtocol*)self), "cocos2d::CCRGBAProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRibbon of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_getRibbon00
static int tolua_Cocos2d_cocos2d_CCMotionStreak_getRibbon00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMotionStreak* self = (cocos2d::CCMotionStreak*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRibbon'", NULL);
#endif
  {
   cocos2d::CCRibbon* tolua_ret = (cocos2d::CCRibbon*)  self->getRibbon();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCRibbon");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRibbon'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_getTexture00
static int tolua_Cocos2d_cocos2d_CCMotionStreak_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMotionStreak* self = (cocos2d::CCMotionStreak*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_setTexture00
static int tolua_Cocos2d_cocos2d_CCMotionStreak_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMotionStreak* self = (cocos2d::CCMotionStreak*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* var = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlendFunc of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_getBlendFunc00
static int tolua_Cocos2d_cocos2d_CCMotionStreak_getBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMotionStreak* self = (cocos2d::CCMotionStreak*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlendFunc'", NULL);
#endif
  {
   cocos2d::ccBlendFunc tolua_ret = (cocos2d::ccBlendFunc)  self->getBlendFunc();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccBlendFunc)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccBlendFunc));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendFunc of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_setBlendFunc00
static int tolua_Cocos2d_cocos2d_CCMotionStreak_setBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccBlendFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMotionStreak* self = (cocos2d::CCMotionStreak*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccBlendFunc var = *((cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendFunc'", NULL);
#endif
  {
   self->setBlendFunc(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_new00
static int tolua_Cocos2d_cocos2d_CCMotionStreak_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMotionStreak* tolua_ret = (cocos2d::CCMotionStreak*)  Mtolua_new((cocos2d::CCMotionStreak)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMotionStreak");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_new00_local
static int tolua_Cocos2d_cocos2d_CCMotionStreak_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCMotionStreak* tolua_ret = (cocos2d::CCMotionStreak*)  Mtolua_new((cocos2d::CCMotionStreak)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMotionStreak");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: streakWithFade of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_streakWithFade00
static int tolua_Cocos2d_cocos2d_CCMotionStreak_streakWithFade00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,7,&tolua_err) || !tolua_isusertype(tolua_S,7,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  float fade = ((float)  tolua_tonumber(tolua_S,2,0));
  float seg = ((float)  tolua_tonumber(tolua_S,3,0));
  const char* imagePath = ((const char*)  tolua_tostring(tolua_S,4,0));
  float width = ((float)  tolua_tonumber(tolua_S,5,0));
  float length = ((float)  tolua_tonumber(tolua_S,6,0));
  cocos2d::ccColor4B color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,7,0));
  {
   cocos2d::CCMotionStreak* tolua_ret = (cocos2d::CCMotionStreak*)  cocos2d::CCMotionStreak::streakWithFade(fade,seg,imagePath,width,length,color);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCMotionStreak");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'streakWithFade'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFade of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_initWithFade00
static int tolua_Cocos2d_cocos2d_CCMotionStreak_initWithFade00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,7,&tolua_err) || !tolua_isusertype(tolua_S,7,"cocos2d::ccColor4B",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMotionStreak* self = (cocos2d::CCMotionStreak*)  tolua_tousertype(tolua_S,1,0);
  float fade = ((float)  tolua_tonumber(tolua_S,2,0));
  float seg = ((float)  tolua_tonumber(tolua_S,3,0));
  const char* imagePath = ((const char*)  tolua_tostring(tolua_S,4,0));
  float width = ((float)  tolua_tonumber(tolua_S,5,0));
  float length = ((float)  tolua_tonumber(tolua_S,6,0));
  cocos2d::ccColor4B color = *((cocos2d::ccColor4B*)  tolua_tousertype(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFade'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFade(fade,seg,imagePath,width,length,color);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFade'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMotionStreak_update00
static int tolua_Cocos2d_cocos2d_CCMotionStreak_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCMotionStreak",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCMotionStreak* self = (cocos2d::CCMotionStreak*)  tolua_tousertype(tolua_S,1,0);
   float delta = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(delta);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTextureProtocol__ of class  cocos2d::CCMotionStreak */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCMotionStreak___CCTextureProtocol__
static int tolua_get_cocos2d__CCMotionStreak___CCTextureProtocol__(lua_State* tolua_S)
{
  cocos2d::CCMotionStreak* self = (cocos2d::CCMotionStreak*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTextureProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCTextureProtocol*>(self), "cocos2d::CCTextureProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCTextureProtocol*)self), "cocos2d::CCTextureProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::CCLuaLog */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCLuaLog00
static int tolua_Cocos2d_cocos2d_CCLuaLog00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszFormat = ((const char*)  tolua_tostring(tolua_S,1,0));
  {
   cocos2d::CCLuaLog(pszFormat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCLuaLog'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: cocos2d::CCMessageBox */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCMessageBox00
static int tolua_Cocos2d_cocos2d_CCMessageBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isstring(tolua_S,1,0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszMsg = ((const char*)  tolua_tostring(tolua_S,1,0));
  const char* pszTitle = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCMessageBox(pszMsg,pszTitle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CCMessageBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: fullPathFromRelativePath of class  cocos2d::CCFileUtils */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCFileUtils_fullPathFromRelativePath00
static int tolua_Cocos2d_cocos2d_CCFileUtils_fullPathFromRelativePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCFileUtils",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* pszRelativePath = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   const char* tolua_ret = (const char*)  cocos2d::CCFileUtils::fullPathFromRelativePath(pszRelativePath);
   tolua_pushstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'fullPathFromRelativePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_new00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSystem* tolua_ret = (cocos2d::CCParticleSystem*)  Mtolua_new((cocos2d::CCParticleSystem)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSystem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleSystem_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSystem* tolua_ret = (cocos2d::CCParticleSystem*)  Mtolua_new((cocos2d::CCParticleSystem)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSystem");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: particleWithFile of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_particleWithFile00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_particleWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* plistFile = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCParticleSystem* tolua_ret = (cocos2d::CCParticleSystem*)  cocos2d::CCParticleSystem::particleWithFile(plistFile);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSystem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'particleWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithFile of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_initWithFile00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_initWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  const char* plistFile = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithFile(plistFile);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithDictionary of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_initWithDictionary00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_initWithDictionary00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CCDictionary<std::string,cocos2d::CCObject*>",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  CCDictionary<std::string,cocos2d::CCObject*>* dictionary = ((CCDictionary<std::string,cocos2d::CCObject*>*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithDictionary'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithDictionary(dictionary);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithDictionary'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getGravity of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getGravity00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getGravity'", NULL);
#endif
  {
   const cocos2d::CCPoint& tolua_ret = (const cocos2d::CCPoint&)  self->getGravity();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const cocos2d::CCPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setGravity of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setGravity00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setGravity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  const cocos2d::CCPoint* g = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setGravity'", NULL);
#endif
  {
   self->setGravity(*g);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setGravity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpeed of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getSpeed00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpeed of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setSpeed00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpeed'", NULL);
#endif
  {
   self->setSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getSpeedVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getSpeedVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getSpeedVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getSpeedVar'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getSpeedVar();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getSpeedVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setSpeedVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setSpeedVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setSpeedVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setSpeedVar'", NULL);
#endif
  {
   self->setSpeedVar(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setSpeedVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTangentialAccel of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getTangentialAccel00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getTangentialAccel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTangentialAccel'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTangentialAccel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTangentialAccel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTangentialAccel of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setTangentialAccel00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setTangentialAccel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float t = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTangentialAccel'", NULL);
#endif
  {
   self->setTangentialAccel(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTangentialAccel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTangentialAccelVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getTangentialAccelVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getTangentialAccelVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTangentialAccelVar'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getTangentialAccelVar();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTangentialAccelVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTangentialAccelVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setTangentialAccelVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setTangentialAccelVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float t = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTangentialAccelVar'", NULL);
#endif
  {
   self->setTangentialAccelVar(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTangentialAccelVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRadialAccel of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getRadialAccel00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getRadialAccel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRadialAccel'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRadialAccel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRadialAccel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRadialAccel of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setRadialAccel00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setRadialAccel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float t = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRadialAccel'", NULL);
#endif
  {
   self->setRadialAccel(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRadialAccel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRadialAccelVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getRadialAccelVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getRadialAccelVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRadialAccelVar'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRadialAccelVar();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRadialAccelVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRadialAccelVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setRadialAccelVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setRadialAccelVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float t = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRadialAccelVar'", NULL);
#endif
  {
   self->setRadialAccelVar(t);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRadialAccelVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStartRadius of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getStartRadius00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getStartRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStartRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getStartRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStartRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStartRadius of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setStartRadius00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setStartRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float startRadius = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStartRadius'", NULL);
#endif
  {
   self->setStartRadius(startRadius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStartRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getStartRadiusVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getStartRadiusVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getStartRadiusVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getStartRadiusVar'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getStartRadiusVar();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getStartRadiusVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setStartRadiusVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setStartRadiusVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setStartRadiusVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float startRadiusVar = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setStartRadiusVar'", NULL);
#endif
  {
   self->setStartRadiusVar(startRadiusVar);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setStartRadiusVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEndRadius of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getEndRadius00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getEndRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEndRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getEndRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEndRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEndRadius of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setEndRadius00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setEndRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float endRadius = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEndRadius'", NULL);
#endif
  {
   self->setEndRadius(endRadius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEndRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getEndRadiusVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getEndRadiusVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getEndRadiusVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getEndRadiusVar'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getEndRadiusVar();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getEndRadiusVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setEndRadiusVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setEndRadiusVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setEndRadiusVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float endRadiusVar = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setEndRadiusVar'", NULL);
#endif
  {
   self->setEndRadiusVar(endRadiusVar);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setEndRadiusVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotatePerSecond of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getRotatePerSecond00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getRotatePerSecond00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotatePerSecond'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRotatePerSecond();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotatePerSecond'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotatePerSecond of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setRotatePerSecond00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setRotatePerSecond00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float degrees = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotatePerSecond'", NULL);
#endif
  {
   self->setRotatePerSecond(degrees);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotatePerSecond'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getRotatePerSecondVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getRotatePerSecondVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getRotatePerSecondVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getRotatePerSecondVar'", NULL);
#endif
  {
   float tolua_ret = (float)  self->getRotatePerSecondVar();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getRotatePerSecondVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setRotatePerSecondVar of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setRotatePerSecondVar00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setRotatePerSecondVar00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  float degrees = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setRotatePerSecondVar'", NULL);
#endif
  {
   self->setRotatePerSecondVar(degrees);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setRotatePerSecondVar'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: addParticle of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_addParticle00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_addParticle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'addParticle'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->addParticle();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'addParticle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initParticle of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_initParticle00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_initParticle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tCCParticle",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  tCCParticle* particle = ((tCCParticle*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initParticle'", NULL);
#endif
  {
   self->initParticle(particle);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initParticle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: stopSystem of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_stopSystem00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_stopSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'stopSystem'", NULL);
#endif
  {
   self->stopSystem();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'stopSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: resetSystem of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_resetSystem00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_resetSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'resetSystem'", NULL);
#endif
  {
   self->resetSystem();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'resetSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: isFull of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_isFull00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_isFull00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'isFull'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->isFull();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'isFull'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: updateQuadWithParticle of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_updateQuadWithParticle00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_updateQuadWithParticle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"tCCParticle",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const cocos2d::CCPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  tCCParticle* particle = ((tCCParticle*)  tolua_tousertype(tolua_S,2,0));
  const cocos2d::CCPoint* newPosition = ((const cocos2d::CCPoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'updateQuadWithParticle'", NULL);
#endif
  {
   self->updateQuadWithParticle(particle,*newPosition);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'updateQuadWithParticle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: postStep of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_postStep00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_postStep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'postStep'", NULL);
#endif
  {
   self->postStep();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'postStep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: update of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_update00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
   float dt = ((  float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'update'", NULL);
#endif
  {
   self->update(dt);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getTexture of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getTexture00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getTexture'", NULL);
#endif
  {
   cocos2d::CCTexture2D* tolua_ret = (cocos2d::CCTexture2D*)  self->getTexture();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCTexture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setTexture of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setTexture00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setTexture00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"cocos2d::CCTexture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::CCTexture2D* var = ((cocos2d::CCTexture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setTexture'", NULL);
#endif
  {
   self->setTexture(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setTexture'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: getBlendFunc of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_getBlendFunc00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_getBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'getBlendFunc'", NULL);
#endif
  {
   cocos2d::ccBlendFunc tolua_ret = (cocos2d::ccBlendFunc)  self->getBlendFunc();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((cocos2d::ccBlendFunc)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(cocos2d::ccBlendFunc));
     tolua_pushusertype(tolua_S,tolua_obj,"cocos2d::ccBlendFunc");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'getBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: setBlendFunc of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystem_setBlendFunc00
static int tolua_Cocos2d_cocos2d_CCParticleSystem_setBlendFunc00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSystem",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"cocos2d::ccBlendFunc",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
  cocos2d::ccBlendFunc var = *((cocos2d::ccBlendFunc*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'setBlendFunc'", NULL);
#endif
  {
   self->setBlendFunc(var);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'setBlendFunc'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __CCTextureProtocol__ of class  cocos2d::CCParticleSystem */
#ifndef TOLUA_DISABLE_tolua_get_cocos2d__CCParticleSystem___CCTextureProtocol__
static int tolua_get_cocos2d__CCParticleSystem___CCTextureProtocol__(lua_State* tolua_S)
{
  cocos2d::CCParticleSystem* self = (cocos2d::CCParticleSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__CCTextureProtocol__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<cocos2d::CCTextureProtocol*>(self), "cocos2d::CCTextureProtocol");
#else
   tolua_pushusertype(tolua_S,(void*)((cocos2d::CCTextureProtocol*)self), "cocos2d::CCTextureProtocol");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: particleWithFile of class  cocos2d::CCParticleSystemQuad */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystemQuad_particleWithFile00
static int tolua_Cocos2d_cocos2d_CCParticleSystemQuad_particleWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSystemQuad",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* plistFile = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCParticleSystemQuad* tolua_ret = (cocos2d::CCParticleSystemQuad*)  cocos2d::CCParticleSystemQuad::particleWithFile(plistFile);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSystemQuad");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'particleWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: particleWithFile of class  cocos2d::CCParticleSystemPoint */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSystemPoint_particleWithFile00
static int tolua_Cocos2d_cocos2d_CCParticleSystemPoint_particleWithFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSystemPoint",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const char* plistFile = ((const char*)  tolua_tostring(tolua_S,2,0));
  {
   cocos2d::CCParticleSystemPoint* tolua_ret = (cocos2d::CCParticleSystemPoint*)  cocos2d::CCParticleSystemPoint::particleWithFile(plistFile);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSystemPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'particleWithFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleFire */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFire_new00
static int tolua_Cocos2d_cocos2d_CCParticleFire_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleFire",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleFire* tolua_ret = (cocos2d::CCParticleFire*)  Mtolua_new((cocos2d::CCParticleFire)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleFire");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleFire */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFire_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleFire_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleFire",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleFire* tolua_ret = (cocos2d::CCParticleFire*)  Mtolua_new((cocos2d::CCParticleFire)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleFire");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleFire */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFire_init00
static int tolua_Cocos2d_cocos2d_CCParticleFire_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleFire",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleFire* self = (cocos2d::CCParticleFire*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleFire */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFire_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleFire_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleFire",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleFire* self = (cocos2d::CCParticleFire*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleFire */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFire_node00
static int tolua_Cocos2d_cocos2d_CCParticleFire_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleFire",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleFire* tolua_ret = (cocos2d::CCParticleFire*)  cocos2d::CCParticleFire::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleFire");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleFireworks */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFireworks_new00
static int tolua_Cocos2d_cocos2d_CCParticleFireworks_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleFireworks",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleFireworks* tolua_ret = (cocos2d::CCParticleFireworks*)  Mtolua_new((cocos2d::CCParticleFireworks)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleFireworks");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleFireworks */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFireworks_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleFireworks_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleFireworks",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleFireworks* tolua_ret = (cocos2d::CCParticleFireworks*)  Mtolua_new((cocos2d::CCParticleFireworks)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleFireworks");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleFireworks */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFireworks_init00
static int tolua_Cocos2d_cocos2d_CCParticleFireworks_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleFireworks",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleFireworks* self = (cocos2d::CCParticleFireworks*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleFireworks */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFireworks_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleFireworks_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleFireworks",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleFireworks* self = (cocos2d::CCParticleFireworks*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleFireworks */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleFireworks_node00
static int tolua_Cocos2d_cocos2d_CCParticleFireworks_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleFireworks",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleFireworks* tolua_ret = (cocos2d::CCParticleFireworks*)  cocos2d::CCParticleFireworks::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleFireworks");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleSun */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSun_new00
static int tolua_Cocos2d_cocos2d_CCParticleSun_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSun",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSun* tolua_ret = (cocos2d::CCParticleSun*)  Mtolua_new((cocos2d::CCParticleSun)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSun");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleSun */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSun_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleSun_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSun",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSun* tolua_ret = (cocos2d::CCParticleSun*)  Mtolua_new((cocos2d::CCParticleSun)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSun");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleSun */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSun_init00
static int tolua_Cocos2d_cocos2d_CCParticleSun_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSun",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSun* self = (cocos2d::CCParticleSun*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleSun */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSun_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleSun_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSun",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSun* self = (cocos2d::CCParticleSun*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleSun */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSun_node00
static int tolua_Cocos2d_cocos2d_CCParticleSun_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSun",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSun* tolua_ret = (cocos2d::CCParticleSun*)  cocos2d::CCParticleSun::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSun");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleGalaxy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleGalaxy_new00
static int tolua_Cocos2d_cocos2d_CCParticleGalaxy_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleGalaxy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleGalaxy* tolua_ret = (cocos2d::CCParticleGalaxy*)  Mtolua_new((cocos2d::CCParticleGalaxy)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleGalaxy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleGalaxy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleGalaxy_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleGalaxy_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleGalaxy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleGalaxy* tolua_ret = (cocos2d::CCParticleGalaxy*)  Mtolua_new((cocos2d::CCParticleGalaxy)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleGalaxy");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleGalaxy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleGalaxy_init00
static int tolua_Cocos2d_cocos2d_CCParticleGalaxy_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleGalaxy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleGalaxy* self = (cocos2d::CCParticleGalaxy*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleGalaxy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleGalaxy_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleGalaxy_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleGalaxy",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleGalaxy* self = (cocos2d::CCParticleGalaxy*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleGalaxy */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleGalaxy_node00
static int tolua_Cocos2d_cocos2d_CCParticleGalaxy_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleGalaxy",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleGalaxy* tolua_ret = (cocos2d::CCParticleGalaxy*)  cocos2d::CCParticleGalaxy::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleGalaxy");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleMeteor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleMeteor_new00
static int tolua_Cocos2d_cocos2d_CCParticleMeteor_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleMeteor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleMeteor* tolua_ret = (cocos2d::CCParticleMeteor*)  Mtolua_new((cocos2d::CCParticleMeteor)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleMeteor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleMeteor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleMeteor_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleMeteor_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleMeteor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleMeteor* tolua_ret = (cocos2d::CCParticleMeteor*)  Mtolua_new((cocos2d::CCParticleMeteor)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleMeteor");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleMeteor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleMeteor_init00
static int tolua_Cocos2d_cocos2d_CCParticleMeteor_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleMeteor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleMeteor* self = (cocos2d::CCParticleMeteor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleMeteor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleMeteor_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleMeteor_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleMeteor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleMeteor* self = (cocos2d::CCParticleMeteor*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleMeteor */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleMeteor_node00
static int tolua_Cocos2d_cocos2d_CCParticleMeteor_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleMeteor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleMeteor* tolua_ret = (cocos2d::CCParticleMeteor*)  cocos2d::CCParticleMeteor::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleMeteor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleSpiral */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSpiral_new00
static int tolua_Cocos2d_cocos2d_CCParticleSpiral_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSpiral",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSpiral* tolua_ret = (cocos2d::CCParticleSpiral*)  Mtolua_new((cocos2d::CCParticleSpiral)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSpiral");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleSpiral */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSpiral_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleSpiral_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSpiral",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSpiral* tolua_ret = (cocos2d::CCParticleSpiral*)  Mtolua_new((cocos2d::CCParticleSpiral)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSpiral");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleSpiral */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSpiral_init00
static int tolua_Cocos2d_cocos2d_CCParticleSpiral_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSpiral",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSpiral* self = (cocos2d::CCParticleSpiral*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleSpiral */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSpiral_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleSpiral_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSpiral",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSpiral* self = (cocos2d::CCParticleSpiral*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleSpiral */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSpiral_node00
static int tolua_Cocos2d_cocos2d_CCParticleSpiral_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSpiral",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSpiral* tolua_ret = (cocos2d::CCParticleSpiral*)  cocos2d::CCParticleSpiral::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSpiral");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleExplosion */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleExplosion_new00
static int tolua_Cocos2d_cocos2d_CCParticleExplosion_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleExplosion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleExplosion* tolua_ret = (cocos2d::CCParticleExplosion*)  Mtolua_new((cocos2d::CCParticleExplosion)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleExplosion");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleExplosion */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleExplosion_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleExplosion_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleExplosion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleExplosion* tolua_ret = (cocos2d::CCParticleExplosion*)  Mtolua_new((cocos2d::CCParticleExplosion)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleExplosion");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleExplosion */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleExplosion_init00
static int tolua_Cocos2d_cocos2d_CCParticleExplosion_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleExplosion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleExplosion* self = (cocos2d::CCParticleExplosion*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleExplosion */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleExplosion_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleExplosion_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleExplosion",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleExplosion* self = (cocos2d::CCParticleExplosion*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleExplosion */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleExplosion_node00
static int tolua_Cocos2d_cocos2d_CCParticleExplosion_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleExplosion",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleExplosion* tolua_ret = (cocos2d::CCParticleExplosion*)  cocos2d::CCParticleExplosion::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleExplosion");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleSmoke */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSmoke_new00
static int tolua_Cocos2d_cocos2d_CCParticleSmoke_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSmoke",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSmoke* tolua_ret = (cocos2d::CCParticleSmoke*)  Mtolua_new((cocos2d::CCParticleSmoke)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSmoke");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleSmoke */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSmoke_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleSmoke_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSmoke",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSmoke* tolua_ret = (cocos2d::CCParticleSmoke*)  Mtolua_new((cocos2d::CCParticleSmoke)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSmoke");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleSmoke */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSmoke_init00
static int tolua_Cocos2d_cocos2d_CCParticleSmoke_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSmoke",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSmoke* self = (cocos2d::CCParticleSmoke*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleSmoke */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSmoke_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleSmoke_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSmoke",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSmoke* self = (cocos2d::CCParticleSmoke*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleSmoke */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSmoke_node00
static int tolua_Cocos2d_cocos2d_CCParticleSmoke_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSmoke",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSmoke* tolua_ret = (cocos2d::CCParticleSmoke*)  cocos2d::CCParticleSmoke::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSmoke");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleSnow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSnow_new00
static int tolua_Cocos2d_cocos2d_CCParticleSnow_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSnow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSnow* tolua_ret = (cocos2d::CCParticleSnow*)  Mtolua_new((cocos2d::CCParticleSnow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSnow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleSnow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSnow_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleSnow_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSnow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSnow* tolua_ret = (cocos2d::CCParticleSnow*)  Mtolua_new((cocos2d::CCParticleSnow)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSnow");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleSnow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSnow_init00
static int tolua_Cocos2d_cocos2d_CCParticleSnow_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSnow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSnow* self = (cocos2d::CCParticleSnow*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleSnow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSnow_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleSnow_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleSnow",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleSnow* self = (cocos2d::CCParticleSnow*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleSnow */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleSnow_node00
static int tolua_Cocos2d_cocos2d_CCParticleSnow_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleSnow",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleSnow* tolua_ret = (cocos2d::CCParticleSnow*)  cocos2d::CCParticleSnow::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleSnow");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  cocos2d::CCParticleRain */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleRain_new00
static int tolua_Cocos2d_cocos2d_CCParticleRain_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleRain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleRain* tolua_ret = (cocos2d::CCParticleRain*)  Mtolua_new((cocos2d::CCParticleRain)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleRain");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  cocos2d::CCParticleRain */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleRain_new00_local
static int tolua_Cocos2d_cocos2d_CCParticleRain_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleRain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleRain* tolua_ret = (cocos2d::CCParticleRain*)  Mtolua_new((cocos2d::CCParticleRain)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleRain");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: init of class  cocos2d::CCParticleRain */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleRain_init00
static int tolua_Cocos2d_cocos2d_CCParticleRain_init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleRain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleRain* self = (cocos2d::CCParticleRain*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'init'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->init();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: initWithTotalParticles of class  cocos2d::CCParticleRain */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleRain_initWithTotalParticles00
static int tolua_Cocos2d_cocos2d_CCParticleRain_initWithTotalParticles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"cocos2d::CCParticleRain",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  cocos2d::CCParticleRain* self = (cocos2d::CCParticleRain*)  tolua_tousertype(tolua_S,1,0);
  unsigned int numberOfParticles = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'initWithTotalParticles'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->initWithTotalParticles(numberOfParticles);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'initWithTotalParticles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: node of class  cocos2d::CCParticleRain */
#ifndef TOLUA_DISABLE_tolua_Cocos2d_cocos2d_CCParticleRain_node00
static int tolua_Cocos2d_cocos2d_CCParticleRain_node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"cocos2d::CCParticleRain",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   cocos2d::CCParticleRain* tolua_ret = (cocos2d::CCParticleRain*)  cocos2d::CCParticleRain::node();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"cocos2d::CCParticleRain");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_Cocos2d_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"kCCNodeTagInvalid",cocos2d::kCCNodeTagInvalid);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCNode","cocos2d::CCNode","cocos2d::CCObject",tolua_collect_cocos2d__CCNode);
   #else
   tolua_cclass(tolua_S,"CCNode","cocos2d::CCNode","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCNode");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCNode_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCNode_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCNode_new00_local);
    tolua_function(tolua_S,"getZOrder",tolua_Cocos2d_cocos2d_CCNode_getZOrder00);
    tolua_function(tolua_S,"getVertexZ",tolua_Cocos2d_cocos2d_CCNode_getVertexZ00);
    tolua_function(tolua_S,"setVertexZ",tolua_Cocos2d_cocos2d_CCNode_setVertexZ00);
    tolua_function(tolua_S,"getRotation",tolua_Cocos2d_cocos2d_CCNode_getRotation00);
    tolua_function(tolua_S,"setRotation",tolua_Cocos2d_cocos2d_CCNode_setRotation00);
    tolua_function(tolua_S,"getScale",tolua_Cocos2d_cocos2d_CCNode_getScale00);
    tolua_function(tolua_S,"setScale",tolua_Cocos2d_cocos2d_CCNode_setScale00);
    tolua_function(tolua_S,"getScaleX",tolua_Cocos2d_cocos2d_CCNode_getScaleX00);
    tolua_function(tolua_S,"setScaleX",tolua_Cocos2d_cocos2d_CCNode_setScaleX00);
    tolua_function(tolua_S,"getScaleY",tolua_Cocos2d_cocos2d_CCNode_getScaleY00);
    tolua_function(tolua_S,"setScaleY",tolua_Cocos2d_cocos2d_CCNode_setScaleY00);
    tolua_function(tolua_S,"getPosition",tolua_Cocos2d_cocos2d_CCNode_getPosition00);
    tolua_function(tolua_S,"setPosition",tolua_Cocos2d_cocos2d_CCNode_setPosition00);
    tolua_function(tolua_S,"getSkewX",tolua_Cocos2d_cocos2d_CCNode_getSkewX00);
    tolua_function(tolua_S,"setSkewX",tolua_Cocos2d_cocos2d_CCNode_setSkewX00);
    tolua_function(tolua_S,"getSkewY",tolua_Cocos2d_cocos2d_CCNode_getSkewY00);
    tolua_function(tolua_S,"setSkewY",tolua_Cocos2d_cocos2d_CCNode_setSkewY00);
    tolua_function(tolua_S,"getChildren",tolua_Cocos2d_cocos2d_CCNode_getChildren00);
    tolua_function(tolua_S,"getCamera",tolua_Cocos2d_cocos2d_CCNode_getCamera00);
    tolua_function(tolua_S,"getGrid",tolua_Cocos2d_cocos2d_CCNode_getGrid00);
    tolua_function(tolua_S,"setGrid",tolua_Cocos2d_cocos2d_CCNode_setGrid00);
    tolua_function(tolua_S,"getIsVisible",tolua_Cocos2d_cocos2d_CCNode_getIsVisible00);
    tolua_function(tolua_S,"setIsVisible",tolua_Cocos2d_cocos2d_CCNode_setIsVisible00);
    tolua_function(tolua_S,"getAnchorPoint",tolua_Cocos2d_cocos2d_CCNode_getAnchorPoint00);
    tolua_function(tolua_S,"setAnchorPoint",tolua_Cocos2d_cocos2d_CCNode_setAnchorPoint00);
    tolua_function(tolua_S,"getAnchorPointInPixels",tolua_Cocos2d_cocos2d_CCNode_getAnchorPointInPixels00);
    tolua_function(tolua_S,"getContentSizeInPixels",tolua_Cocos2d_cocos2d_CCNode_getContentSizeInPixels00);
    tolua_function(tolua_S,"setContentSizeInPixels",tolua_Cocos2d_cocos2d_CCNode_setContentSizeInPixels00);
    tolua_function(tolua_S,"getContentSize",tolua_Cocos2d_cocos2d_CCNode_getContentSize00);
    tolua_function(tolua_S,"setContentSize",tolua_Cocos2d_cocos2d_CCNode_setContentSize00);
    tolua_function(tolua_S,"getIsRunning",tolua_Cocos2d_cocos2d_CCNode_getIsRunning00);
    tolua_function(tolua_S,"getParent",tolua_Cocos2d_cocos2d_CCNode_getParent00);
    tolua_function(tolua_S,"setParent",tolua_Cocos2d_cocos2d_CCNode_setParent00);
    tolua_function(tolua_S,"getIsRelativeAnchorPoint",tolua_Cocos2d_cocos2d_CCNode_getIsRelativeAnchorPoint00);
    tolua_function(tolua_S,"setIsRelativeAnchorPoint",tolua_Cocos2d_cocos2d_CCNode_setIsRelativeAnchorPoint00);
    tolua_function(tolua_S,"getTag",tolua_Cocos2d_cocos2d_CCNode_getTag00);
    tolua_function(tolua_S,"setTag",tolua_Cocos2d_cocos2d_CCNode_setTag00);
    tolua_function(tolua_S,"getUserData",tolua_Cocos2d_cocos2d_CCNode_getUserData00);
    tolua_function(tolua_S,"setUserData",tolua_Cocos2d_cocos2d_CCNode_setUserData00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCNode_onEnter00);
    tolua_function(tolua_S,"onEnterTransitionDidFinish",tolua_Cocos2d_cocos2d_CCNode_onEnterTransitionDidFinish00);
    tolua_function(tolua_S,"onExit",tolua_Cocos2d_cocos2d_CCNode_onExit00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCNode_addChild00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCNode_addChild01);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCNode_addChild02);
    tolua_function(tolua_S,"removeChild",tolua_Cocos2d_cocos2d_CCNode_removeChild00);
    tolua_function(tolua_S,"removeAllChildrenWithCleanup",tolua_Cocos2d_cocos2d_CCNode_removeAllChildrenWithCleanup00);
    tolua_function(tolua_S,"reorderChild",tolua_Cocos2d_cocos2d_CCNode_reorderChild00);
    tolua_function(tolua_S,"cleanup",tolua_Cocos2d_cocos2d_CCNode_cleanup00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCNode_draw00);
    tolua_function(tolua_S,"visit",tolua_Cocos2d_cocos2d_CCNode_visit00);
    tolua_function(tolua_S,"selectorProtocolRetain",tolua_Cocos2d_cocos2d_CCNode_selectorProtocolRetain00);
    tolua_function(tolua_S,"selectorProtocolRelease",tolua_Cocos2d_cocos2d_CCNode_selectorProtocolRelease00);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCNode_convertToRGBAProtocol00);
    tolua_function(tolua_S,"convertToLabelProtocol",tolua_Cocos2d_cocos2d_CCNode_convertToLabelProtocol00);
    tolua_function(tolua_S,"transform",tolua_Cocos2d_cocos2d_CCNode_transform00);
    tolua_function(tolua_S,"transformAncestors",tolua_Cocos2d_cocos2d_CCNode_transformAncestors00);
    tolua_function(tolua_S,"boundingBox",tolua_Cocos2d_cocos2d_CCNode_boundingBox00);
    tolua_function(tolua_S,"runAction",tolua_Cocos2d_cocos2d_CCNode_runAction00);
    tolua_function(tolua_S,"stopAllActions",tolua_Cocos2d_cocos2d_CCNode_stopAllActions00);
    tolua_function(tolua_S,"stopAction",tolua_Cocos2d_cocos2d_CCNode_stopAction00);
    tolua_function(tolua_S,"stopActionByTag",tolua_Cocos2d_cocos2d_CCNode_stopActionByTag00);
    tolua_function(tolua_S,"getActionByTag",tolua_Cocos2d_cocos2d_CCNode_getActionByTag00);
    tolua_function(tolua_S,"description",tolua_Cocos2d_cocos2d_CCNode_description00);
    tolua_function(tolua_S,"getChildByTag",tolua_Cocos2d_cocos2d_CCNode_getChildByTag00);
    tolua_function(tolua_S,"numberOfRunningActions",tolua_Cocos2d_cocos2d_CCNode_numberOfRunningActions00);
    tolua_function(tolua_S,"scheduleUpdate",tolua_Cocos2d_cocos2d_CCNode_scheduleUpdate00);
    tolua_function(tolua_S,"scheduleUpdateWithPriority",tolua_Cocos2d_cocos2d_CCNode_scheduleUpdateWithPriority00);
    tolua_function(tolua_S,"unscheduleUpdate",tolua_Cocos2d_cocos2d_CCNode_unscheduleUpdate00);
    tolua_function(tolua_S,"unscheduleAllSelectors",tolua_Cocos2d_cocos2d_CCNode_unscheduleAllSelectors00);
    tolua_function(tolua_S,"resumeSchedulerAndActions",tolua_Cocos2d_cocos2d_CCNode_resumeSchedulerAndActions00);
    tolua_function(tolua_S,"pauseSchedulerAndActions",tolua_Cocos2d_cocos2d_CCNode_pauseSchedulerAndActions00);
    tolua_function(tolua_S,"nodeToParentTransform",tolua_Cocos2d_cocos2d_CCNode_nodeToParentTransform00);
    tolua_function(tolua_S,"parentToNodeTransform",tolua_Cocos2d_cocos2d_CCNode_parentToNodeTransform00);
    tolua_function(tolua_S,"nodeToWorldTransform",tolua_Cocos2d_cocos2d_CCNode_nodeToWorldTransform00);
    tolua_function(tolua_S,"worldToNodeTransform",tolua_Cocos2d_cocos2d_CCNode_worldToNodeTransform00);
    tolua_function(tolua_S,"convertToNodeSpace",tolua_Cocos2d_cocos2d_CCNode_convertToNodeSpace00);
    tolua_function(tolua_S,"convertToWorldSpace",tolua_Cocos2d_cocos2d_CCNode_convertToWorldSpace00);
    tolua_function(tolua_S,"convertToNodeSpaceAR",tolua_Cocos2d_cocos2d_CCNode_convertToNodeSpaceAR00);
    tolua_function(tolua_S,"convertToWorldSpaceAR",tolua_Cocos2d_cocos2d_CCNode_convertToWorldSpaceAR00);
    tolua_function(tolua_S,"convertTouchToNodeSpace",tolua_Cocos2d_cocos2d_CCNode_convertTouchToNodeSpace00);
    tolua_function(tolua_S,"convertTouchToNodeSpaceAR",tolua_Cocos2d_cocos2d_CCNode_convertTouchToNodeSpaceAR00);
    tolua_function(tolua_S,"removeFromParentAndCleanup",tolua_Cocos2d_cocos2d_CCNode_removeFromParentAndCleanup00);
    tolua_function(tolua_S,"removeChildByTag",tolua_Cocos2d_cocos2d_CCNode_removeChildByTag00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCNode_node00);
    tolua_variable(tolua_S,"__SelectorProtocol__",tolua_get_cocos2d__CCNode___SelectorProtocol__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCCopying","cocos2d::CCCopying","",NULL);
   tolua_beginmodule(tolua_S,"CCCopying");
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCCopying_copyWithZone00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCObject","cocos2d::CCObject","cocos2d::CCCopying",tolua_collect_cocos2d__CCObject);
   #else
   tolua_cclass(tolua_S,"CCObject","cocos2d::CCObject","cocos2d::CCCopying",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCObject");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCObject_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCObject_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCObject_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCObject_delete00);
    tolua_function(tolua_S,"release",tolua_Cocos2d_cocos2d_CCObject_release00);
    tolua_function(tolua_S,"retain",tolua_Cocos2d_cocos2d_CCObject_retain00);
    tolua_function(tolua_S,"autorelease",tolua_Cocos2d_cocos2d_CCObject_autorelease00);
    tolua_function(tolua_S,"copy",tolua_Cocos2d_cocos2d_CCObject_copy00);
    tolua_function(tolua_S,"isSingleRefrence",tolua_Cocos2d_cocos2d_CCObject_isSingleRefrence00);
    tolua_function(tolua_S,"retainCount",tolua_Cocos2d_cocos2d_CCObject_retainCount00);
    tolua_function(tolua_S,"isEqual",tolua_Cocos2d_cocos2d_CCObject_isEqual00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"_ccArray","cocos2d::_ccArray","",NULL);
   tolua_beginmodule(tolua_S,"_ccArray");
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParallaxNode","cocos2d::CCParallaxNode","cocos2d::CCNode",tolua_collect_cocos2d__CCParallaxNode);
   #else
   tolua_cclass(tolua_S,"CCParallaxNode","cocos2d::CCParallaxNode","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParallaxNode");
    tolua_function(tolua_S,"getParallaxArray",tolua_Cocos2d_cocos2d_CCParallaxNode_getParallaxArray00);
    tolua_function(tolua_S,"setParallaxArray",tolua_Cocos2d_cocos2d_CCParallaxNode_setParallaxArray00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParallaxNode_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParallaxNode_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParallaxNode_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCParallaxNode_delete00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParallaxNode_node00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCParallaxNode_addChild00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCParallaxNode_addChild01);
    tolua_function(tolua_S,"removeChild",tolua_Cocos2d_cocos2d_CCParallaxNode_removeChild00);
    tolua_function(tolua_S,"removeAllChildrenWithCleanup",tolua_Cocos2d_cocos2d_CCParallaxNode_removeAllChildrenWithCleanup00);
    tolua_function(tolua_S,"visit",tolua_Cocos2d_cocos2d_CCParallaxNode_visit00);
    tolua_function(tolua_S,"getParallaxArray",tolua_Cocos2d_cocos2d_CCParallaxNode_getParallaxArray01);
    tolua_function(tolua_S,"setParallaxArray",tolua_Cocos2d_cocos2d_CCParallaxNode_setParallaxArray01);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_function(tolua_S,"ccpNeg",tolua_Cocos2d_cocos2d_ccpNeg00);
   tolua_function(tolua_S,"ccpAdd",tolua_Cocos2d_cocos2d_ccpAdd00);
   tolua_function(tolua_S,"ccpSub",tolua_Cocos2d_cocos2d_ccpSub00);
   tolua_function(tolua_S,"ccpMult",tolua_Cocos2d_cocos2d_ccpMult00);
   tolua_function(tolua_S,"ccpMidpoint",tolua_Cocos2d_cocos2d_ccpMidpoint00);
   tolua_function(tolua_S,"ccpDot",tolua_Cocos2d_cocos2d_ccpDot00);
   tolua_function(tolua_S,"ccpCross",tolua_Cocos2d_cocos2d_ccpCross00);
   tolua_function(tolua_S,"ccpPerp",tolua_Cocos2d_cocos2d_ccpPerp00);
   tolua_function(tolua_S,"ccpRPerp",tolua_Cocos2d_cocos2d_ccpRPerp00);
   tolua_function(tolua_S,"ccpProject",tolua_Cocos2d_cocos2d_ccpProject00);
   tolua_function(tolua_S,"ccpRotate",tolua_Cocos2d_cocos2d_ccpRotate00);
   tolua_function(tolua_S,"ccpUnrotate",tolua_Cocos2d_cocos2d_ccpUnrotate00);
   tolua_function(tolua_S,"ccpLengthSQ",tolua_Cocos2d_cocos2d_ccpLengthSQ00);
   tolua_function(tolua_S,"ccpLength",tolua_Cocos2d_cocos2d_ccpLength00);
   tolua_function(tolua_S,"ccpDistance",tolua_Cocos2d_cocos2d_ccpDistance00);
   tolua_function(tolua_S,"ccpNormalize",tolua_Cocos2d_cocos2d_ccpNormalize00);
   tolua_function(tolua_S,"ccpForAngle",tolua_Cocos2d_cocos2d_ccpForAngle00);
   tolua_function(tolua_S,"ccpToAngle",tolua_Cocos2d_cocos2d_ccpToAngle00);
   tolua_function(tolua_S,"clampf",tolua_Cocos2d_cocos2d_clampf00);
   tolua_function(tolua_S,"ccpClamp",tolua_Cocos2d_cocos2d_ccpClamp00);
   tolua_function(tolua_S,"ccpFromSize",tolua_Cocos2d_cocos2d_ccpFromSize00);
   tolua_function(tolua_S,"ccpLerp",tolua_Cocos2d_cocos2d_ccpLerp00);
   tolua_function(tolua_S,"ccpFuzzyEqual",tolua_Cocos2d_cocos2d_ccpFuzzyEqual00);
   tolua_function(tolua_S,"ccpCompMult",tolua_Cocos2d_cocos2d_ccpCompMult00);
   tolua_function(tolua_S,"ccpAngleSigned",tolua_Cocos2d_cocos2d_ccpAngleSigned00);
   tolua_function(tolua_S,"ccpAngle",tolua_Cocos2d_cocos2d_ccpAngle00);
   tolua_function(tolua_S,"ccpRotateByAngle",tolua_Cocos2d_cocos2d_ccpRotateByAngle00);
   tolua_function(tolua_S,"ccpLineIntersect",tolua_Cocos2d_cocos2d_ccpLineIntersect00);
   tolua_function(tolua_S,"ccpSegmentIntersect",tolua_Cocos2d_cocos2d_ccpSegmentIntersect00);
   tolua_function(tolua_S,"ccpIntersectPoint",tolua_Cocos2d_cocos2d_ccpIntersectPoint00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"kCCProgressTimerTypeRadialCCW",cocos2d::kCCProgressTimerTypeRadialCCW);
   tolua_constant(tolua_S,"kCCProgressTimerTypeRadialCW",cocos2d::kCCProgressTimerTypeRadialCW);
   tolua_constant(tolua_S,"kCCProgressTimerTypeHorizontalBarLR",cocos2d::kCCProgressTimerTypeHorizontalBarLR);
   tolua_constant(tolua_S,"kCCProgressTimerTypeHorizontalBarRL",cocos2d::kCCProgressTimerTypeHorizontalBarRL);
   tolua_constant(tolua_S,"kCCProgressTimerTypeVerticalBarBT",cocos2d::kCCProgressTimerTypeVerticalBarBT);
   tolua_constant(tolua_S,"kCCProgressTimerTypeVerticalBarTB",cocos2d::kCCProgressTimerTypeVerticalBarTB);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCProgressTimer","cocos2d::CCProgressTimer","cocos2d::CCNode",tolua_collect_cocos2d__CCProgressTimer);
   #else
   tolua_cclass(tolua_S,"CCProgressTimer","cocos2d::CCProgressTimer","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCProgressTimer");
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCProgressTimer_delete00);
    tolua_function(tolua_S,"getType",tolua_Cocos2d_cocos2d_CCProgressTimer_getType00);
    tolua_function(tolua_S,"getPercentage",tolua_Cocos2d_cocos2d_CCProgressTimer_getPercentage00);
    tolua_function(tolua_S,"getSprite",tolua_Cocos2d_cocos2d_CCProgressTimer_getSprite00);
    tolua_function(tolua_S,"initWithFile",tolua_Cocos2d_cocos2d_CCProgressTimer_initWithFile00);
    tolua_function(tolua_S,"initWithTexture",tolua_Cocos2d_cocos2d_CCProgressTimer_initWithTexture00);
    tolua_function(tolua_S,"setPercentage",tolua_Cocos2d_cocos2d_CCProgressTimer_setPercentage00);
    tolua_function(tolua_S,"setSprite",tolua_Cocos2d_cocos2d_CCProgressTimer_setSprite00);
    tolua_function(tolua_S,"setType",tolua_Cocos2d_cocos2d_CCProgressTimer_setType00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCProgressTimer_draw00);
    tolua_function(tolua_S,"progressWithFile",tolua_Cocos2d_cocos2d_CCProgressTimer_progressWithFile00);
    tolua_function(tolua_S,"progressWithTexture",tolua_Cocos2d_cocos2d_CCProgressTimer_progressWithTexture00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"kCCImageFormatJPG",cocos2d::kCCImageFormatJPG);
   tolua_constant(tolua_S,"kCCImageFormatPNG",cocos2d::kCCImageFormatPNG);
   tolua_constant(tolua_S,"kCCImageFormatRawData",cocos2d::kCCImageFormatRawData);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCRenderTexture","cocos2d::CCRenderTexture","cocos2d::CCNode",tolua_collect_cocos2d__CCRenderTexture);
   #else
   tolua_cclass(tolua_S,"CCRenderTexture","cocos2d::CCRenderTexture","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCRenderTexture");
    tolua_function(tolua_S,"getSprite",tolua_Cocos2d_cocos2d_CCRenderTexture_getSprite00);
    tolua_function(tolua_S,"setSprite",tolua_Cocos2d_cocos2d_CCRenderTexture_setSprite00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCRenderTexture_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCRenderTexture_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCRenderTexture_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCRenderTexture_delete00);
    tolua_function(tolua_S,"renderTextureWithWidthAndHeight",tolua_Cocos2d_cocos2d_CCRenderTexture_renderTextureWithWidthAndHeight00);
    tolua_function(tolua_S,"renderTextureWithWidthAndHeight",tolua_Cocos2d_cocos2d_CCRenderTexture_renderTextureWithWidthAndHeight01);
    tolua_function(tolua_S,"initWithWidthAndHeight",tolua_Cocos2d_cocos2d_CCRenderTexture_initWithWidthAndHeight00);
    tolua_function(tolua_S,"begin",tolua_Cocos2d_cocos2d_CCRenderTexture_begin00);
    tolua_function(tolua_S,"beginWithClear",tolua_Cocos2d_cocos2d_CCRenderTexture_beginWithClear00);
    tolua_function(tolua_S,"endToLua",tolua_Cocos2d_cocos2d_CCRenderTexture_endToLua00);
    tolua_function(tolua_S,"clear",tolua_Cocos2d_cocos2d_CCRenderTexture_clear00);
    tolua_function(tolua_S,"saveBuffer",tolua_Cocos2d_cocos2d_CCRenderTexture_saveBuffer00);
    tolua_function(tolua_S,"saveBuffer",tolua_Cocos2d_cocos2d_CCRenderTexture_saveBuffer01);
    tolua_function(tolua_S,"getUIImageAsDataFromBuffer",tolua_Cocos2d_cocos2d_CCRenderTexture_getUIImageAsDataFromBuffer00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCRibbon","cocos2d::CCRibbon","cocos2d::CCNode",tolua_collect_cocos2d__CCRibbon);
   #else
   tolua_cclass(tolua_S,"CCRibbon","cocos2d::CCRibbon","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCRibbon");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCRibbon_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCRibbon_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCRibbon_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCRibbon_delete00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCRibbon_setTexture00);
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCRibbon_getTexture00);
    tolua_function(tolua_S,"getTextureLength",tolua_Cocos2d_cocos2d_CCRibbon_getTextureLength00);
    tolua_function(tolua_S,"setTextureLength",tolua_Cocos2d_cocos2d_CCRibbon_setTextureLength00);
    tolua_function(tolua_S,"setBlendFunc",tolua_Cocos2d_cocos2d_CCRibbon_setBlendFunc00);
    tolua_function(tolua_S,"getBlendFunc",tolua_Cocos2d_cocos2d_CCRibbon_getBlendFunc00);
    tolua_function(tolua_S,"setColor",tolua_Cocos2d_cocos2d_CCRibbon_setColor00);
    tolua_function(tolua_S,"getColor",tolua_Cocos2d_cocos2d_CCRibbon_getColor00);
    tolua_function(tolua_S,"ribbonWithWidth",tolua_Cocos2d_cocos2d_CCRibbon_ribbonWithWidth00);
    tolua_function(tolua_S,"initWithWidth",tolua_Cocos2d_cocos2d_CCRibbon_initWithWidth00);
    tolua_function(tolua_S,"addPointAt",tolua_Cocos2d_cocos2d_CCRibbon_addPointAt00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCRibbon_update00);
    tolua_function(tolua_S,"sideOfLine",tolua_Cocos2d_cocos2d_CCRibbon_sideOfLine00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCRibbon_draw00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCRibbonSegment","cocos2d::CCRibbonSegment","cocos2d::CCObject",tolua_collect_cocos2d__CCRibbonSegment);
   #else
   tolua_cclass(tolua_S,"CCRibbonSegment","cocos2d::CCRibbonSegment","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCRibbonSegment");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCRibbonSegment_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCRibbonSegment_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCRibbonSegment_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCRibbonSegment_delete00);
    tolua_function(tolua_S,"description",tolua_Cocos2d_cocos2d_CCRibbonSegment_description00);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCRibbonSegment_init00);
    tolua_function(tolua_S,"reset",tolua_Cocos2d_cocos2d_CCRibbonSegment_reset00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCRibbonSegment_draw00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"ccNormalScene",cocos2d::ccNormalScene);
   tolua_constant(tolua_S,"ccTransitionScene",cocos2d::ccTransitionScene);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCScene","cocos2d::CCScene","cocos2d::CCNode",tolua_collect_cocos2d__CCScene);
   #else
   tolua_cclass(tolua_S,"CCScene","cocos2d::CCScene","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCScene");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCScene_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCScene_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCScene_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCScene_delete00);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCScene_init00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCScene_node00);
    tolua_function(tolua_S,"getSceneType",tolua_Cocos2d_cocos2d_CCScene_getSceneType00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTimer","cocos2d::CCTimer","cocos2d::CCObject",tolua_collect_cocos2d__CCTimer);
   #else
   tolua_cclass(tolua_S,"CCTimer","cocos2d::CCTimer","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTimer");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTimer_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTimer_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTimer_new00_local);
    tolua_function(tolua_S,"getInterval",tolua_Cocos2d_cocos2d_CCTimer_getInterval00);
    tolua_function(tolua_S,"setInterval",tolua_Cocos2d_cocos2d_CCTimer_setInterval00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCTimer_update00);
    tolua_function(tolua_S,"initWithScriptFuncName",tolua_Cocos2d_cocos2d_CCTimer_initWithScriptFuncName00);
    tolua_function(tolua_S,"initWithScriptFuncName",tolua_Cocos2d_cocos2d_CCTimer_initWithScriptFuncName01);
    tolua_variable(tolua_S,"m_fInterval",tolua_get_cocos2d__CCTimer_m_fInterval,tolua_set_cocos2d__CCTimer_m_fInterval);
    tolua_variable(tolua_S,"m_scriptFunc",tolua_get_cocos2d__CCTimer_m_scriptFunc,tolua_set_cocos2d__CCTimer_m_scriptFunc);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCScheduler","cocos2d::CCScheduler","cocos2d::CCObject",tolua_collect_cocos2d__CCScheduler);
   #else
   tolua_cclass(tolua_S,"CCScheduler","cocos2d::CCScheduler","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCScheduler");
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCScheduler_delete00);
    tolua_function(tolua_S,"getTimeScale",tolua_Cocos2d_cocos2d_CCScheduler_getTimeScale00);
    tolua_function(tolua_S,"setTimeScale",tolua_Cocos2d_cocos2d_CCScheduler_setTimeScale00);
    tolua_function(tolua_S,"tick",tolua_Cocos2d_cocos2d_CCScheduler_tick00);
    tolua_function(tolua_S,"scheduleSelector",tolua_Cocos2d_cocos2d_CCScheduler_scheduleSelector00);
    tolua_function(tolua_S,"scheduleScriptFunc",tolua_Cocos2d_cocos2d_CCScheduler_scheduleScriptFunc00);
    tolua_function(tolua_S,"unscheduleScriptFunc",tolua_Cocos2d_cocos2d_CCScheduler_unscheduleScriptFunc00);
    tolua_function(tolua_S,"scheduleUpdateForTarget",tolua_Cocos2d_cocos2d_CCScheduler_scheduleUpdateForTarget00);
    tolua_function(tolua_S,"unscheduleSelector",tolua_Cocos2d_cocos2d_CCScheduler_unscheduleSelector00);
    tolua_function(tolua_S,"unscheduleUpdateForTarget",tolua_Cocos2d_cocos2d_CCScheduler_unscheduleUpdateForTarget00);
    tolua_function(tolua_S,"unscheduleAllSelectorsForTarget",tolua_Cocos2d_cocos2d_CCScheduler_unscheduleAllSelectorsForTarget00);
    tolua_function(tolua_S,"unscheduleAllSelectors",tolua_Cocos2d_cocos2d_CCScheduler_unscheduleAllSelectors00);
    tolua_function(tolua_S,"pauseTarget",tolua_Cocos2d_cocos2d_CCScheduler_pauseTarget00);
    tolua_function(tolua_S,"resumeTarget",tolua_Cocos2d_cocos2d_CCScheduler_resumeTarget00);
    tolua_function(tolua_S,"isTargetPaused",tolua_Cocos2d_cocos2d_CCScheduler_isTargetPaused00);
    tolua_function(tolua_S,"sharedScheduler",tolua_Cocos2d_cocos2d_CCScheduler_sharedScheduler00);
    tolua_function(tolua_S,"purgeSharedScheduler",tolua_Cocos2d_cocos2d_CCScheduler_purgeSharedScheduler00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"CCSpriteIndexNotInitialized",CCSpriteIndexNotInitialized);
   tolua_constant(tolua_S,"CC_HONOR_PARENT_TRANSFORM_TRANSLATE",cocos2d::CC_HONOR_PARENT_TRANSFORM_TRANSLATE);
   tolua_constant(tolua_S,"CC_HONOR_PARENT_TRANSFORM_ROTATE",cocos2d::CC_HONOR_PARENT_TRANSFORM_ROTATE);
   tolua_constant(tolua_S,"CC_HONOR_PARENT_TRANSFORM_SCALE",cocos2d::CC_HONOR_PARENT_TRANSFORM_SCALE);
   tolua_constant(tolua_S,"CC_HONOR_PARENT_TRANSFORM_SKEW",cocos2d::CC_HONOR_PARENT_TRANSFORM_SKEW);
   tolua_constant(tolua_S,"CC_HONOR_PARENT_TRANSFORM_ALL",cocos2d::CC_HONOR_PARENT_TRANSFORM_ALL);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCSprite","cocos2d::CCSprite","cocos2d::CCNode",tolua_collect_cocos2d__CCSprite);
   #else
   tolua_cclass(tolua_S,"CCSprite","cocos2d::CCSprite","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCSprite");
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCSprite_draw00);
    tolua_function(tolua_S,"isDirty",tolua_Cocos2d_cocos2d_CCSprite_isDirty00);
    tolua_function(tolua_S,"setDirty",tolua_Cocos2d_cocos2d_CCSprite_setDirty00);
    tolua_function(tolua_S,"getQuad",tolua_Cocos2d_cocos2d_CCSprite_getQuad00);
    tolua_function(tolua_S,"isTextureRectRotated",tolua_Cocos2d_cocos2d_CCSprite_isTextureRectRotated00);
    tolua_function(tolua_S,"getAtlasIndex",tolua_Cocos2d_cocos2d_CCSprite_getAtlasIndex00);
    tolua_function(tolua_S,"setAtlasIndex",tolua_Cocos2d_cocos2d_CCSprite_setAtlasIndex00);
    tolua_function(tolua_S,"getTextureRect",tolua_Cocos2d_cocos2d_CCSprite_getTextureRect00);
    tolua_function(tolua_S,"isUsesBatchNode",tolua_Cocos2d_cocos2d_CCSprite_isUsesBatchNode00);
    tolua_function(tolua_S,"setUsesSpriteBatchNode",tolua_Cocos2d_cocos2d_CCSprite_setUsesSpriteBatchNode00);
    tolua_function(tolua_S,"getTextureAtlas",tolua_Cocos2d_cocos2d_CCSprite_getTextureAtlas00);
    tolua_function(tolua_S,"setTextureAtlas",tolua_Cocos2d_cocos2d_CCSprite_setTextureAtlas00);
    tolua_function(tolua_S,"getSpriteBatchNode",tolua_Cocos2d_cocos2d_CCSprite_getSpriteBatchNode00);
    tolua_function(tolua_S,"setSpriteBatchNode",tolua_Cocos2d_cocos2d_CCSprite_setSpriteBatchNode00);
    tolua_function(tolua_S,"getHornorParentTransform",tolua_Cocos2d_cocos2d_CCSprite_getHornorParentTransform00);
    tolua_function(tolua_S,"setHornorParentTransform",tolua_Cocos2d_cocos2d_CCSprite_setHornorParentTransform00);
    tolua_function(tolua_S,"getOffsetPositionInPixels",tolua_Cocos2d_cocos2d_CCSprite_getOffsetPositionInPixels00);
    tolua_function(tolua_S,"getBlendFunc",tolua_Cocos2d_cocos2d_CCSprite_getBlendFunc00);
    tolua_function(tolua_S,"setBlendFunc",tolua_Cocos2d_cocos2d_CCSprite_setBlendFunc00);
    tolua_function(tolua_S,"spriteWithTexture",tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture00);
    tolua_function(tolua_S,"spriteWithTexture",tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture01);
    tolua_function(tolua_S,"spriteWithTexture",tolua_Cocos2d_cocos2d_CCSprite_spriteWithTexture02);
    tolua_function(tolua_S,"spriteWithSpriteFrame",tolua_Cocos2d_cocos2d_CCSprite_spriteWithSpriteFrame00);
    tolua_function(tolua_S,"spriteWithSpriteFrameName",tolua_Cocos2d_cocos2d_CCSprite_spriteWithSpriteFrameName00);
    tolua_function(tolua_S,"spriteWithFile",tolua_Cocos2d_cocos2d_CCSprite_spriteWithFile00);
    tolua_function(tolua_S,"spriteWithFile",tolua_Cocos2d_cocos2d_CCSprite_spriteWithFile01);
    tolua_function(tolua_S,"spriteWithBatchNode",tolua_Cocos2d_cocos2d_CCSprite_spriteWithBatchNode00);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCSprite_init00);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCSprite_delete00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCSprite_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCSprite_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCSprite_new00_local);
    tolua_function(tolua_S,"removeChild",tolua_Cocos2d_cocos2d_CCSprite_removeChild00);
    tolua_function(tolua_S,"removeAllChildrenWithCleanup",tolua_Cocos2d_cocos2d_CCSprite_removeAllChildrenWithCleanup00);
    tolua_function(tolua_S,"reorderChild",tolua_Cocos2d_cocos2d_CCSprite_reorderChild00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCSprite_addChild00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCSprite_addChild01);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCSprite_addChild02);
    tolua_function(tolua_S,"setDirtyRecursively",tolua_Cocos2d_cocos2d_CCSprite_setDirtyRecursively00);
    tolua_function(tolua_S,"setPosition",tolua_Cocos2d_cocos2d_CCSprite_setPosition00);
    tolua_function(tolua_S,"setPositionInPixels",tolua_Cocos2d_cocos2d_CCSprite_setPositionInPixels00);
    tolua_function(tolua_S,"setRotation",tolua_Cocos2d_cocos2d_CCSprite_setRotation00);
    tolua_function(tolua_S,"setSkewX",tolua_Cocos2d_cocos2d_CCSprite_setSkewX00);
    tolua_function(tolua_S,"setSkewY",tolua_Cocos2d_cocos2d_CCSprite_setSkewY00);
    tolua_function(tolua_S,"setScaleX",tolua_Cocos2d_cocos2d_CCSprite_setScaleX00);
    tolua_function(tolua_S,"setScaleY",tolua_Cocos2d_cocos2d_CCSprite_setScaleY00);
    tolua_function(tolua_S,"setScale",tolua_Cocos2d_cocos2d_CCSprite_setScale00);
    tolua_function(tolua_S,"setVertexZ",tolua_Cocos2d_cocos2d_CCSprite_setVertexZ00);
    tolua_function(tolua_S,"setAnchorPoint",tolua_Cocos2d_cocos2d_CCSprite_setAnchorPoint00);
    tolua_function(tolua_S,"setIsRelativeAnchorPoint",tolua_Cocos2d_cocos2d_CCSprite_setIsRelativeAnchorPoint00);
    tolua_function(tolua_S,"setIsVisible",tolua_Cocos2d_cocos2d_CCSprite_setIsVisible00);
    tolua_function(tolua_S,"setFlipX",tolua_Cocos2d_cocos2d_CCSprite_setFlipX00);
    tolua_function(tolua_S,"setFlipY",tolua_Cocos2d_cocos2d_CCSprite_setFlipY00);
    tolua_function(tolua_S,"isFlipX",tolua_Cocos2d_cocos2d_CCSprite_isFlipX00);
    tolua_function(tolua_S,"isFlipY",tolua_Cocos2d_cocos2d_CCSprite_isFlipY00);
    tolua_function(tolua_S,"updateColor",tolua_Cocos2d_cocos2d_CCSprite_updateColor00);
    tolua_function(tolua_S,"getOpacity",tolua_Cocos2d_cocos2d_CCSprite_getOpacity00);
    tolua_function(tolua_S,"setOpacity",tolua_Cocos2d_cocos2d_CCSprite_setOpacity00);
    tolua_function(tolua_S,"getColor",tolua_Cocos2d_cocos2d_CCSprite_getColor00);
    tolua_function(tolua_S,"setColor",tolua_Cocos2d_cocos2d_CCSprite_setColor00);
    tolua_function(tolua_S,"setIsOpacityModifyRGB",tolua_Cocos2d_cocos2d_CCSprite_setIsOpacityModifyRGB00);
    tolua_function(tolua_S,"getIsOpacityModifyRGB",tolua_Cocos2d_cocos2d_CCSprite_getIsOpacityModifyRGB00);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCSprite_convertToRGBAProtocol00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCSprite_setTexture00);
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCSprite_getTexture00);
    tolua_function(tolua_S,"initWithTexture",tolua_Cocos2d_cocos2d_CCSprite_initWithTexture00);
    tolua_function(tolua_S,"initWithTexture",tolua_Cocos2d_cocos2d_CCSprite_initWithTexture01);
    tolua_function(tolua_S,"initWithSpriteFrame",tolua_Cocos2d_cocos2d_CCSprite_initWithSpriteFrame00);
    tolua_function(tolua_S,"initWithSpriteFrameName",tolua_Cocos2d_cocos2d_CCSprite_initWithSpriteFrameName00);
    tolua_function(tolua_S,"initWithFile",tolua_Cocos2d_cocos2d_CCSprite_initWithFile00);
    tolua_function(tolua_S,"initWithFile",tolua_Cocos2d_cocos2d_CCSprite_initWithFile01);
    tolua_function(tolua_S,"initWithBatchNode",tolua_Cocos2d_cocos2d_CCSprite_initWithBatchNode00);
    tolua_function(tolua_S,"initWithBatchNodeRectInPixels",tolua_Cocos2d_cocos2d_CCSprite_initWithBatchNodeRectInPixels00);
    tolua_function(tolua_S,"updateTransform",tolua_Cocos2d_cocos2d_CCSprite_updateTransform00);
    tolua_function(tolua_S,"useSelfRender",tolua_Cocos2d_cocos2d_CCSprite_useSelfRender00);
    tolua_function(tolua_S,"setTextureRect",tolua_Cocos2d_cocos2d_CCSprite_setTextureRect00);
    tolua_function(tolua_S,"setTextureRectInPixels",tolua_Cocos2d_cocos2d_CCSprite_setTextureRectInPixels00);
    tolua_function(tolua_S,"useBatchNode",tolua_Cocos2d_cocos2d_CCSprite_useBatchNode00);
    tolua_function(tolua_S,"setDisplayFrame",tolua_Cocos2d_cocos2d_CCSprite_setDisplayFrame00);
    tolua_function(tolua_S,"isFrameDisplayed",tolua_Cocos2d_cocos2d_CCSprite_isFrameDisplayed00);
    tolua_function(tolua_S,"displayedFrame",tolua_Cocos2d_cocos2d_CCSprite_displayedFrame00);
    tolua_function(tolua_S,"setDisplayFrameWithAnimationName",tolua_Cocos2d_cocos2d_CCSprite_setDisplayFrameWithAnimationName00);
    tolua_variable(tolua_S,"__CCTextureProtocol__",tolua_get_cocos2d__CCSprite___CCTextureProtocol__,NULL);
    tolua_variable(tolua_S,"__CCRGBAProtocol__",tolua_get_cocos2d__CCSprite___CCRGBAProtocol__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCSpriteBatchNode","cocos2d::CCSpriteBatchNode","cocos2d::CCNode",tolua_collect_cocos2d__CCSpriteBatchNode);
   #else
   tolua_cclass(tolua_S,"CCSpriteBatchNode","cocos2d::CCSpriteBatchNode","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCSpriteBatchNode");
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_delete00);
    tolua_function(tolua_S,"getTextureAtlas",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getTextureAtlas00);
    tolua_function(tolua_S,"setTextureAtlas",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_setTextureAtlas00);
    tolua_function(tolua_S,"getDescendants",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getDescendants00);
    tolua_function(tolua_S,"batchNodeWithTexture",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithTexture00);
    tolua_function(tolua_S,"batchNodeWithTexture",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithTexture01);
    tolua_function(tolua_S,"batchNodeWithFile",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithFile00);
    tolua_function(tolua_S,"batchNodeWithFile",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_batchNodeWithFile01);
    tolua_function(tolua_S,"initWithTexture",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_initWithTexture00);
    tolua_function(tolua_S,"initWithFile",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_initWithFile00);
    tolua_function(tolua_S,"increaseAtlasCapacity",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_increaseAtlasCapacity00);
    tolua_function(tolua_S,"removeChildAtIndex",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeChildAtIndex00);
    tolua_function(tolua_S,"insertChild",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_insertChild00);
    tolua_function(tolua_S,"removeSpriteFromAtlas",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeSpriteFromAtlas00);
    tolua_function(tolua_S,"rebuildIndexInOrder",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_rebuildIndexInOrder00);
    tolua_function(tolua_S,"highestAtlasIndexInChild",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_highestAtlasIndexInChild00);
    tolua_function(tolua_S,"lowestAtlasIndexInChild",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_lowestAtlasIndexInChild00);
    tolua_function(tolua_S,"atlasIndexForChild",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_atlasIndexForChild00);
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getTexture00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_setTexture00);
    tolua_function(tolua_S,"setBlendFunc",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_setBlendFunc00);
    tolua_function(tolua_S,"getBlendFunc",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_getBlendFunc00);
    tolua_function(tolua_S,"visit",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_visit00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild01);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_addChild02);
    tolua_function(tolua_S,"reorderChild",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_reorderChild00);
    tolua_function(tolua_S,"removeChild",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeChild00);
    tolua_function(tolua_S,"removeAllChildrenWithCleanup",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_removeAllChildrenWithCleanup00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCSpriteBatchNode_draw00);
    tolua_variable(tolua_S,"__CCTextureProtocol__",tolua_get_cocos2d__CCSpriteBatchNode___CCTextureProtocol__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCSpriteFrame","cocos2d::CCSpriteFrame","cocos2d::CCObject",tolua_collect_cocos2d__CCSpriteFrame);
   #else
   tolua_cclass(tolua_S,"CCSpriteFrame","cocos2d::CCSpriteFrame","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCSpriteFrame");
    tolua_function(tolua_S,"getRectInPixels",tolua_Cocos2d_cocos2d_CCSpriteFrame_getRectInPixels00);
    tolua_function(tolua_S,"setRectInPixels",tolua_Cocos2d_cocos2d_CCSpriteFrame_setRectInPixels00);
    tolua_function(tolua_S,"isRotated",tolua_Cocos2d_cocos2d_CCSpriteFrame_isRotated00);
    tolua_function(tolua_S,"setRotated",tolua_Cocos2d_cocos2d_CCSpriteFrame_setRotated00);
    tolua_function(tolua_S,"getRect",tolua_Cocos2d_cocos2d_CCSpriteFrame_getRect00);
    tolua_function(tolua_S,"setRect",tolua_Cocos2d_cocos2d_CCSpriteFrame_setRect00);
    tolua_function(tolua_S,"getOffsetInPixels",tolua_Cocos2d_cocos2d_CCSpriteFrame_getOffsetInPixels00);
    tolua_function(tolua_S,"setOffsetInPixels",tolua_Cocos2d_cocos2d_CCSpriteFrame_setOffsetInPixels00);
    tolua_function(tolua_S,"getOriginalSizeInPixels",tolua_Cocos2d_cocos2d_CCSpriteFrame_getOriginalSizeInPixels00);
    tolua_function(tolua_S,"setOriginalSizeInPixels",tolua_Cocos2d_cocos2d_CCSpriteFrame_setOriginalSizeInPixels00);
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCSpriteFrame_getTexture00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCSpriteFrame_setTexture00);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCSpriteFrame_delete00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCSpriteFrame_copyWithZone00);
    tolua_function(tolua_S,"frameWithTexture",tolua_Cocos2d_cocos2d_CCSpriteFrame_frameWithTexture00);
    tolua_function(tolua_S,"frameWithTexture",tolua_Cocos2d_cocos2d_CCSpriteFrame_frameWithTexture01);
    tolua_function(tolua_S,"initWithTexture",tolua_Cocos2d_cocos2d_CCSpriteFrame_initWithTexture00);
    tolua_function(tolua_S,"initWithTexture",tolua_Cocos2d_cocos2d_CCSpriteFrame_initWithTexture01);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCSpriteFrameCache","cocos2d::CCSpriteFrameCache","cocos2d::CCObject",tolua_collect_cocos2d__CCSpriteFrameCache);
   #else
   tolua_cclass(tolua_S,"CCSpriteFrameCache","cocos2d::CCSpriteFrameCache","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCSpriteFrameCache");
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_init00);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_delete00);
    tolua_function(tolua_S,"addSpriteFramesWithDictionary",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithDictionary00);
    tolua_function(tolua_S,"addSpriteFramesWithFile",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile00);
    tolua_function(tolua_S,"addSpriteFramesWithFile",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile01);
    tolua_function(tolua_S,"addSpriteFramesWithFile",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFramesWithFile02);
    tolua_function(tolua_S,"addSpriteFrame",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_addSpriteFrame00);
    tolua_function(tolua_S,"removeSpriteFrames",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFrames00);
    tolua_function(tolua_S,"removeUnusedSpriteFrames",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeUnusedSpriteFrames00);
    tolua_function(tolua_S,"removeSpriteFrameByName",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFrameByName00);
    tolua_function(tolua_S,"removeSpriteFramesFromFile",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFramesFromFile00);
    tolua_function(tolua_S,"removeSpriteFramesFromDictionary",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFramesFromDictionary00);
    tolua_function(tolua_S,"removeSpriteFramesFromTexture",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_removeSpriteFramesFromTexture00);
    tolua_function(tolua_S,"spriteFrameByName",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_spriteFrameByName00);
    tolua_function(tolua_S,"sharedSpriteFrameCache",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_sharedSpriteFrameCache00);
    tolua_function(tolua_S,"purgeSharedSpriteFrameCache",tolua_Cocos2d_cocos2d_CCSpriteFrameCache_purgeSharedSpriteFrameCache00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCString","cocos2d::CCString","cocos2d::CCObject",tolua_collect_cocos2d__CCString);
   #else
   tolua_cclass(tolua_S,"CCString","cocos2d::CCString","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCString");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCString_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCString_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCString_new00_local);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCString_new01);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCString_new01_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCString_new01_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCString_delete00);
    tolua_function(tolua_S,"toInt",tolua_Cocos2d_cocos2d_CCString_toInt00);
    tolua_function(tolua_S,"toUInt",tolua_Cocos2d_cocos2d_CCString_toUInt00);
    tolua_function(tolua_S,"toFloat",tolua_Cocos2d_cocos2d_CCString_toFloat00);
    tolua_function(tolua_S,"isEmpty",tolua_Cocos2d_cocos2d_CCString_isEmpty00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCTextFieldDelegate","cocos2d::CCTextFieldDelegate","",NULL);
   tolua_beginmodule(tolua_S,"CCTextFieldDelegate");
    tolua_function(tolua_S,"onTextFieldAttachWithIME",tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldAttachWithIME00);
    tolua_function(tolua_S,"onTextFieldDetachWithIME",tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldDetachWithIME00);
    tolua_function(tolua_S,"onTextFieldInsertText",tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldInsertText00);
    tolua_function(tolua_S,"onTextFieldDeleteBackward",tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onTextFieldDeleteBackward00);
    tolua_function(tolua_S,"onDraw",tolua_Cocos2d_cocos2d_CCTextFieldDelegate_onDraw00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTextFieldTTF","cocos2d::CCTextFieldTTF","cocos2d::CCLabelTTF",tolua_collect_cocos2d__CCTextFieldTTF);
   #else
   tolua_cclass(tolua_S,"CCTextFieldTTF","cocos2d::CCTextFieldTTF","cocos2d::CCLabelTTF",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTextFieldTTF");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTextFieldTTF_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTextFieldTTF_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTextFieldTTF_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTextFieldTTF_delete00);
    tolua_function(tolua_S,"textFieldWithPlaceHolder",tolua_Cocos2d_cocos2d_CCTextFieldTTF_textFieldWithPlaceHolder00);
    tolua_function(tolua_S,"textFieldWithPlaceHolder",tolua_Cocos2d_cocos2d_CCTextFieldTTF_textFieldWithPlaceHolder01);
    tolua_function(tolua_S,"initWithPlaceHolder",tolua_Cocos2d_cocos2d_CCTextFieldTTF_initWithPlaceHolder00);
    tolua_function(tolua_S,"initWithPlaceHolder",tolua_Cocos2d_cocos2d_CCTextFieldTTF_initWithPlaceHolder01);
    tolua_function(tolua_S,"attachWithIME",tolua_Cocos2d_cocos2d_CCTextFieldTTF_attachWithIME00);
    tolua_function(tolua_S,"detachWithIME",tolua_Cocos2d_cocos2d_CCTextFieldTTF_detachWithIME00);
    tolua_function(tolua_S,"getDelegate",tolua_Cocos2d_cocos2d_CCTextFieldTTF_getDelegate00);
    tolua_function(tolua_S,"setDelegate",tolua_Cocos2d_cocos2d_CCTextFieldTTF_setDelegate00);
    tolua_function(tolua_S,"getCharCount",tolua_Cocos2d_cocos2d_CCTextFieldTTF_getCharCount00);
    tolua_function(tolua_S,"getColorSpaceHolder",tolua_Cocos2d_cocos2d_CCTextFieldTTF_getColorSpaceHolder00);
    tolua_function(tolua_S,"setColorSpaceHolder",tolua_Cocos2d_cocos2d_CCTextFieldTTF_setColorSpaceHolder00);
    tolua_function(tolua_S,"setString",tolua_Cocos2d_cocos2d_CCTextFieldTTF_setString00);
    tolua_function(tolua_S,"getString",tolua_Cocos2d_cocos2d_CCTextFieldTTF_getString00);
    tolua_function(tolua_S,"setPlaceHolder",tolua_Cocos2d_cocos2d_CCTextFieldTTF_setPlaceHolder00);
    tolua_function(tolua_S,"getPlaceHolder",tolua_Cocos2d_cocos2d_CCTextFieldTTF_getPlaceHolder00);
    tolua_variable(tolua_S,"__CCIMEDelegate__",tolua_get_cocos2d__CCTextFieldTTF___CCIMEDelegate__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCImage","cocos2d::CCImage","",NULL);
   tolua_beginmodule(tolua_S,"CCImage");
   tolua_endmodule(tolua_S);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_Automatic",cocos2d::kCCTexture2DPixelFormat_Automatic);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_RGBA8888",cocos2d::kCCTexture2DPixelFormat_RGBA8888);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_RGB888",cocos2d::kCCTexture2DPixelFormat_RGB888);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_RGB565",cocos2d::kCCTexture2DPixelFormat_RGB565);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_A8",cocos2d::kCCTexture2DPixelFormat_A8);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_I8",cocos2d::kCCTexture2DPixelFormat_I8);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_AI88",cocos2d::kCCTexture2DPixelFormat_AI88);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_RGBA4444",cocos2d::kCCTexture2DPixelFormat_RGBA4444);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_RGB5A1",cocos2d::kCCTexture2DPixelFormat_RGB5A1);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_PVRTC4",cocos2d::kCCTexture2DPixelFormat_PVRTC4);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_PVRTC2",cocos2d::kCCTexture2DPixelFormat_PVRTC2);
   tolua_constant(tolua_S,"kCCTexture2DPixelFormat_Default",cocos2d::kCCTexture2DPixelFormat_Default);
   tolua_constant(tolua_S,"kTexture2DPixelFormat_Automatic",cocos2d::kTexture2DPixelFormat_Automatic);
   tolua_constant(tolua_S,"kTexture2DPixelFormat_RGBA8888",cocos2d::kTexture2DPixelFormat_RGBA8888);
   tolua_constant(tolua_S,"kTexture2DPixelFormat_RGB888",cocos2d::kTexture2DPixelFormat_RGB888);
   tolua_constant(tolua_S,"kTexture2DPixelFormat_RGB565",cocos2d::kTexture2DPixelFormat_RGB565);
   tolua_constant(tolua_S,"kTexture2DPixelFormat_A8",cocos2d::kTexture2DPixelFormat_A8);
   tolua_constant(tolua_S,"kTexture2DPixelFormat_RGBA4444",cocos2d::kTexture2DPixelFormat_RGBA4444);
   tolua_constant(tolua_S,"kTexture2DPixelFormat_RGB5A1",cocos2d::kTexture2DPixelFormat_RGB5A1);
   tolua_constant(tolua_S,"kTexture2DPixelFormat_Default",cocos2d::kTexture2DPixelFormat_Default);
   tolua_cclass(tolua_S,"ccTexParams","cocos2d::ccTexParams","",NULL);
   tolua_beginmodule(tolua_S,"ccTexParams");
    tolua_variable(tolua_S,"minFilter",tolua_get_cocos2d__ccTexParams_minFilter,tolua_set_cocos2d__ccTexParams_minFilter);
    tolua_variable(tolua_S,"magFilter",tolua_get_cocos2d__ccTexParams_magFilter,tolua_set_cocos2d__ccTexParams_magFilter);
    tolua_variable(tolua_S,"wrapS",tolua_get_cocos2d__ccTexParams_wrapS,tolua_set_cocos2d__ccTexParams_wrapS);
    tolua_variable(tolua_S,"wrapT",tolua_get_cocos2d__ccTexParams_wrapT,tolua_set_cocos2d__ccTexParams_wrapT);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTexture2D","cocos2d::CCTexture2D","cocos2d::CCObject",tolua_collect_cocos2d__CCTexture2D);
   #else
   tolua_cclass(tolua_S,"CCTexture2D","cocos2d::CCTexture2D","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTexture2D");
    tolua_function(tolua_S,"getPixelFormat",tolua_Cocos2d_cocos2d_CCTexture2D_getPixelFormat00);
    tolua_function(tolua_S,"getPixelsWide",tolua_Cocos2d_cocos2d_CCTexture2D_getPixelsWide00);
    tolua_function(tolua_S,"getPixelsHigh",tolua_Cocos2d_cocos2d_CCTexture2D_getPixelsHigh00);
    tolua_function(tolua_S,"getName",tolua_Cocos2d_cocos2d_CCTexture2D_getName00);
    tolua_function(tolua_S,"getContentSizeInPixels",tolua_Cocos2d_cocos2d_CCTexture2D_getContentSizeInPixels00);
    tolua_function(tolua_S,"setMaxS",tolua_Cocos2d_cocos2d_CCTexture2D_setMaxS00);
    tolua_function(tolua_S,"getMaxS",tolua_Cocos2d_cocos2d_CCTexture2D_getMaxS00);
    tolua_function(tolua_S,"getMaxT",tolua_Cocos2d_cocos2d_CCTexture2D_getMaxT00);
    tolua_function(tolua_S,"setMaxT",tolua_Cocos2d_cocos2d_CCTexture2D_setMaxT00);
    tolua_function(tolua_S,"getHasPremultipliedAlpha",tolua_Cocos2d_cocos2d_CCTexture2D_getHasPremultipliedAlpha00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTexture2D_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTexture2D_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTexture2D_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTexture2D_delete00);
    tolua_function(tolua_S,"description",tolua_Cocos2d_cocos2d_CCTexture2D_description00);
    tolua_function(tolua_S,"releaseData",tolua_Cocos2d_cocos2d_CCTexture2D_releaseData00);
    tolua_function(tolua_S,"keepData",tolua_Cocos2d_cocos2d_CCTexture2D_keepData00);
    tolua_function(tolua_S,"initWithData",tolua_Cocos2d_cocos2d_CCTexture2D_initWithData00);
    tolua_function(tolua_S,"drawAtPoint",tolua_Cocos2d_cocos2d_CCTexture2D_drawAtPoint00);
    tolua_function(tolua_S,"drawInRect",tolua_Cocos2d_cocos2d_CCTexture2D_drawInRect00);
    tolua_function(tolua_S,"initWithImage",tolua_Cocos2d_cocos2d_CCTexture2D_initWithImage00);
    tolua_function(tolua_S,"initWithString",tolua_Cocos2d_cocos2d_CCTexture2D_initWithString00);
    tolua_function(tolua_S,"initWithString",tolua_Cocos2d_cocos2d_CCTexture2D_initWithString01);
    tolua_function(tolua_S,"getContentSize",tolua_Cocos2d_cocos2d_CCTexture2D_getContentSize00);
    tolua_function(tolua_S,"setTexParameters",tolua_Cocos2d_cocos2d_CCTexture2D_setTexParameters00);
    tolua_function(tolua_S,"setAntiAliasTexParameters",tolua_Cocos2d_cocos2d_CCTexture2D_setAntiAliasTexParameters00);
    tolua_function(tolua_S,"setAliasTexParameters",tolua_Cocos2d_cocos2d_CCTexture2D_setAliasTexParameters00);
    tolua_function(tolua_S,"generateMipmap",tolua_Cocos2d_cocos2d_CCTexture2D_generateMipmap00);
    tolua_function(tolua_S,"bitsPerPixelForFormat",tolua_Cocos2d_cocos2d_CCTexture2D_bitsPerPixelForFormat00);
    tolua_function(tolua_S,"setDefaultAlphaPixelFormat",tolua_Cocos2d_cocos2d_CCTexture2D_setDefaultAlphaPixelFormat00);
    tolua_function(tolua_S,"defaultAlphaPixelFormat",tolua_Cocos2d_cocos2d_CCTexture2D_defaultAlphaPixelFormat00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTextureAtlas","cocos2d::CCTextureAtlas","cocos2d::CCObject",tolua_collect_cocos2d__CCTextureAtlas);
   #else
   tolua_cclass(tolua_S,"CCTextureAtlas","cocos2d::CCTextureAtlas","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTextureAtlas");
    tolua_function(tolua_S,"getTotalQuads",tolua_Cocos2d_cocos2d_CCTextureAtlas_getTotalQuads00);
    tolua_function(tolua_S,"getCapacity",tolua_Cocos2d_cocos2d_CCTextureAtlas_getCapacity00);
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCTextureAtlas_getTexture00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCTextureAtlas_setTexture00);
    tolua_function(tolua_S,"setQuads",tolua_Cocos2d_cocos2d_CCTextureAtlas_setQuads00);
    tolua_function(tolua_S,"getQuads",tolua_Cocos2d_cocos2d_CCTextureAtlas_getQuads00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTextureAtlas_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTextureAtlas_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTextureAtlas_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTextureAtlas_delete00);
    tolua_function(tolua_S,"description",tolua_Cocos2d_cocos2d_CCTextureAtlas_description00);
    tolua_function(tolua_S,"textureAtlasWithFile",tolua_Cocos2d_cocos2d_CCTextureAtlas_textureAtlasWithFile00);
    tolua_function(tolua_S,"initWithFile",tolua_Cocos2d_cocos2d_CCTextureAtlas_initWithFile00);
    tolua_function(tolua_S,"textureAtlasWithTexture",tolua_Cocos2d_cocos2d_CCTextureAtlas_textureAtlasWithTexture00);
    tolua_function(tolua_S,"initWithTexture",tolua_Cocos2d_cocos2d_CCTextureAtlas_initWithTexture00);
    tolua_function(tolua_S,"updateQuad",tolua_Cocos2d_cocos2d_CCTextureAtlas_updateQuad00);
    tolua_function(tolua_S,"insertQuad",tolua_Cocos2d_cocos2d_CCTextureAtlas_insertQuad00);
    tolua_function(tolua_S,"insertQuadFromIndex",tolua_Cocos2d_cocos2d_CCTextureAtlas_insertQuadFromIndex00);
    tolua_function(tolua_S,"removeQuadAtIndex",tolua_Cocos2d_cocos2d_CCTextureAtlas_removeQuadAtIndex00);
    tolua_function(tolua_S,"removeAllQuads",tolua_Cocos2d_cocos2d_CCTextureAtlas_removeAllQuads00);
    tolua_function(tolua_S,"resizeCapacity",tolua_Cocos2d_cocos2d_CCTextureAtlas_resizeCapacity00);
    tolua_function(tolua_S,"drawNumberOfQuads",tolua_Cocos2d_cocos2d_CCTextureAtlas_drawNumberOfQuads00);
    tolua_function(tolua_S,"drawNumberOfQuads",tolua_Cocos2d_cocos2d_CCTextureAtlas_drawNumberOfQuads01);
    tolua_function(tolua_S,"drawQuads",tolua_Cocos2d_cocos2d_CCTextureAtlas_drawQuads00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTextureCache","cocos2d::CCTextureCache","cocos2d::CCObject",tolua_collect_cocos2d__CCTextureCache);
   #else
   tolua_cclass(tolua_S,"CCTextureCache","cocos2d::CCTextureCache","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTextureCache");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTextureCache_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTextureCache_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTextureCache_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTextureCache_delete00);
    tolua_function(tolua_S,"description",tolua_Cocos2d_cocos2d_CCTextureCache_description00);
    tolua_function(tolua_S,"sharedTextureCache",tolua_Cocos2d_cocos2d_CCTextureCache_sharedTextureCache00);
    tolua_function(tolua_S,"purgeSharedTextureCache",tolua_Cocos2d_cocos2d_CCTextureCache_purgeSharedTextureCache00);
    tolua_function(tolua_S,"addImage",tolua_Cocos2d_cocos2d_CCTextureCache_addImage00);
    tolua_function(tolua_S,"addUIImage",tolua_Cocos2d_cocos2d_CCTextureCache_addUIImage00);
    tolua_function(tolua_S,"textureForKey",tolua_Cocos2d_cocos2d_CCTextureCache_textureForKey00);
    tolua_function(tolua_S,"removeAllTextures",tolua_Cocos2d_cocos2d_CCTextureCache_removeAllTextures00);
    tolua_function(tolua_S,"removeUnusedTextures",tolua_Cocos2d_cocos2d_CCTextureCache_removeUnusedTextures00);
    tolua_function(tolua_S,"removeTexture",tolua_Cocos2d_cocos2d_CCTextureCache_removeTexture00);
    tolua_function(tolua_S,"removeTextureForKey",tolua_Cocos2d_cocos2d_CCTextureCache_removeTextureForKey00);
    tolua_function(tolua_S,"dumpCachedTextureInfo",tolua_Cocos2d_cocos2d_CCTextureCache_dumpCachedTextureInfo00);
    tolua_function(tolua_S,"reloadAllTextures",tolua_Cocos2d_cocos2d_CCTextureCache_reloadAllTextures00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"sImageTGA","cocos2d::sImageTGA","",NULL);
   tolua_beginmodule(tolua_S,"sImageTGA");
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTileMapAtlas","cocos2d::CCTileMapAtlas","cocos2d::CCAtlasNode",tolua_collect_cocos2d__CCTileMapAtlas);
   #else
   tolua_cclass(tolua_S,"CCTileMapAtlas","cocos2d::CCTileMapAtlas","cocos2d::CCAtlasNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTileMapAtlas");
    tolua_function(tolua_S,"getTGAInfo",tolua_Cocos2d_cocos2d_CCTileMapAtlas_getTGAInfo00);
    tolua_function(tolua_S,"setTGAInfo",tolua_Cocos2d_cocos2d_CCTileMapAtlas_setTGAInfo00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTileMapAtlas_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTileMapAtlas_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTileMapAtlas_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTileMapAtlas_delete00);
    tolua_function(tolua_S,"tileMapAtlasWithTileFile",tolua_Cocos2d_cocos2d_CCTileMapAtlas_tileMapAtlasWithTileFile00);
    tolua_function(tolua_S,"initWithTileFile",tolua_Cocos2d_cocos2d_CCTileMapAtlas_initWithTileFile00);
    tolua_function(tolua_S,"setTile",tolua_Cocos2d_cocos2d_CCTileMapAtlas_setTile00);
    tolua_function(tolua_S,"releaseMap",tolua_Cocos2d_cocos2d_CCTileMapAtlas_releaseMap00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTMXLayer","cocos2d::CCTMXLayer","cocos2d::CCSpriteBatchNode",tolua_collect_cocos2d__CCTMXLayer);
   #else
   tolua_cclass(tolua_S,"CCTMXLayer","cocos2d::CCTMXLayer","cocos2d::CCSpriteBatchNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTMXLayer");
    tolua_function(tolua_S,"getLayerSize",tolua_Cocos2d_cocos2d_CCTMXLayer_getLayerSize00);
    tolua_function(tolua_S,"setLayerSize",tolua_Cocos2d_cocos2d_CCTMXLayer_setLayerSize00);
    tolua_function(tolua_S,"getMapTileSize",tolua_Cocos2d_cocos2d_CCTMXLayer_getMapTileSize00);
    tolua_function(tolua_S,"setMapTileSize",tolua_Cocos2d_cocos2d_CCTMXLayer_setMapTileSize00);
    tolua_function(tolua_S,"getTiles",tolua_Cocos2d_cocos2d_CCTMXLayer_getTiles00);
    tolua_function(tolua_S,"setTiles",tolua_Cocos2d_cocos2d_CCTMXLayer_setTiles00);
    tolua_function(tolua_S,"getTileSet",tolua_Cocos2d_cocos2d_CCTMXLayer_getTileSet00);
    tolua_function(tolua_S,"setTileSet",tolua_Cocos2d_cocos2d_CCTMXLayer_setTileSet00);
    tolua_function(tolua_S,"setLayerOrientation",tolua_Cocos2d_cocos2d_CCTMXLayer_setLayerOrientation00);
    tolua_function(tolua_S,"getLayerOrientation",tolua_Cocos2d_cocos2d_CCTMXLayer_getLayerOrientation00);
    tolua_function(tolua_S,"getProperties",tolua_Cocos2d_cocos2d_CCTMXLayer_getProperties00);
    tolua_function(tolua_S,"setProperties",tolua_Cocos2d_cocos2d_CCTMXLayer_setProperties00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTMXLayer_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTMXLayer_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTMXLayer_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTMXLayer_delete00);
    tolua_function(tolua_S,"layerWithTilesetInfo",tolua_Cocos2d_cocos2d_CCTMXLayer_layerWithTilesetInfo00);
    tolua_function(tolua_S,"initWithTilesetInfo",tolua_Cocos2d_cocos2d_CCTMXLayer_initWithTilesetInfo00);
    tolua_function(tolua_S,"releaseMap",tolua_Cocos2d_cocos2d_CCTMXLayer_releaseMap00);
    tolua_function(tolua_S,"tileAt",tolua_Cocos2d_cocos2d_CCTMXLayer_tileAt00);
    tolua_function(tolua_S,"tileGIDAt",tolua_Cocos2d_cocos2d_CCTMXLayer_tileGIDAt00);
    tolua_function(tolua_S,"setTileGID",tolua_Cocos2d_cocos2d_CCTMXLayer_setTileGID00);
    tolua_function(tolua_S,"removeTileAt",tolua_Cocos2d_cocos2d_CCTMXLayer_removeTileAt00);
    tolua_function(tolua_S,"positionAt",tolua_Cocos2d_cocos2d_CCTMXLayer_positionAt00);
    tolua_function(tolua_S,"propertyNamed",tolua_Cocos2d_cocos2d_CCTMXLayer_propertyNamed00);
    tolua_function(tolua_S,"setupTiles",tolua_Cocos2d_cocos2d_CCTMXLayer_setupTiles00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCTMXLayer_addChild00);
    tolua_function(tolua_S,"removeChild",tolua_Cocos2d_cocos2d_CCTMXLayer_removeChild00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCTMXLayer_draw00);
    tolua_function(tolua_S,"getLayerName",tolua_Cocos2d_cocos2d_CCTMXLayer_getLayerName00);
    tolua_function(tolua_S,"setLayerName",tolua_Cocos2d_cocos2d_CCTMXLayer_setLayerName00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTMXObjectGroup","cocos2d::CCTMXObjectGroup","cocos2d::CCObject",tolua_collect_cocos2d__CCTMXObjectGroup);
   #else
   tolua_cclass(tolua_S,"CCTMXObjectGroup","cocos2d::CCTMXObjectGroup","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTMXObjectGroup");
    tolua_function(tolua_S,"getPositionOffset",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getPositionOffset00);
    tolua_function(tolua_S,"setPositionOffset",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setPositionOffset00);
    tolua_function(tolua_S,"getProperties",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getProperties00);
    tolua_function(tolua_S,"setProperties",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setProperties00);
    tolua_function(tolua_S,"getObjects",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getObjects00);
    tolua_function(tolua_S,"setObjects",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setObjects00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_delete00);
    tolua_function(tolua_S,"getGroupName",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_getGroupName00);
    tolua_function(tolua_S,"setGroupName",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_setGroupName00);
    tolua_function(tolua_S,"propertyNamed",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_propertyNamed00);
    tolua_function(tolua_S,"objectNamed",tolua_Cocos2d_cocos2d_CCTMXObjectGroup_objectNamed00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"CCTMXOrientationOrtho",cocos2d::CCTMXOrientationOrtho);
   tolua_constant(tolua_S,"CCTMXOrientationHex",cocos2d::CCTMXOrientationHex);
   tolua_constant(tolua_S,"CCTMXOrientationIso",cocos2d::CCTMXOrientationIso);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTMXTiledMap","cocos2d::CCTMXTiledMap","cocos2d::CCNode",tolua_collect_cocos2d__CCTMXTiledMap);
   #else
   tolua_cclass(tolua_S,"CCTMXTiledMap","cocos2d::CCTMXTiledMap","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTMXTiledMap");
    tolua_function(tolua_S,"getMapSize",tolua_Cocos2d_cocos2d_CCTMXTiledMap_getMapSize00);
    tolua_function(tolua_S,"setMapSize",tolua_Cocos2d_cocos2d_CCTMXTiledMap_setMapSize00);
    tolua_function(tolua_S,"getTileSize",tolua_Cocos2d_cocos2d_CCTMXTiledMap_getTileSize00);
    tolua_function(tolua_S,"setTileSize",tolua_Cocos2d_cocos2d_CCTMXTiledMap_setTileSize00);
    tolua_function(tolua_S,"getMapOrientation",tolua_Cocos2d_cocos2d_CCTMXTiledMap_getMapOrientation00);
    tolua_function(tolua_S,"setMapOrientation",tolua_Cocos2d_cocos2d_CCTMXTiledMap_setMapOrientation00);
    tolua_function(tolua_S,"getObjectGroups",tolua_Cocos2d_cocos2d_CCTMXTiledMap_getObjectGroups00);
    tolua_function(tolua_S,"setObjectGroups",tolua_Cocos2d_cocos2d_CCTMXTiledMap_setObjectGroups00);
    tolua_function(tolua_S,"getProperties",tolua_Cocos2d_cocos2d_CCTMXTiledMap_getProperties00);
    tolua_function(tolua_S,"setProperties",tolua_Cocos2d_cocos2d_CCTMXTiledMap_setProperties00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTMXTiledMap_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTMXTiledMap_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTMXTiledMap_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTMXTiledMap_delete00);
    tolua_function(tolua_S,"tiledMapWithTMXFile",tolua_Cocos2d_cocos2d_CCTMXTiledMap_tiledMapWithTMXFile00);
    tolua_function(tolua_S,"initWithTMXFile",tolua_Cocos2d_cocos2d_CCTMXTiledMap_initWithTMXFile00);
    tolua_function(tolua_S,"layerNamed",tolua_Cocos2d_cocos2d_CCTMXTiledMap_layerNamed00);
    tolua_function(tolua_S,"objectGroupNamed",tolua_Cocos2d_cocos2d_CCTMXTiledMap_objectGroupNamed00);
    tolua_function(tolua_S,"propertyNamed",tolua_Cocos2d_cocos2d_CCTMXTiledMap_propertyNamed00);
    tolua_function(tolua_S,"propertiesForGID",tolua_Cocos2d_cocos2d_CCTMXTiledMap_propertiesForGID00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"TMXLayerAttribNone",cocos2d::TMXLayerAttribNone);
   tolua_constant(tolua_S,"TMXLayerAttribBase64",cocos2d::TMXLayerAttribBase64);
   tolua_constant(tolua_S,"TMXLayerAttribGzip",cocos2d::TMXLayerAttribGzip);
   tolua_constant(tolua_S,"TMXLayerAttribZlib",cocos2d::TMXLayerAttribZlib);
   tolua_constant(tolua_S,"TMXPropertyNone",cocos2d::TMXPropertyNone);
   tolua_constant(tolua_S,"TMXPropertyMap",cocos2d::TMXPropertyMap);
   tolua_constant(tolua_S,"TMXPropertyLayer",cocos2d::TMXPropertyLayer);
   tolua_constant(tolua_S,"TMXPropertyObjectGroup",cocos2d::TMXPropertyObjectGroup);
   tolua_constant(tolua_S,"TMXPropertyObject",cocos2d::TMXPropertyObject);
   tolua_constant(tolua_S,"TMXPropertyTile",cocos2d::TMXPropertyTile);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTMXLayerInfo","cocos2d::CCTMXLayerInfo","cocos2d::CCObject",tolua_collect_cocos2d__CCTMXLayerInfo);
   #else
   tolua_cclass(tolua_S,"CCTMXLayerInfo","cocos2d::CCTMXLayerInfo","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTMXLayerInfo");
    tolua_function(tolua_S,"getProperties",tolua_Cocos2d_cocos2d_CCTMXLayerInfo_getProperties00);
    tolua_function(tolua_S,"setProperties",tolua_Cocos2d_cocos2d_CCTMXLayerInfo_setProperties00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTMXLayerInfo_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTMXLayerInfo_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTMXLayerInfo_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTMXLayerInfo_delete00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTMXTilesetInfo","cocos2d::CCTMXTilesetInfo","cocos2d::CCObject",tolua_collect_cocos2d__CCTMXTilesetInfo);
   #else
   tolua_cclass(tolua_S,"CCTMXTilesetInfo","cocos2d::CCTMXTilesetInfo","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTMXTilesetInfo");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_delete00);
    tolua_function(tolua_S,"rectForGID",tolua_Cocos2d_cocos2d_CCTMXTilesetInfo_rectForGID00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTMXMapInfo","cocos2d::CCTMXMapInfo","cocos2d::CCObject",tolua_collect_cocos2d__CCTMXMapInfo);
   #else
   tolua_cclass(tolua_S,"CCTMXMapInfo","cocos2d::CCTMXMapInfo","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTMXMapInfo");
    tolua_function(tolua_S,"getOrientation",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getOrientation00);
    tolua_function(tolua_S,"setOrientation",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setOrientation00);
    tolua_function(tolua_S,"getMapSize",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getMapSize00);
    tolua_function(tolua_S,"setMapSize",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setMapSize00);
    tolua_function(tolua_S,"getTileSize",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTileSize00);
    tolua_function(tolua_S,"setTileSize",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTileSize00);
    tolua_function(tolua_S,"getLayers",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getLayers00);
    tolua_function(tolua_S,"setLayers",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setLayers00);
    tolua_function(tolua_S,"getTilesets",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTilesets00);
    tolua_function(tolua_S,"setTilesets",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTilesets00);
    tolua_function(tolua_S,"getObjectGroups",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getObjectGroups00);
    tolua_function(tolua_S,"setObjectGroups",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setObjectGroups00);
    tolua_function(tolua_S,"getParentElement",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getParentElement00);
    tolua_function(tolua_S,"setParentElement",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setParentElement00);
    tolua_function(tolua_S,"getParentGID",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getParentGID00);
    tolua_function(tolua_S,"setParentGID",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setParentGID00);
    tolua_function(tolua_S,"getLayerAttribs",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getLayerAttribs00);
    tolua_function(tolua_S,"setLayerAttribs",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setLayerAttribs00);
    tolua_function(tolua_S,"getStoringCharacters",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getStoringCharacters00);
    tolua_function(tolua_S,"setStoringCharacters",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setStoringCharacters00);
    tolua_function(tolua_S,"getProperties",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getProperties00);
    tolua_function(tolua_S,"setProperties",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setProperties00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTMXMapInfo_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTMXMapInfo_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTMXMapInfo_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTMXMapInfo_delete00);
    tolua_function(tolua_S,"formatWithTMXFile",tolua_Cocos2d_cocos2d_CCTMXMapInfo_formatWithTMXFile00);
    tolua_function(tolua_S,"initWithTMXFile",tolua_Cocos2d_cocos2d_CCTMXMapInfo_initWithTMXFile00);
    tolua_function(tolua_S,"parseXMLFile",tolua_Cocos2d_cocos2d_CCTMXMapInfo_parseXMLFile00);
    tolua_function(tolua_S,"getTileProperties",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTileProperties00);
    tolua_function(tolua_S,"setTileProperties",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTileProperties00);
    tolua_function(tolua_S,"startElement",tolua_Cocos2d_cocos2d_CCTMXMapInfo_startElement00);
    tolua_function(tolua_S,"endElement",tolua_Cocos2d_cocos2d_CCTMXMapInfo_endElement00);
    tolua_function(tolua_S,"textHandler",tolua_Cocos2d_cocos2d_CCTMXMapInfo_textHandler00);
    tolua_function(tolua_S,"getCurrentString",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getCurrentString00);
    tolua_function(tolua_S,"setCurrentString",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setCurrentString00);
    tolua_function(tolua_S,"getTMXFileName",tolua_Cocos2d_cocos2d_CCTMXMapInfo_getTMXFileName00);
    tolua_function(tolua_S,"setTMXFileName",tolua_Cocos2d_cocos2d_CCTMXMapInfo_setTMXFileName00);
    tolua_variable(tolua_S,"__CCSAXDelegator__",tolua_get_cocos2d__CCTMXMapInfo___CCSAXDelegator__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTouch","cocos2d::CCTouch","cocos2d::CCObject",tolua_collect_cocos2d__CCTouch);
   #else
   tolua_cclass(tolua_S,"CCTouch","cocos2d::CCTouch","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTouch");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTouch_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTouch_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTouch_new00_local);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTouch_new01);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTouch_new01_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTouch_new01_local);
    tolua_function(tolua_S,"locationInView",tolua_Cocos2d_cocos2d_CCTouch_locationInView00);
    tolua_function(tolua_S,"previousLocationInView",tolua_Cocos2d_cocos2d_CCTouch_previousLocationInView00);
    tolua_function(tolua_S,"view",tolua_Cocos2d_cocos2d_CCTouch_view00);
    tolua_function(tolua_S,"SetTouchInfo",tolua_Cocos2d_cocos2d_CCTouch_SetTouchInfo00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEvent","cocos2d::CCEvent","cocos2d::CCObject",NULL);
   tolua_beginmodule(tolua_S,"CCEvent");
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"ccTouchSelectorBeganBit",cocos2d::ccTouchSelectorBeganBit);
   tolua_constant(tolua_S,"ccTouchSelectorMovedBit",cocos2d::ccTouchSelectorMovedBit);
   tolua_constant(tolua_S,"ccTouchSelectorEndedBit",cocos2d::ccTouchSelectorEndedBit);
   tolua_constant(tolua_S,"ccTouchSelectorCancelledBit",cocos2d::ccTouchSelectorCancelledBit);
   tolua_constant(tolua_S,"ccTouchSelectorAllBits",cocos2d::ccTouchSelectorAllBits);
   tolua_constant(tolua_S,"CCTOUCHBEGAN",cocos2d::CCTOUCHBEGAN);
   tolua_constant(tolua_S,"CCTOUCHMOVED",cocos2d::CCTOUCHMOVED);
   tolua_constant(tolua_S,"CCTOUCHENDED",cocos2d::CCTOUCHENDED);
   tolua_constant(tolua_S,"CCTOUCHCANCELLED",cocos2d::CCTOUCHCANCELLED);
   tolua_constant(tolua_S,"ccTouchMax",cocos2d::ccTouchMax);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCSet","cocos2d::CCSet","cocos2d::CCObject",tolua_collect_cocos2d__CCSet);
   #else
   tolua_cclass(tolua_S,"CCSet","cocos2d::CCSet","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCSet");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCSet_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCSet_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCSet_new00_local);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCSet_new01);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCSet_new01_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCSet_new01_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCSet_delete00);
    tolua_function(tolua_S,"copy",tolua_Cocos2d_cocos2d_CCSet_copy00);
    tolua_function(tolua_S,"mutableCopy",tolua_Cocos2d_cocos2d_CCSet_mutableCopy00);
    tolua_function(tolua_S,"count",tolua_Cocos2d_cocos2d_CCSet_count00);
    tolua_function(tolua_S,"addObject",tolua_Cocos2d_cocos2d_CCSet_addObject00);
    tolua_function(tolua_S,"removeObject",tolua_Cocos2d_cocos2d_CCSet_removeObject00);
    tolua_function(tolua_S,"containsObject",tolua_Cocos2d_cocos2d_CCSet_containsObject00);
    tolua_function(tolua_S,"begin",tolua_Cocos2d_cocos2d_CCSet_begin00);
    tolua_function(tolua_S,"end",tolua_Cocos2d_cocos2d_CCSet_end00);
    tolua_function(tolua_S,"anyObject",tolua_Cocos2d_cocos2d_CCSet_anyObject00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccTouchHandlerHelperData","cocos2d::ccTouchHandlerHelperData","",NULL);
   tolua_beginmodule(tolua_S,"ccTouchHandlerHelperData");
    tolua_variable(tolua_S,"m_type",tolua_get_cocos2d__ccTouchHandlerHelperData_m_type,tolua_set_cocos2d__ccTouchHandlerHelperData_m_type);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"EGLTouchDelegate","cocos2d::EGLTouchDelegate","",tolua_collect_cocos2d__EGLTouchDelegate);
   #else
   tolua_cclass(tolua_S,"EGLTouchDelegate","cocos2d::EGLTouchDelegate","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"EGLTouchDelegate");
    tolua_function(tolua_S,"touchesBegan",tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesBegan00);
    tolua_function(tolua_S,"touchesMoved",tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesMoved00);
    tolua_function(tolua_S,"touchesEnded",tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesEnded00);
    tolua_function(tolua_S,"touchesCancelled",tolua_Cocos2d_cocos2d_EGLTouchDelegate_touchesCancelled00);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_EGLTouchDelegate_delete00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCTouchHandler","cocos2d::CCTouchHandler","",NULL);
   tolua_beginmodule(tolua_S,"CCTouchHandler");
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"_ccCArray","cocos2d::_ccCArray","",NULL);
   tolua_beginmodule(tolua_S,"_ccCArray");
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTouchDispatcher","cocos2d::CCTouchDispatcher","cocos2d::CCObject",tolua_collect_cocos2d__CCTouchDispatcher);
   #else
   tolua_cclass(tolua_S,"CCTouchDispatcher","cocos2d::CCTouchDispatcher","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTouchDispatcher");
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTouchDispatcher_delete00);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCTouchDispatcher_init00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTouchDispatcher_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTouchDispatcher_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTouchDispatcher_new00_local);
    tolua_function(tolua_S,"isDispatchEvents",tolua_Cocos2d_cocos2d_CCTouchDispatcher_isDispatchEvents00);
    tolua_function(tolua_S,"setDispatchEvents",tolua_Cocos2d_cocos2d_CCTouchDispatcher_setDispatchEvents00);
    tolua_function(tolua_S,"addStandardDelegate",tolua_Cocos2d_cocos2d_CCTouchDispatcher_addStandardDelegate00);
    tolua_function(tolua_S,"addTargetedDelegate",tolua_Cocos2d_cocos2d_CCTouchDispatcher_addTargetedDelegate00);
    tolua_function(tolua_S,"removeDelegate",tolua_Cocos2d_cocos2d_CCTouchDispatcher_removeDelegate00);
    tolua_function(tolua_S,"removeAllDelegates",tolua_Cocos2d_cocos2d_CCTouchDispatcher_removeAllDelegates00);
    tolua_function(tolua_S,"setPriority",tolua_Cocos2d_cocos2d_CCTouchDispatcher_setPriority00);
    tolua_function(tolua_S,"touches",tolua_Cocos2d_cocos2d_CCTouchDispatcher_touches00);
    tolua_function(tolua_S,"touchesBegan",tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesBegan00);
    tolua_function(tolua_S,"touchesMoved",tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesMoved00);
    tolua_function(tolua_S,"touchesEnded",tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesEnded00);
    tolua_function(tolua_S,"touchesCancelled",tolua_Cocos2d_cocos2d_CCTouchDispatcher_touchesCancelled00);
    tolua_function(tolua_S,"sharedDispatcher",tolua_Cocos2d_cocos2d_CCTouchDispatcher_sharedDispatcher00);
    tolua_variable(tolua_S,"__EGLTouchDelegate__",tolua_get_cocos2d__CCTouchDispatcher___EGLTouchDelegate__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"kOrientationLeftOver",cocos2d::kOrientationLeftOver);
   tolua_constant(tolua_S,"kOrientationRightOver",cocos2d::kOrientationRightOver);
   tolua_constant(tolua_S,"kOrientationUpOver",cocos2d::kOrientationUpOver);
   tolua_constant(tolua_S,"kOrientationDownOver",cocos2d::kOrientationDownOver);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionScene","cocos2d::CCTransitionScene","cocos2d::CCScene",tolua_collect_cocos2d__CCTransitionScene);
   #else
   tolua_cclass(tolua_S,"CCTransitionScene","cocos2d::CCTransitionScene","cocos2d::CCScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionScene");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionScene_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionScene_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionScene_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionScene_delete00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCTransitionScene_draw00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionScene_onEnter00);
    tolua_function(tolua_S,"onExit",tolua_Cocos2d_cocos2d_CCTransitionScene_onExit00);
    tolua_function(tolua_S,"cleanup",tolua_Cocos2d_cocos2d_CCTransitionScene_cleanup00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionScene_transitionWithDuration00);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCTransitionScene_initWithDuration00);
    tolua_function(tolua_S,"finish",tolua_Cocos2d_cocos2d_CCTransitionScene_finish00);
    tolua_function(tolua_S,"hideOutShowIn",tolua_Cocos2d_cocos2d_CCTransitionScene_hideOutShowIn00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionSceneOriented","cocos2d::CCTransitionSceneOriented","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionSceneOriented);
   #else
   tolua_cclass(tolua_S,"CCTransitionSceneOriented","cocos2d::CCTransitionSceneOriented","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionSceneOriented");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_delete00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_transitionWithDuration00);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCTransitionSceneOriented_initWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionRotoZoom","cocos2d::CCTransitionRotoZoom","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionRotoZoom);
   #else
   tolua_cclass(tolua_S,"CCTransitionRotoZoom","cocos2d::CCTransitionRotoZoom","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionRotoZoom");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_onEnter00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionRotoZoom_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionJumpZoom","cocos2d::CCTransitionJumpZoom","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionJumpZoom);
   #else
   tolua_cclass(tolua_S,"CCTransitionJumpZoom","cocos2d::CCTransitionJumpZoom","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionJumpZoom");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_onEnter00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionJumpZoom_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionMoveInL","cocos2d::CCTransitionMoveInL","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionMoveInL);
   #else
   tolua_cclass(tolua_S,"CCTransitionMoveInL","cocos2d::CCTransitionMoveInL","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionMoveInL");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionMoveInL_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionMoveInL_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionMoveInL_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionMoveInL_delete00);
    tolua_function(tolua_S,"initScenes",tolua_Cocos2d_cocos2d_CCTransitionMoveInL_initScenes00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCTransitionMoveInL_action00);
    tolua_function(tolua_S,"easeActionWithAction",tolua_Cocos2d_cocos2d_CCTransitionMoveInL_easeActionWithAction00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionMoveInL_onEnter00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionMoveInL_transitionWithDuration00);
    tolua_variable(tolua_S,"__CCTransitionEaseScene__",tolua_get_cocos2d__CCTransitionMoveInL___CCTransitionEaseScene__,NULL);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionMoveInR","cocos2d::CCTransitionMoveInR","cocos2d::CCTransitionMoveInL",tolua_collect_cocos2d__CCTransitionMoveInR);
   #else
   tolua_cclass(tolua_S,"CCTransitionMoveInR","cocos2d::CCTransitionMoveInR","cocos2d::CCTransitionMoveInL",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionMoveInR");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionMoveInR_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionMoveInR_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionMoveInR_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionMoveInR_delete00);
    tolua_function(tolua_S,"initScenes",tolua_Cocos2d_cocos2d_CCTransitionMoveInR_initScenes00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionMoveInR_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionMoveInT","cocos2d::CCTransitionMoveInT","cocos2d::CCTransitionMoveInL",tolua_collect_cocos2d__CCTransitionMoveInT);
   #else
   tolua_cclass(tolua_S,"CCTransitionMoveInT","cocos2d::CCTransitionMoveInT","cocos2d::CCTransitionMoveInL",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionMoveInT");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionMoveInT_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionMoveInT_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionMoveInT_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionMoveInT_delete00);
    tolua_function(tolua_S,"initScenes",tolua_Cocos2d_cocos2d_CCTransitionMoveInT_initScenes00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionMoveInT_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionMoveInB","cocos2d::CCTransitionMoveInB","cocos2d::CCTransitionMoveInL",tolua_collect_cocos2d__CCTransitionMoveInB);
   #else
   tolua_cclass(tolua_S,"CCTransitionMoveInB","cocos2d::CCTransitionMoveInB","cocos2d::CCTransitionMoveInL",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionMoveInB");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionMoveInB_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionMoveInB_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionMoveInB_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionMoveInB_delete00);
    tolua_function(tolua_S,"initScenes",tolua_Cocos2d_cocos2d_CCTransitionMoveInB_initScenes00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionMoveInB_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionSlideInL","cocos2d::CCTransitionSlideInL","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionSlideInL);
   #else
   tolua_cclass(tolua_S,"CCTransitionSlideInL","cocos2d::CCTransitionSlideInL","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionSlideInL");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionSlideInL_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionSlideInL_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionSlideInL_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionSlideInL_delete00);
    tolua_function(tolua_S,"initScenes",tolua_Cocos2d_cocos2d_CCTransitionSlideInL_initScenes00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCTransitionSlideInL_action00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionSlideInL_onEnter00);
    tolua_function(tolua_S,"easeActionWithAction",tolua_Cocos2d_cocos2d_CCTransitionSlideInL_easeActionWithAction00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionSlideInL_transitionWithDuration00);
    tolua_variable(tolua_S,"__CCTransitionEaseScene__",tolua_get_cocos2d__CCTransitionSlideInL___CCTransitionEaseScene__,NULL);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionSlideInR","cocos2d::CCTransitionSlideInR","cocos2d::CCTransitionSlideInL",tolua_collect_cocos2d__CCTransitionSlideInR);
   #else
   tolua_cclass(tolua_S,"CCTransitionSlideInR","cocos2d::CCTransitionSlideInR","cocos2d::CCTransitionSlideInL",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionSlideInR");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionSlideInR_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionSlideInR_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionSlideInR_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionSlideInR_delete00);
    tolua_function(tolua_S,"initScenes",tolua_Cocos2d_cocos2d_CCTransitionSlideInR_initScenes00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCTransitionSlideInR_action00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionSlideInR_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionSlideInB","cocos2d::CCTransitionSlideInB","cocos2d::CCTransitionSlideInL",tolua_collect_cocos2d__CCTransitionSlideInB);
   #else
   tolua_cclass(tolua_S,"CCTransitionSlideInB","cocos2d::CCTransitionSlideInB","cocos2d::CCTransitionSlideInL",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionSlideInB");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionSlideInB_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionSlideInB_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionSlideInB_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionSlideInB_delete00);
    tolua_function(tolua_S,"initScenes",tolua_Cocos2d_cocos2d_CCTransitionSlideInB_initScenes00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCTransitionSlideInB_action00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionSlideInB_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionSlideInT","cocos2d::CCTransitionSlideInT","cocos2d::CCTransitionSlideInL",tolua_collect_cocos2d__CCTransitionSlideInT);
   #else
   tolua_cclass(tolua_S,"CCTransitionSlideInT","cocos2d::CCTransitionSlideInT","cocos2d::CCTransitionSlideInL",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionSlideInT");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionSlideInT_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionSlideInT_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionSlideInT_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionSlideInT_delete00);
    tolua_function(tolua_S,"initScenes",tolua_Cocos2d_cocos2d_CCTransitionSlideInT_initScenes00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCTransitionSlideInT_action00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionSlideInT_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionShrinkGrow","cocos2d::CCTransitionShrinkGrow","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionShrinkGrow);
   #else
   tolua_cclass(tolua_S,"CCTransitionShrinkGrow","cocos2d::CCTransitionShrinkGrow","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionShrinkGrow");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_onEnter00);
    tolua_function(tolua_S,"easeActionWithAction",tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_easeActionWithAction00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionShrinkGrow_transitionWithDuration00);
    tolua_variable(tolua_S,"__CCTransitionEaseScene__",tolua_get_cocos2d__CCTransitionShrinkGrow___CCTransitionEaseScene__,NULL);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionFlipX","cocos2d::CCTransitionFlipX","cocos2d::CCTransitionSceneOriented",tolua_collect_cocos2d__CCTransitionFlipX);
   #else
   tolua_cclass(tolua_S,"CCTransitionFlipX","cocos2d::CCTransitionFlipX","cocos2d::CCTransitionSceneOriented",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionFlipX");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionFlipX_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionFlipX_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionFlipX_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionFlipX_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionFlipX_onEnter00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFlipX_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionFlipY","cocos2d::CCTransitionFlipY","cocos2d::CCTransitionSceneOriented",tolua_collect_cocos2d__CCTransitionFlipY);
   #else
   tolua_cclass(tolua_S,"CCTransitionFlipY","cocos2d::CCTransitionFlipY","cocos2d::CCTransitionSceneOriented",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionFlipY");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionFlipY_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionFlipY_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionFlipY_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionFlipY_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionFlipY_onEnter00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFlipY_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionFlipAngular","cocos2d::CCTransitionFlipAngular","cocos2d::CCTransitionSceneOriented",tolua_collect_cocos2d__CCTransitionFlipAngular);
   #else
   tolua_cclass(tolua_S,"CCTransitionFlipAngular","cocos2d::CCTransitionFlipAngular","cocos2d::CCTransitionSceneOriented",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionFlipAngular");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_onEnter00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFlipAngular_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionZoomFlipX","cocos2d::CCTransitionZoomFlipX","cocos2d::CCTransitionSceneOriented",tolua_collect_cocos2d__CCTransitionZoomFlipX);
   #else
   tolua_cclass(tolua_S,"CCTransitionZoomFlipX","cocos2d::CCTransitionZoomFlipX","cocos2d::CCTransitionSceneOriented",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionZoomFlipX");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_onEnter00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipX_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionZoomFlipY","cocos2d::CCTransitionZoomFlipY","cocos2d::CCTransitionSceneOriented",tolua_collect_cocos2d__CCTransitionZoomFlipY);
   #else
   tolua_cclass(tolua_S,"CCTransitionZoomFlipY","cocos2d::CCTransitionZoomFlipY","cocos2d::CCTransitionSceneOriented",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionZoomFlipY");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_onEnter00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipY_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionZoomFlipAngular","cocos2d::CCTransitionZoomFlipAngular","cocos2d::CCTransitionSceneOriented",tolua_collect_cocos2d__CCTransitionZoomFlipAngular);
   #else
   tolua_cclass(tolua_S,"CCTransitionZoomFlipAngular","cocos2d::CCTransitionZoomFlipAngular","cocos2d::CCTransitionSceneOriented",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionZoomFlipAngular");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_onEnter00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionZoomFlipAngular_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionFade","cocos2d::CCTransitionFade","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionFade);
   #else
   tolua_cclass(tolua_S,"CCTransitionFade","cocos2d::CCTransitionFade","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionFade");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionFade_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionFade_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionFade_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionFade_delete00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFade_transitionWithDuration00);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFade_initWithDuration00);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFade_initWithDuration01);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionFade_onEnter00);
    tolua_function(tolua_S,"onExit",tolua_Cocos2d_cocos2d_CCTransitionFade_onExit00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionCrossFade","cocos2d::CCTransitionCrossFade","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionCrossFade);
   #else
   tolua_cclass(tolua_S,"CCTransitionCrossFade","cocos2d::CCTransitionCrossFade","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionCrossFade");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionCrossFade_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionCrossFade_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionCrossFade_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionCrossFade_delete00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCTransitionCrossFade_draw00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionCrossFade_onEnter00);
    tolua_function(tolua_S,"onExit",tolua_Cocos2d_cocos2d_CCTransitionCrossFade_onExit00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionCrossFade_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionTurnOffTiles","cocos2d::CCTransitionTurnOffTiles","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionTurnOffTiles);
   #else
   tolua_cclass(tolua_S,"CCTransitionTurnOffTiles","cocos2d::CCTransitionTurnOffTiles","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionTurnOffTiles");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_onEnter00);
    tolua_function(tolua_S,"easeActionWithAction",tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_easeActionWithAction00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionTurnOffTiles_transitionWithDuration00);
    tolua_variable(tolua_S,"__CCTransitionEaseScene__",tolua_get_cocos2d__CCTransitionTurnOffTiles___CCTransitionEaseScene__,NULL);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionSplitCols","cocos2d::CCTransitionSplitCols","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionSplitCols);
   #else
   tolua_cclass(tolua_S,"CCTransitionSplitCols","cocos2d::CCTransitionSplitCols","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionSplitCols");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionSplitCols_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionSplitCols_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionSplitCols_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionSplitCols_delete00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCTransitionSplitCols_action00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionSplitCols_onEnter00);
    tolua_function(tolua_S,"easeActionWithAction",tolua_Cocos2d_cocos2d_CCTransitionSplitCols_easeActionWithAction00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionSplitCols_transitionWithDuration00);
    tolua_variable(tolua_S,"__CCTransitionEaseScene__",tolua_get_cocos2d__CCTransitionSplitCols___CCTransitionEaseScene__,NULL);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionSplitRows","cocos2d::CCTransitionSplitRows","cocos2d::CCTransitionSplitCols",tolua_collect_cocos2d__CCTransitionSplitRows);
   #else
   tolua_cclass(tolua_S,"CCTransitionSplitRows","cocos2d::CCTransitionSplitRows","cocos2d::CCTransitionSplitCols",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionSplitRows");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionSplitRows_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionSplitRows_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionSplitRows_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionSplitRows_delete00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCTransitionSplitRows_action00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionSplitRows_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionFadeTR","cocos2d::CCTransitionFadeTR","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionFadeTR);
   #else
   tolua_cclass(tolua_S,"CCTransitionFadeTR","cocos2d::CCTransitionFadeTR","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionFadeTR");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionFadeTR_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionFadeTR_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionFadeTR_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionFadeTR_delete00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCTransitionFadeTR_actionWithSize00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionFadeTR_onEnter00);
    tolua_function(tolua_S,"easeActionWithAction",tolua_Cocos2d_cocos2d_CCTransitionFadeTR_easeActionWithAction00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFadeTR_transitionWithDuration00);
    tolua_variable(tolua_S,"__CCTransitionEaseScene__",tolua_get_cocos2d__CCTransitionFadeTR___CCTransitionEaseScene__,NULL);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionFadeBL","cocos2d::CCTransitionFadeBL","cocos2d::CCTransitionFadeTR",tolua_collect_cocos2d__CCTransitionFadeBL);
   #else
   tolua_cclass(tolua_S,"CCTransitionFadeBL","cocos2d::CCTransitionFadeBL","cocos2d::CCTransitionFadeTR",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionFadeBL");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionFadeBL_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionFadeBL_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionFadeBL_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionFadeBL_delete00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCTransitionFadeBL_actionWithSize00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFadeBL_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionFadeUp","cocos2d::CCTransitionFadeUp","cocos2d::CCTransitionFadeTR",tolua_collect_cocos2d__CCTransitionFadeUp);
   #else
   tolua_cclass(tolua_S,"CCTransitionFadeUp","cocos2d::CCTransitionFadeUp","cocos2d::CCTransitionFadeTR",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionFadeUp");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionFadeUp_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionFadeUp_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionFadeUp_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionFadeUp_delete00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCTransitionFadeUp_actionWithSize00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFadeUp_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionFadeDown","cocos2d::CCTransitionFadeDown","cocos2d::CCTransitionFadeTR",tolua_collect_cocos2d__CCTransitionFadeDown);
   #else
   tolua_cclass(tolua_S,"CCTransitionFadeDown","cocos2d::CCTransitionFadeDown","cocos2d::CCTransitionFadeTR",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionFadeDown");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionFadeDown_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionFadeDown_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionFadeDown_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionFadeDown_delete00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCTransitionFadeDown_actionWithSize00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionFadeDown_transitionWithDuration00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionPageTurn","cocos2d::CCTransitionPageTurn","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionPageTurn);
   #else
   tolua_cclass(tolua_S,"CCTransitionPageTurn","cocos2d::CCTransitionPageTurn","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionPageTurn");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionPageTurn_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionPageTurn_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionPageTurn_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionPageTurn_delete00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionPageTurn_transitionWithDuration00);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCTransitionPageTurn_initWithDuration00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCTransitionPageTurn_actionWithSize00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionPageTurn_onEnter00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionRadialCCW","cocos2d::CCTransitionRadialCCW","cocos2d::CCTransitionScene",tolua_collect_cocos2d__CCTransitionRadialCCW);
   #else
   tolua_cclass(tolua_S,"CCTransitionRadialCCW","cocos2d::CCTransitionRadialCCW","cocos2d::CCTransitionScene",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionRadialCCW");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_delete00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_onEnter00);
    tolua_function(tolua_S,"onExit",tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_onExit00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionRadialCCW_transitionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTransitionRadialCW","cocos2d::CCTransitionRadialCW","cocos2d::CCTransitionRadialCCW",tolua_collect_cocos2d__CCTransitionRadialCW);
   #else
   tolua_cclass(tolua_S,"CCTransitionRadialCW","cocos2d::CCTransitionRadialCW","cocos2d::CCTransitionRadialCCW",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTransitionRadialCW");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTransitionRadialCW_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTransitionRadialCW_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTransitionRadialCW_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCTransitionRadialCW_delete00);
    tolua_function(tolua_S,"transitionWithDuration",tolua_Cocos2d_cocos2d_CCTransitionRadialCW_transitionWithDuration00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ccColor3B","cocos2d::ccColor3B","",tolua_collect_cocos2d__ccColor3B);
   #else
   tolua_cclass(tolua_S,"ccColor3B","cocos2d::ccColor3B","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ccColor3B");
    tolua_variable(tolua_S,"r",tolua_get_cocos2d__ccColor3B_unsigned_r,tolua_set_cocos2d__ccColor3B_unsigned_r);
    tolua_variable(tolua_S,"g",tolua_get_cocos2d__ccColor3B_unsigned_g,tolua_set_cocos2d__ccColor3B_unsigned_g);
    tolua_variable(tolua_S,"b",tolua_get_cocos2d__ccColor3B_unsigned_b,tolua_set_cocos2d__ccColor3B_unsigned_b);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"ccc3",tolua_Cocos2d_cocos2d_ccc300);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ccColor4B","cocos2d::ccColor4B","",tolua_collect_cocos2d__ccColor4B);
   #else
   tolua_cclass(tolua_S,"ccColor4B","cocos2d::ccColor4B","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ccColor4B");
    tolua_variable(tolua_S,"r",tolua_get_cocos2d__ccColor4B_unsigned_r,tolua_set_cocos2d__ccColor4B_unsigned_r);
    tolua_variable(tolua_S,"g",tolua_get_cocos2d__ccColor4B_unsigned_g,tolua_set_cocos2d__ccColor4B_unsigned_g);
    tolua_variable(tolua_S,"b",tolua_get_cocos2d__ccColor4B_unsigned_b,tolua_set_cocos2d__ccColor4B_unsigned_b);
    tolua_variable(tolua_S,"a",tolua_get_cocos2d__ccColor4B_unsigned_a,tolua_set_cocos2d__ccColor4B_unsigned_a);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"ccc4",tolua_Cocos2d_cocos2d_ccc400);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ccColor4F","cocos2d::ccColor4F","",tolua_collect_cocos2d__ccColor4F);
   #else
   tolua_cclass(tolua_S,"ccColor4F","cocos2d::ccColor4F","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ccColor4F");
    tolua_variable(tolua_S,"r",tolua_get_cocos2d__ccColor4F_r,tolua_set_cocos2d__ccColor4F_r);
    tolua_variable(tolua_S,"g",tolua_get_cocos2d__ccColor4F_g,tolua_set_cocos2d__ccColor4F_g);
    tolua_variable(tolua_S,"b",tolua_get_cocos2d__ccColor4F_b,tolua_set_cocos2d__ccColor4F_b);
    tolua_variable(tolua_S,"a",tolua_get_cocos2d__ccColor4F_a,tolua_set_cocos2d__ccColor4F_a);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"ccc4FFromccc3B",tolua_Cocos2d_cocos2d_ccc4FFromccc3B00);
   tolua_function(tolua_S,"ccc4FFromccc4B",tolua_Cocos2d_cocos2d_ccc4FFromccc4B00);
   tolua_function(tolua_S,"ccc4FEqual",tolua_Cocos2d_cocos2d_ccc4FEqual00);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ccVertex2F","cocos2d::ccVertex2F","",tolua_collect_cocos2d__ccVertex2F);
   #else
   tolua_cclass(tolua_S,"ccVertex2F","cocos2d::ccVertex2F","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ccVertex2F");
    tolua_variable(tolua_S,"x",tolua_get_cocos2d__ccVertex2F_x,tolua_set_cocos2d__ccVertex2F_x);
    tolua_variable(tolua_S,"y",tolua_get_cocos2d__ccVertex2F_y,tolua_set_cocos2d__ccVertex2F_y);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"vertex2",tolua_Cocos2d_cocos2d_vertex200);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ccVertex3F","cocos2d::ccVertex3F","",tolua_collect_cocos2d__ccVertex3F);
   #else
   tolua_cclass(tolua_S,"ccVertex3F","cocos2d::ccVertex3F","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ccVertex3F");
    tolua_variable(tolua_S,"x",tolua_get_cocos2d__ccVertex3F_x,tolua_set_cocos2d__ccVertex3F_x);
    tolua_variable(tolua_S,"y",tolua_get_cocos2d__ccVertex3F_y,tolua_set_cocos2d__ccVertex3F_y);
    tolua_variable(tolua_S,"z",tolua_get_cocos2d__ccVertex3F_z,tolua_set_cocos2d__ccVertex3F_z);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"vertex3",tolua_Cocos2d_cocos2d_vertex300);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ccTex2F","cocos2d::ccTex2F","",tolua_collect_cocos2d__ccTex2F);
   #else
   tolua_cclass(tolua_S,"ccTex2F","cocos2d::ccTex2F","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ccTex2F");
    tolua_variable(tolua_S,"u",tolua_get_cocos2d__ccTex2F_u,tolua_set_cocos2d__ccTex2F_u);
    tolua_variable(tolua_S,"v",tolua_get_cocos2d__ccTex2F_v,tolua_set_cocos2d__ccTex2F_v);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"tex2",tolua_Cocos2d_cocos2d_tex200);
   tolua_cclass(tolua_S,"ccPointSprite","cocos2d::ccPointSprite","",NULL);
   tolua_beginmodule(tolua_S,"ccPointSprite");
    tolua_variable(tolua_S,"pos",tolua_get_cocos2d__ccPointSprite_pos,tolua_set_cocos2d__ccPointSprite_pos);
    tolua_variable(tolua_S,"color",tolua_get_cocos2d__ccPointSprite_color,tolua_set_cocos2d__ccPointSprite_color);
    tolua_variable(tolua_S,"size",tolua_get_cocos2d__ccPointSprite_size,tolua_set_cocos2d__ccPointSprite_size);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccQuad2","cocos2d::ccQuad2","",NULL);
   tolua_beginmodule(tolua_S,"ccQuad2");
    tolua_variable(tolua_S,"tl",tolua_get_cocos2d__ccQuad2_tl,tolua_set_cocos2d__ccQuad2_tl);
    tolua_variable(tolua_S,"tr",tolua_get_cocos2d__ccQuad2_tr,tolua_set_cocos2d__ccQuad2_tr);
    tolua_variable(tolua_S,"bl",tolua_get_cocos2d__ccQuad2_bl,tolua_set_cocos2d__ccQuad2_bl);
    tolua_variable(tolua_S,"br",tolua_get_cocos2d__ccQuad2_br,tolua_set_cocos2d__ccQuad2_br);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccQuad3","cocos2d::ccQuad3","",NULL);
   tolua_beginmodule(tolua_S,"ccQuad3");
    tolua_variable(tolua_S,"bl",tolua_get_cocos2d__ccQuad3_bl,tolua_set_cocos2d__ccQuad3_bl);
    tolua_variable(tolua_S,"br",tolua_get_cocos2d__ccQuad3_br,tolua_set_cocos2d__ccQuad3_br);
    tolua_variable(tolua_S,"tl",tolua_get_cocos2d__ccQuad3_tl,tolua_set_cocos2d__ccQuad3_tl);
    tolua_variable(tolua_S,"tr",tolua_get_cocos2d__ccQuad3_tr,tolua_set_cocos2d__ccQuad3_tr);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ccGridSize","cocos2d::ccGridSize","",tolua_collect_cocos2d__ccGridSize);
   #else
   tolua_cclass(tolua_S,"ccGridSize","cocos2d::ccGridSize","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ccGridSize");
    tolua_variable(tolua_S,"x",tolua_get_cocos2d__ccGridSize_x,tolua_set_cocos2d__ccGridSize_x);
    tolua_variable(tolua_S,"y",tolua_get_cocos2d__ccGridSize_y,tolua_set_cocos2d__ccGridSize_y);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"ccg",tolua_Cocos2d_cocos2d_ccg00);
   tolua_cclass(tolua_S,"ccV2F_C4B_T2F","cocos2d::ccV2F_C4B_T2F","",NULL);
   tolua_beginmodule(tolua_S,"ccV2F_C4B_T2F");
    tolua_variable(tolua_S,"vertices",tolua_get_cocos2d__ccV2F_C4B_T2F_vertices,tolua_set_cocos2d__ccV2F_C4B_T2F_vertices);
    tolua_variable(tolua_S,"colors",tolua_get_cocos2d__ccV2F_C4B_T2F_colors,tolua_set_cocos2d__ccV2F_C4B_T2F_colors);
    tolua_variable(tolua_S,"texCoords",tolua_get_cocos2d__ccV2F_C4B_T2F_texCoords,tolua_set_cocos2d__ccV2F_C4B_T2F_texCoords);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccV2F_C4F_T2F","cocos2d::ccV2F_C4F_T2F","",NULL);
   tolua_beginmodule(tolua_S,"ccV2F_C4F_T2F");
    tolua_variable(tolua_S,"vertices",tolua_get_cocos2d__ccV2F_C4F_T2F_vertices,tolua_set_cocos2d__ccV2F_C4F_T2F_vertices);
    tolua_variable(tolua_S,"colors",tolua_get_cocos2d__ccV2F_C4F_T2F_colors,tolua_set_cocos2d__ccV2F_C4F_T2F_colors);
    tolua_variable(tolua_S,"texCoords",tolua_get_cocos2d__ccV2F_C4F_T2F_texCoords,tolua_set_cocos2d__ccV2F_C4F_T2F_texCoords);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccV3F_C4B_T2F","cocos2d::ccV3F_C4B_T2F","",NULL);
   tolua_beginmodule(tolua_S,"ccV3F_C4B_T2F");
    tolua_variable(tolua_S,"vertices",tolua_get_cocos2d__ccV3F_C4B_T2F_vertices,tolua_set_cocos2d__ccV3F_C4B_T2F_vertices);
    tolua_variable(tolua_S,"colors",tolua_get_cocos2d__ccV3F_C4B_T2F_colors,tolua_set_cocos2d__ccV3F_C4B_T2F_colors);
    tolua_variable(tolua_S,"texCoords",tolua_get_cocos2d__ccV3F_C4B_T2F_texCoords,tolua_set_cocos2d__ccV3F_C4B_T2F_texCoords);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccV2F_C4B_T2F_Quad","cocos2d::ccV2F_C4B_T2F_Quad","",NULL);
   tolua_beginmodule(tolua_S,"ccV2F_C4B_T2F_Quad");
    tolua_variable(tolua_S,"bl",tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_bl,tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_bl);
    tolua_variable(tolua_S,"br",tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_br,tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_br);
    tolua_variable(tolua_S,"tl",tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_tl,tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_tl);
    tolua_variable(tolua_S,"tr",tolua_get_cocos2d__ccV2F_C4B_T2F_Quad_tr,tolua_set_cocos2d__ccV2F_C4B_T2F_Quad_tr);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ccV3F_C4B_T2F_Quad","cocos2d::ccV3F_C4B_T2F_Quad","",tolua_collect_cocos2d__ccV3F_C4B_T2F_Quad);
   #else
   tolua_cclass(tolua_S,"ccV3F_C4B_T2F_Quad","cocos2d::ccV3F_C4B_T2F_Quad","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ccV3F_C4B_T2F_Quad");
    tolua_variable(tolua_S,"tl",tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_tl,tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_tl);
    tolua_variable(tolua_S,"bl",tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_bl,tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_bl);
    tolua_variable(tolua_S,"tr",tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_tr,tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_tr);
    tolua_variable(tolua_S,"br",tolua_get_cocos2d__ccV3F_C4B_T2F_Quad_br,tolua_set_cocos2d__ccV3F_C4B_T2F_Quad_br);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccV2F_C4F_T2F_Quad","cocos2d::ccV2F_C4F_T2F_Quad","",NULL);
   tolua_beginmodule(tolua_S,"ccV2F_C4F_T2F_Quad");
    tolua_variable(tolua_S,"bl",tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_bl,tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_bl);
    tolua_variable(tolua_S,"br",tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_br,tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_br);
    tolua_variable(tolua_S,"tl",tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_tl,tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_tl);
    tolua_variable(tolua_S,"tr",tolua_get_cocos2d__ccV2F_C4F_T2F_Quad_tr,tolua_set_cocos2d__ccV2F_C4F_T2F_Quad_tr);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"ccBlendFunc","cocos2d::ccBlendFunc","",tolua_collect_cocos2d__ccBlendFunc);
   #else
   tolua_cclass(tolua_S,"ccBlendFunc","cocos2d::ccBlendFunc","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"ccBlendFunc");
    tolua_variable(tolua_S,"src",tolua_get_cocos2d__ccBlendFunc_src,tolua_set_cocos2d__ccBlendFunc_src);
    tolua_variable(tolua_S,"dst",tolua_get_cocos2d__ccBlendFunc_dst,tolua_set_cocos2d__ccBlendFunc_dst);
   tolua_endmodule(tolua_S);
   tolua_constant(tolua_S,"CCTextAlignmentLeft",cocos2d::CCTextAlignmentLeft);
   tolua_constant(tolua_S,"CCTextAlignmentCenter",cocos2d::CCTextAlignmentCenter);
   tolua_constant(tolua_S,"CCTextAlignmentRight",cocos2d::CCTextAlignmentRight);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCUserDefault","cocos2d::CCUserDefault","",tolua_collect_cocos2d__CCUserDefault);
   #else
   tolua_cclass(tolua_S,"CCUserDefault","cocos2d::CCUserDefault","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCUserDefault");
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCUserDefault_delete00);
    tolua_function(tolua_S,"getBoolForKey",tolua_Cocos2d_cocos2d_CCUserDefault_getBoolForKey00);
    tolua_function(tolua_S,"getIntegerForKey",tolua_Cocos2d_cocos2d_CCUserDefault_getIntegerForKey00);
    tolua_function(tolua_S,"getFloatForKey",tolua_Cocos2d_cocos2d_CCUserDefault_getFloatForKey00);
    tolua_function(tolua_S,"getDoubleForKey",tolua_Cocos2d_cocos2d_CCUserDefault_getDoubleForKey00);
    tolua_function(tolua_S,"getStringForKey",tolua_Cocos2d_cocos2d_CCUserDefault_getStringForKey00);
    tolua_function(tolua_S,"setBoolForKey",tolua_Cocos2d_cocos2d_CCUserDefault_setBoolForKey00);
    tolua_function(tolua_S,"setIntegerForKey",tolua_Cocos2d_cocos2d_CCUserDefault_setIntegerForKey00);
    tolua_function(tolua_S,"setFloatForKey",tolua_Cocos2d_cocos2d_CCUserDefault_setFloatForKey00);
    tolua_function(tolua_S,"setDoubleForKey",tolua_Cocos2d_cocos2d_CCUserDefault_setDoubleForKey00);
    tolua_function(tolua_S,"setStringForKey",tolua_Cocos2d_cocos2d_CCUserDefault_setStringForKey00);
    tolua_function(tolua_S,"sharedUserDefault",tolua_Cocos2d_cocos2d_CCUserDefault_sharedUserDefault00);
    tolua_function(tolua_S,"purgeSharedUserDefault",tolua_Cocos2d_cocos2d_CCUserDefault_purgeSharedUserDefault00);
    tolua_function(tolua_S,"getXMLFilePath",tolua_Cocos2d_cocos2d_CCUserDefault_getXMLFilePath00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCAcceleration","cocos2d::CCAcceleration","",NULL);
   tolua_beginmodule(tolua_S,"CCAcceleration");
    tolua_variable(tolua_S,"x",tolua_get_cocos2d__CCAcceleration_x,tolua_set_cocos2d__CCAcceleration_x);
    tolua_variable(tolua_S,"y",tolua_get_cocos2d__CCAcceleration_y,tolua_set_cocos2d__CCAcceleration_y);
    tolua_variable(tolua_S,"z",tolua_get_cocos2d__CCAcceleration_z,tolua_set_cocos2d__CCAcceleration_z);
    tolua_variable(tolua_S,"timestamp",tolua_get_cocos2d__CCAcceleration_timestamp,tolua_set_cocos2d__CCAcceleration_timestamp);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCAccelerometerDelegate","cocos2d::CCAccelerometerDelegate","",NULL);
   tolua_beginmodule(tolua_S,"CCAccelerometerDelegate");
    tolua_function(tolua_S,"didAccelerate",tolua_Cocos2d_cocos2d_CCAccelerometerDelegate_didAccelerate00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"kCCActionTagInvalid",cocos2d::kCCActionTagInvalid);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCAction","cocos2d::CCAction","cocos2d::CCObject",tolua_collect_cocos2d__CCAction);
   #else
   tolua_cclass(tolua_S,"CCAction","cocos2d::CCAction","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCAction");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCAction_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCAction_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCAction_new00_local);
    tolua_function(tolua_S,"description",tolua_Cocos2d_cocos2d_CCAction_description00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCAction_copyWithZone00);
    tolua_function(tolua_S,"isDone",tolua_Cocos2d_cocos2d_CCAction_isDone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCAction_startWithTarget00);
    tolua_function(tolua_S,"stop",tolua_Cocos2d_cocos2d_CCAction_stop00);
    tolua_function(tolua_S,"step",tolua_Cocos2d_cocos2d_CCAction_step00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCAction_update00);
    tolua_function(tolua_S,"getTarget",tolua_Cocos2d_cocos2d_CCAction_getTarget00);
    tolua_function(tolua_S,"setTarget",tolua_Cocos2d_cocos2d_CCAction_setTarget00);
    tolua_function(tolua_S,"getOriginalTarget",tolua_Cocos2d_cocos2d_CCAction_getOriginalTarget00);
    tolua_function(tolua_S,"setOriginalTarget",tolua_Cocos2d_cocos2d_CCAction_setOriginalTarget00);
    tolua_function(tolua_S,"getTag",tolua_Cocos2d_cocos2d_CCAction_getTag00);
    tolua_function(tolua_S,"setTag",tolua_Cocos2d_cocos2d_CCAction_setTag00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCAction_action00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCFiniteTimeAction","cocos2d::CCFiniteTimeAction","cocos2d::CCAction",tolua_collect_cocos2d__CCFiniteTimeAction);
   #else
   tolua_cclass(tolua_S,"CCFiniteTimeAction","cocos2d::CCFiniteTimeAction","cocos2d::CCAction",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCFiniteTimeAction");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCFiniteTimeAction_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCFiniteTimeAction_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCFiniteTimeAction_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCFiniteTimeAction_delete00);
    tolua_function(tolua_S,"getDuration",tolua_Cocos2d_cocos2d_CCFiniteTimeAction_getDuration00);
    tolua_function(tolua_S,"setDuration",tolua_Cocos2d_cocos2d_CCFiniteTimeAction_setDuration00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCFiniteTimeAction_reverse00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCActionInterval","cocos2d::CCActionInterval","cocos2d::CCFiniteTimeAction",NULL);
   tolua_beginmodule(tolua_S,"CCActionInterval");
    tolua_function(tolua_S,"getElapsed",tolua_Cocos2d_cocos2d_CCActionInterval_getElapsed00);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCActionInterval_initWithDuration00);
    tolua_function(tolua_S,"isDone",tolua_Cocos2d_cocos2d_CCActionInterval_isDone00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCActionInterval_copyWithZone00);
    tolua_function(tolua_S,"step",tolua_Cocos2d_cocos2d_CCActionInterval_step00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCActionInterval_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCActionInterval_reverse00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCActionInterval_actionWithDuration00);
    tolua_function(tolua_S,"setAmplitudeRate",tolua_Cocos2d_cocos2d_CCActionInterval_setAmplitudeRate00);
    tolua_function(tolua_S,"getAmplitudeRate",tolua_Cocos2d_cocos2d_CCActionInterval_getAmplitudeRate00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCRepeatForever","cocos2d::CCRepeatForever","cocos2d::CCActionInterval",tolua_collect_cocos2d__CCRepeatForever);
   #else
   tolua_cclass(tolua_S,"CCRepeatForever","cocos2d::CCRepeatForever","cocos2d::CCActionInterval",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCRepeatForever");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCRepeatForever_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCRepeatForever_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCRepeatForever_new00_local);
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCRepeatForever_initWithAction00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCRepeatForever_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCRepeatForever_startWithTarget00);
    tolua_function(tolua_S,"step",tolua_Cocos2d_cocos2d_CCRepeatForever_step00);
    tolua_function(tolua_S,"isDone",tolua_Cocos2d_cocos2d_CCRepeatForever_isDone00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCRepeatForever_reverse00);
    tolua_function(tolua_S,"setInnerAction",tolua_Cocos2d_cocos2d_CCRepeatForever_setInnerAction00);
    tolua_function(tolua_S,"getInnerAction",tolua_Cocos2d_cocos2d_CCRepeatForever_getInnerAction00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCRepeatForever_actionWithAction00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCSpeed","cocos2d::CCSpeed","cocos2d::CCAction",tolua_collect_cocos2d__CCSpeed);
   #else
   tolua_cclass(tolua_S,"CCSpeed","cocos2d::CCSpeed","cocos2d::CCAction",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCSpeed");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCSpeed_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCSpeed_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCSpeed_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCSpeed_delete00);
    tolua_function(tolua_S,"getSpeed",tolua_Cocos2d_cocos2d_CCSpeed_getSpeed00);
    tolua_function(tolua_S,"setSpeed",tolua_Cocos2d_cocos2d_CCSpeed_setSpeed00);
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCSpeed_initWithAction00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCSpeed_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCSpeed_startWithTarget00);
    tolua_function(tolua_S,"stop",tolua_Cocos2d_cocos2d_CCSpeed_stop00);
    tolua_function(tolua_S,"step",tolua_Cocos2d_cocos2d_CCSpeed_step00);
    tolua_function(tolua_S,"isDone",tolua_Cocos2d_cocos2d_CCSpeed_isDone00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCSpeed_reverse00);
    tolua_function(tolua_S,"setInnerAction",tolua_Cocos2d_cocos2d_CCSpeed_setInnerAction00);
    tolua_function(tolua_S,"getInnerAction",tolua_Cocos2d_cocos2d_CCSpeed_getInnerAction00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCSpeed_actionWithAction00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCFollow","cocos2d::CCFollow","cocos2d::CCAction",tolua_collect_cocos2d__CCFollow);
   #else
   tolua_cclass(tolua_S,"CCFollow","cocos2d::CCFollow","cocos2d::CCAction",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCFollow");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCFollow_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCFollow_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCFollow_new00_local);
    tolua_function(tolua_S,"isBoundarySet",tolua_Cocos2d_cocos2d_CCFollow_isBoundarySet00);
    tolua_function(tolua_S,"setBoudarySet",tolua_Cocos2d_cocos2d_CCFollow_setBoudarySet00);
    tolua_function(tolua_S,"initWithTarget",tolua_Cocos2d_cocos2d_CCFollow_initWithTarget00);
    tolua_function(tolua_S,"initWithTarget",tolua_Cocos2d_cocos2d_CCFollow_initWithTarget01);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCFollow_copyWithZone00);
    tolua_function(tolua_S,"step",tolua_Cocos2d_cocos2d_CCFollow_step00);
    tolua_function(tolua_S,"isDone",tolua_Cocos2d_cocos2d_CCFollow_isDone00);
    tolua_function(tolua_S,"stop",tolua_Cocos2d_cocos2d_CCFollow_stop00);
    tolua_function(tolua_S,"actionWithTarget",tolua_Cocos2d_cocos2d_CCFollow_actionWithTarget00);
    tolua_function(tolua_S,"actionWithTarget",tolua_Cocos2d_cocos2d_CCFollow_actionWithTarget01);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCRGBAProtocol","cocos2d::CCRGBAProtocol","",NULL);
   tolua_beginmodule(tolua_S,"CCRGBAProtocol");
    tolua_function(tolua_S,"setColor",tolua_Cocos2d_cocos2d_CCRGBAProtocol_setColor00);
    tolua_function(tolua_S,"getColor",tolua_Cocos2d_cocos2d_CCRGBAProtocol_getColor00);
    tolua_function(tolua_S,"getOpacity",tolua_Cocos2d_cocos2d_CCRGBAProtocol_getOpacity00);
    tolua_function(tolua_S,"setOpacity",tolua_Cocos2d_cocos2d_CCRGBAProtocol_setOpacity00);
    tolua_function(tolua_S,"setIsOpacityModifyRGB",tolua_Cocos2d_cocos2d_CCRGBAProtocol_setIsOpacityModifyRGB00);
    tolua_function(tolua_S,"getIsOpacityModifyRGB",tolua_Cocos2d_cocos2d_CCRGBAProtocol_getIsOpacityModifyRGB00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCBlendProtocol","cocos2d::CCBlendProtocol","",NULL);
   tolua_beginmodule(tolua_S,"CCBlendProtocol");
    tolua_function(tolua_S,"setBlendFunc",tolua_Cocos2d_cocos2d_CCBlendProtocol_setBlendFunc00);
    tolua_function(tolua_S,"getBlendFunc",tolua_Cocos2d_cocos2d_CCBlendProtocol_getBlendFunc00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCTextureProtocol","cocos2d::CCTextureProtocol","cocos2d::CCBlendProtocol",NULL);
   tolua_beginmodule(tolua_S,"CCTextureProtocol");
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCTextureProtocol_getTexture00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCTextureProtocol_setTexture00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCLabelProtocol","cocos2d::CCLabelProtocol","",NULL);
   tolua_beginmodule(tolua_S,"CCLabelProtocol");
    tolua_function(tolua_S,"setString",tolua_Cocos2d_cocos2d_CCLabelProtocol_setString00);
    tolua_function(tolua_S,"getString",tolua_Cocos2d_cocos2d_CCLabelProtocol_getString00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCProjectionProtocol","cocos2d::CCProjectionProtocol","cocos2d::CCObject",NULL);
   tolua_beginmodule(tolua_S,"CCProjectionProtocol");
    tolua_function(tolua_S,"updateProjection",tolua_Cocos2d_cocos2d_CCProjectionProtocol_updateProjection00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"SelectorProtocol","cocos2d::SelectorProtocol","",tolua_collect_cocos2d__SelectorProtocol);
   #else
   tolua_cclass(tolua_S,"SelectorProtocol","cocos2d::SelectorProtocol","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"SelectorProtocol");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_SelectorProtocol_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_SelectorProtocol_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_SelectorProtocol_new00_local);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_SelectorProtocol_update00);
    tolua_function(tolua_S,"tick",tolua_Cocos2d_cocos2d_SelectorProtocol_tick00);
    tolua_function(tolua_S,"callfunc",tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc00);
    tolua_function(tolua_S,"callfunc",tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc01);
    tolua_function(tolua_S,"callfunc",tolua_Cocos2d_cocos2d_SelectorProtocol_callfunc02);
    tolua_function(tolua_S,"menuHandler",tolua_Cocos2d_cocos2d_SelectorProtocol_menuHandler00);
    tolua_function(tolua_S,"eventHandler",tolua_Cocos2d_cocos2d_SelectorProtocol_eventHandler00);
    tolua_function(tolua_S,"selectorProtocolRetain",tolua_Cocos2d_cocos2d_SelectorProtocol_selectorProtocolRetain00);
    tolua_function(tolua_S,"selectorProtocolRelease",tolua_Cocos2d_cocos2d_SelectorProtocol_selectorProtocolRelease00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMutableArray_CCObject__","cocos2d::CCMutableArray<CCObject*>","cocos2d::CCObject",tolua_collect_cocos2d__CCMutableArray_CCObject__);
   #else
   tolua_cclass(tolua_S,"CCMutableArray_CCObject__","cocos2d::CCMutableArray<CCObject*>","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMutableArray_CCObject__");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___delete00);
    tolua_function(tolua_S,"count",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___count00);
    tolua_function(tolua_S,"getIndexOfObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___getIndexOfObject00);
    tolua_function(tolua_S,"containsObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___containsObject00);
    tolua_function(tolua_S,"getLastObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___getLastObject00);
    tolua_function(tolua_S,"getObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___getObjectAtIndex00);
    tolua_function(tolua_S,"addObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___addObject00);
    tolua_function(tolua_S,"addObjectsFromArray",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___addObjectsFromArray00);
    tolua_function(tolua_S,"insertObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___insertObjectAtIndex00);
    tolua_function(tolua_S,"removeLastObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeLastObject00);
    tolua_function(tolua_S,"removeObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeObject00);
    tolua_function(tolua_S,"removeObjectsInArray",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeObjectsInArray00);
    tolua_function(tolua_S,"removeObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeObjectAtIndex00);
    tolua_function(tolua_S,"removeAllObjects",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___removeAllObjects00);
    tolua_function(tolua_S,"replaceObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___replaceObjectAtIndex00);
    tolua_function(tolua_S,"begin",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___begin00);
    tolua_function(tolua_S,"rbegin",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___rbegin00);
    tolua_function(tolua_S,"endToLua",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___endToLua00);
    tolua_function(tolua_S,"rend",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___rend00);
    tolua_function(tolua_S,"copy",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___copy00);
    tolua_function(tolua_S,"arrayWithArray",tolua_Cocos2d_cocos2d_CCMutableArray_CCObject___arrayWithArray00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMutableArray_CCSpriteFrame__","cocos2d::CCMutableArray<CCSpriteFrame*>","cocos2d::CCObject",tolua_collect_cocos2d__CCMutableArray_CCSpriteFrame__);
   #else
   tolua_cclass(tolua_S,"CCMutableArray_CCSpriteFrame__","cocos2d::CCMutableArray<CCSpriteFrame*>","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMutableArray_CCSpriteFrame__");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___delete00);
    tolua_function(tolua_S,"count",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___count00);
    tolua_function(tolua_S,"getIndexOfObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___getIndexOfObject00);
    tolua_function(tolua_S,"containsObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___containsObject00);
    tolua_function(tolua_S,"getLastObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___getLastObject00);
    tolua_function(tolua_S,"getObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___getObjectAtIndex00);
    tolua_function(tolua_S,"addObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___addObject00);
    tolua_function(tolua_S,"addObjectsFromArray",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___addObjectsFromArray00);
    tolua_function(tolua_S,"insertObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___insertObjectAtIndex00);
    tolua_function(tolua_S,"removeLastObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeLastObject00);
    tolua_function(tolua_S,"removeObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeObject00);
    tolua_function(tolua_S,"removeObjectsInArray",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeObjectsInArray00);
    tolua_function(tolua_S,"removeObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeObjectAtIndex00);
    tolua_function(tolua_S,"removeAllObjects",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___removeAllObjects00);
    tolua_function(tolua_S,"replaceObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___replaceObjectAtIndex00);
    tolua_function(tolua_S,"begin",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___begin00);
    tolua_function(tolua_S,"rbegin",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___rbegin00);
    tolua_function(tolua_S,"endToLua",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___endToLua00);
    tolua_function(tolua_S,"rend",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___rend00);
    tolua_function(tolua_S,"copy",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___copy00);
    tolua_function(tolua_S,"arrayWithArray",tolua_Cocos2d_cocos2d_CCMutableArray_CCSpriteFrame___arrayWithArray00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMutableArray_CCFiniteTimeAction__","cocos2d::CCMutableArray<CCFiniteTimeAction*>","cocos2d::CCObject",tolua_collect_cocos2d__CCMutableArray_CCFiniteTimeAction__);
   #else
   tolua_cclass(tolua_S,"CCMutableArray_CCFiniteTimeAction__","cocos2d::CCMutableArray<CCFiniteTimeAction*>","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMutableArray_CCFiniteTimeAction__");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___delete00);
    tolua_function(tolua_S,"count",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___count00);
    tolua_function(tolua_S,"getIndexOfObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___getIndexOfObject00);
    tolua_function(tolua_S,"containsObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___containsObject00);
    tolua_function(tolua_S,"getLastObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___getLastObject00);
    tolua_function(tolua_S,"getObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___getObjectAtIndex00);
    tolua_function(tolua_S,"addObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___addObject00);
    tolua_function(tolua_S,"addObjectsFromArray",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___addObjectsFromArray00);
    tolua_function(tolua_S,"insertObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___insertObjectAtIndex00);
    tolua_function(tolua_S,"removeLastObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeLastObject00);
    tolua_function(tolua_S,"removeObject",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeObject00);
    tolua_function(tolua_S,"removeObjectsInArray",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeObjectsInArray00);
    tolua_function(tolua_S,"removeObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeObjectAtIndex00);
    tolua_function(tolua_S,"removeAllObjects",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___removeAllObjects00);
    tolua_function(tolua_S,"replaceObjectAtIndex",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___replaceObjectAtIndex00);
    tolua_function(tolua_S,"begin",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___begin00);
    tolua_function(tolua_S,"rbegin",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___rbegin00);
    tolua_function(tolua_S,"endToLua",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___endToLua00);
    tolua_function(tolua_S,"rend",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___rend00);
    tolua_function(tolua_S,"copy",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___copy00);
    tolua_function(tolua_S,"arrayWithArray",tolua_Cocos2d_cocos2d_CCMutableArray_CCFiniteTimeAction___arrayWithArray00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMutableDictionary_std__string_CCObject__","cocos2d::CCMutableDictionary<std::string,CCObject*>","cocos2d::CCObject",tolua_collect_cocos2d__CCMutableDictionary_std__string_CCObject__);
   #else
   tolua_cclass(tolua_S,"CCMutableDictionary_std__string_CCObject__","cocos2d::CCMutableDictionary<std::string,CCObject*>","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMutableDictionary_std__string_CCObject__");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___delete00);
    tolua_function(tolua_S,"count",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___count00);
    tolua_function(tolua_S,"allKeys",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___allKeys00);
    tolua_function(tolua_S,"allKeysForObject",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___allKeysForObject00);
    tolua_function(tolua_S,"objectForKey",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___objectForKey00);
    tolua_function(tolua_S,"setObject",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___setObject00);
    tolua_function(tolua_S,"removeObjectForKey",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___removeObjectForKey00);
    tolua_function(tolua_S,"begin",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___begin00);
    tolua_function(tolua_S,"next",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___next00);
    tolua_function(tolua_S,"endToLua",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___endToLua00);
    tolua_function(tolua_S,"removeAllObjects",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___removeAllObjects00);
    tolua_function(tolua_S,"dictionaryWithDictionary",tolua_Cocos2d_cocos2d_CCMutableDictionary_std__string_CCObject___dictionaryWithDictionary00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"ccTouchDelegateStandardBit",cocos2d::ccTouchDelegateStandardBit);
   tolua_constant(tolua_S,"ccTouchDelegateTargetedBit",cocos2d::ccTouchDelegateTargetedBit);
   tolua_constant(tolua_S,"ccTouchDelegateAllBit",cocos2d::ccTouchDelegateAllBit);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTouchDelegate","cocos2d::CCTouchDelegate","",tolua_collect_cocos2d__CCTouchDelegate);
   #else
   tolua_cclass(tolua_S,"CCTouchDelegate","cocos2d::CCTouchDelegate","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTouchDelegate");
    tolua_function(tolua_S,"getTouchDelegateType",tolua_Cocos2d_cocos2d_CCTouchDelegate_getTouchDelegateType00);
    tolua_function(tolua_S,"destroy",tolua_Cocos2d_cocos2d_CCTouchDelegate_destroy00);
    tolua_function(tolua_S,"keep",tolua_Cocos2d_cocos2d_CCTouchDelegate_keep00);
    tolua_function(tolua_S,"ccTouchBegan",tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchBegan00);
    tolua_function(tolua_S,"ccTouchMoved",tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchMoved00);
    tolua_function(tolua_S,"ccTouchEnded",tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchEnded00);
    tolua_function(tolua_S,"ccTouchCancelled",tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchCancelled00);
    tolua_function(tolua_S,"ccTouchesBegan",tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesBegan00);
    tolua_function(tolua_S,"ccTouchesMoved",tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesMoved00);
    tolua_function(tolua_S,"ccTouchesEnded",tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesEnded00);
    tolua_function(tolua_S,"ccTouchesCancelled",tolua_Cocos2d_cocos2d_CCTouchDelegate_ccTouchesCancelled00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTouchDelegate_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTouchDelegate_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTouchDelegate_new00_local);
    tolua_function(tolua_S,"registerScriptTouchHandler",tolua_Cocos2d_cocos2d_CCTouchDelegate_registerScriptTouchHandler00);
    tolua_function(tolua_S,"isScriptHandlerExist",tolua_Cocos2d_cocos2d_CCTouchDelegate_isScriptHandlerExist00);
    tolua_function(tolua_S,"excuteScriptTouchHandler",tolua_Cocos2d_cocos2d_CCTouchDelegate_excuteScriptTouchHandler00);
    tolua_function(tolua_S,"excuteScriptTouchesHandler",tolua_Cocos2d_cocos2d_CCTouchDelegate_excuteScriptTouchesHandler00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCTargetedTouchDelegate","cocos2d::CCTargetedTouchDelegate","cocos2d::CCTouchDelegate",tolua_collect_cocos2d__CCTargetedTouchDelegate);
   #else
   tolua_cclass(tolua_S,"CCTargetedTouchDelegate","cocos2d::CCTargetedTouchDelegate","cocos2d::CCTouchDelegate",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCTargetedTouchDelegate");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_new00_local);
    tolua_function(tolua_S,"ccTouchBegan",tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchBegan00);
    tolua_function(tolua_S,"ccTouchMoved",tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchMoved00);
    tolua_function(tolua_S,"ccTouchEnded",tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchEnded00);
    tolua_function(tolua_S,"ccTouchCancelled",tolua_Cocos2d_cocos2d_CCTargetedTouchDelegate_ccTouchCancelled00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCStandardTouchDelegate","cocos2d::CCStandardTouchDelegate","cocos2d::CCTouchDelegate",tolua_collect_cocos2d__CCStandardTouchDelegate);
   #else
   tolua_cclass(tolua_S,"CCStandardTouchDelegate","cocos2d::CCStandardTouchDelegate","cocos2d::CCTouchDelegate",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCStandardTouchDelegate");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_new00_local);
    tolua_function(tolua_S,"ccTouchesBegan",tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesBegan00);
    tolua_function(tolua_S,"ccTouchesMoved",tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesMoved00);
    tolua_function(tolua_S,"ccTouchesEnded",tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesEnded00);
    tolua_function(tolua_S,"ccTouchesCancelled",tolua_Cocos2d_cocos2d_CCStandardTouchDelegate_ccTouchesCancelled00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCCamera","cocos2d::CCCamera","cocos2d::CCObject",tolua_collect_cocos2d__CCCamera);
   #else
   tolua_cclass(tolua_S,"CCCamera","cocos2d::CCCamera","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCCamera");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCCamera_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCCamera_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCCamera_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCCamera_init00);
    tolua_function(tolua_S,"description",tolua_Cocos2d_cocos2d_CCCamera_description00);
    tolua_function(tolua_S,"setDirty",tolua_Cocos2d_cocos2d_CCCamera_setDirty00);
    tolua_function(tolua_S,"getDirty",tolua_Cocos2d_cocos2d_CCCamera_getDirty00);
    tolua_function(tolua_S,"restore",tolua_Cocos2d_cocos2d_CCCamera_restore00);
    tolua_function(tolua_S,"locate",tolua_Cocos2d_cocos2d_CCCamera_locate00);
    tolua_function(tolua_S,"setEyeXYZ",tolua_Cocos2d_cocos2d_CCCamera_setEyeXYZ00);
    tolua_function(tolua_S,"setCenterXYZ",tolua_Cocos2d_cocos2d_CCCamera_setCenterXYZ00);
    tolua_function(tolua_S,"setUpXYZ",tolua_Cocos2d_cocos2d_CCCamera_setUpXYZ00);
    tolua_function(tolua_S,"getEyeXYZ",tolua_Cocos2d_cocos2d_CCCamera_getEyeXYZ00);
    tolua_function(tolua_S,"getCenterXYZ",tolua_Cocos2d_cocos2d_CCCamera_getCenterXYZ00);
    tolua_function(tolua_S,"getUpXYZ",tolua_Cocos2d_cocos2d_CCCamera_getUpXYZ00);
    tolua_function(tolua_S,"getZEye",tolua_Cocos2d_cocos2d_CCCamera_getZEye00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCActionCamera","cocos2d::CCActionCamera","cocos2d::CCActionInterval",tolua_collect_cocos2d__CCActionCamera);
   #else
   tolua_cclass(tolua_S,"CCActionCamera","cocos2d::CCActionCamera","cocos2d::CCActionInterval",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCActionCamera");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCActionCamera_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCActionCamera_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCActionCamera_new00_local);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCActionCamera_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCActionCamera_reverse00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCOrbitCamera","cocos2d::CCOrbitCamera","cocos2d::CCActionCamera",tolua_collect_cocos2d__CCOrbitCamera);
   #else
   tolua_cclass(tolua_S,"CCOrbitCamera","cocos2d::CCOrbitCamera","cocos2d::CCActionCamera",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCOrbitCamera");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCOrbitCamera_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCOrbitCamera_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCOrbitCamera_new00_local);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCOrbitCamera_actionWithDuration00);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCOrbitCamera_initWithDuration00);
    tolua_function(tolua_S,"sphericalRadius",tolua_Cocos2d_cocos2d_CCOrbitCamera_sphericalRadius00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCOrbitCamera_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCOrbitCamera_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCOrbitCamera_update00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCZone","cocos2d::CCZone","",NULL);
   tolua_beginmodule(tolua_S,"CCZone");
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCActionEase","cocos2d::CCActionEase","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCActionEase");
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCActionEase_initWithAction00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCActionEase_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCActionEase_startWithTarget00);
    tolua_function(tolua_S,"stop",tolua_Cocos2d_cocos2d_CCActionEase_stop00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCActionEase_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCActionEase_reverse00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCActionEase_actionWithAction00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCEaseRateAction","cocos2d::CCEaseRateAction","cocos2d::CCActionEase",tolua_collect_cocos2d__CCEaseRateAction);
   #else
   tolua_cclass(tolua_S,"CCEaseRateAction","cocos2d::CCEaseRateAction","cocos2d::CCActionEase",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCEaseRateAction");
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCEaseRateAction_delete00);
    tolua_function(tolua_S,"setRate",tolua_Cocos2d_cocos2d_CCEaseRateAction_setRate00);
    tolua_function(tolua_S,"getRate",tolua_Cocos2d_cocos2d_CCEaseRateAction_getRate00);
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCEaseRateAction_initWithAction00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseRateAction_copyWithZone00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseRateAction_reverse00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseRateAction_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseIn","cocos2d::CCEaseIn","cocos2d::CCEaseRateAction",NULL);
   tolua_beginmodule(tolua_S,"CCEaseIn");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseIn_update00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseIn_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseIn_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseOut","cocos2d::CCEaseOut","cocos2d::CCEaseRateAction",NULL);
   tolua_beginmodule(tolua_S,"CCEaseOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseOut_update00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseOut_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseInOut","cocos2d::CCEaseInOut","cocos2d::CCEaseRateAction",NULL);
   tolua_beginmodule(tolua_S,"CCEaseInOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseInOut_update00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseInOut_copyWithZone00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseInOut_reverse00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseInOut_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseExponentialIn","cocos2d::CCEaseExponentialIn","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseExponentialIn");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseExponentialIn_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseExponentialIn_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseExponentialIn_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseExponentialIn_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseExponentialOut","cocos2d::CCEaseExponentialOut","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseExponentialOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseExponentialOut_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseExponentialOut_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseExponentialOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseExponentialOut_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseExponentialInOut","cocos2d::CCEaseExponentialInOut","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseExponentialInOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseExponentialInOut_update00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseExponentialInOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseExponentialInOut_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseSineIn","cocos2d::CCEaseSineIn","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseSineIn");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseSineIn_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseSineIn_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseSineIn_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseSineIn_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseSineOut","cocos2d::CCEaseSineOut","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseSineOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseSineOut_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseSineOut_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseSineOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseSineOut_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseSineInOut","cocos2d::CCEaseSineInOut","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseSineInOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseSineInOut_update00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseSineInOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseSineInOut_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseElastic","cocos2d::CCEaseElastic","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseElastic");
    tolua_function(tolua_S,"getPeriod",tolua_Cocos2d_cocos2d_CCEaseElastic_getPeriod00);
    tolua_function(tolua_S,"setPeriod",tolua_Cocos2d_cocos2d_CCEaseElastic_setPeriod00);
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCEaseElastic_initWithAction00);
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCEaseElastic_initWithAction01);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseElastic_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseElastic_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseElastic_actionWithAction00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseElastic_actionWithAction01);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseElasticIn","cocos2d::CCEaseElasticIn","cocos2d::CCEaseElastic",NULL);
   tolua_beginmodule(tolua_S,"CCEaseElasticIn");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseElasticIn_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseElasticIn_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseElasticIn_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseElasticIn_actionWithAction00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseElasticIn_actionWithAction01);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseElasticOut","cocos2d::CCEaseElasticOut","cocos2d::CCEaseElastic",NULL);
   tolua_beginmodule(tolua_S,"CCEaseElasticOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseElasticOut_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseElasticOut_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseElasticOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseElasticOut_actionWithAction00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseElasticOut_actionWithAction01);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseElasticInOut","cocos2d::CCEaseElasticInOut","cocos2d::CCEaseElastic",NULL);
   tolua_beginmodule(tolua_S,"CCEaseElasticInOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseElasticInOut_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseElasticInOut_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseElasticInOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseElasticInOut_actionWithAction00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseElasticInOut_actionWithAction01);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseBounce","cocos2d::CCEaseBounce","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseBounce");
    tolua_function(tolua_S,"bounceTime",tolua_Cocos2d_cocos2d_CCEaseBounce_bounceTime00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseBounce_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseBounce_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseBounceIn","cocos2d::CCEaseBounceIn","cocos2d::CCEaseBounce",NULL);
   tolua_beginmodule(tolua_S,"CCEaseBounceIn");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseBounceIn_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseBounceIn_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseBounceIn_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseBounceIn_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseBounceOut","cocos2d::CCEaseBounceOut","cocos2d::CCEaseBounce",NULL);
   tolua_beginmodule(tolua_S,"CCEaseBounceOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseBounceOut_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseBounceOut_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseBounceOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseBounceOut_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseBounceInOut","cocos2d::CCEaseBounceInOut","cocos2d::CCEaseBounce",NULL);
   tolua_beginmodule(tolua_S,"CCEaseBounceInOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseBounceInOut_update00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseBounceInOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseBounceInOut_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseBackIn","cocos2d::CCEaseBackIn","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseBackIn");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseBackIn_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseBackIn_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseBackIn_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseBackIn_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseBackOut","cocos2d::CCEaseBackOut","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseBackOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseBackOut_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCEaseBackOut_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseBackOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseBackOut_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEaseBackInOut","cocos2d::CCEaseBackInOut","cocos2d::CCActionEase",NULL);
   tolua_beginmodule(tolua_S,"CCEaseBackInOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCEaseBackInOut_update00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCEaseBackInOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCEaseBackInOut_actionWithAction00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCWaves3D","cocos2d::CCWaves3D","CCGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCWaves3D");
    tolua_function(tolua_S,"getAmplitude",tolua_Cocos2d_cocos2d_CCWaves3D_getAmplitude00);
    tolua_function(tolua_S,"setAmplitude",tolua_Cocos2d_cocos2d_CCWaves3D_setAmplitude00);
    tolua_function(tolua_S,"getAmplitudeRate",tolua_Cocos2d_cocos2d_CCWaves3D_getAmplitudeRate00);
    tolua_function(tolua_S,"setAmplitudeRate",tolua_Cocos2d_cocos2d_CCWaves3D_setAmplitudeRate00);
    tolua_function(tolua_S,"initWithWaves",tolua_Cocos2d_cocos2d_CCWaves3D_initWithWaves00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCWaves3D_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCWaves3D_update00);
    tolua_function(tolua_S,"actionWithWaves",tolua_Cocos2d_cocos2d_CCWaves3D_actionWithWaves00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCFlipX3D","cocos2d::CCFlipX3D","CCGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCFlipX3D");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCFlipX3D_initWithDuration00);
    tolua_function(tolua_S,"initWithSize",tolua_Cocos2d_cocos2d_CCFlipX3D_initWithSize00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCFlipX3D_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCFlipX3D_update00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCFlipX3D_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCFlipY3D","cocos2d::CCFlipY3D","cocos2d::CCFlipX3D",NULL);
   tolua_beginmodule(tolua_S,"CCFlipY3D");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCFlipY3D_update00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCFlipY3D_copyWithZone00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCFlipY3D_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCLens3D","cocos2d::CCLens3D","CCGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCLens3D");
    tolua_function(tolua_S,"getLensEffect",tolua_Cocos2d_cocos2d_CCLens3D_getLensEffect00);
    tolua_function(tolua_S,"setLensEffect",tolua_Cocos2d_cocos2d_CCLens3D_setLensEffect00);
    tolua_function(tolua_S,"getPosition",tolua_Cocos2d_cocos2d_CCLens3D_getPosition00);
    tolua_function(tolua_S,"setPosition",tolua_Cocos2d_cocos2d_CCLens3D_setPosition00);
    tolua_function(tolua_S,"initWithPosition",tolua_Cocos2d_cocos2d_CCLens3D_initWithPosition00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCLens3D_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCLens3D_update00);
    tolua_function(tolua_S,"actionWithPosition",tolua_Cocos2d_cocos2d_CCLens3D_actionWithPosition00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCRipple3D","cocos2d::CCRipple3D","CCGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCRipple3D");
    tolua_function(tolua_S,"getPosition",tolua_Cocos2d_cocos2d_CCRipple3D_getPosition00);
    tolua_function(tolua_S,"setPosition",tolua_Cocos2d_cocos2d_CCRipple3D_setPosition00);
    tolua_function(tolua_S,"getAmplitude",tolua_Cocos2d_cocos2d_CCRipple3D_getAmplitude00);
    tolua_function(tolua_S,"setAmplitude",tolua_Cocos2d_cocos2d_CCRipple3D_setAmplitude00);
    tolua_function(tolua_S,"getAmplitudeRate",tolua_Cocos2d_cocos2d_CCRipple3D_getAmplitudeRate00);
    tolua_function(tolua_S,"setAmplitudeRate",tolua_Cocos2d_cocos2d_CCRipple3D_setAmplitudeRate00);
    tolua_function(tolua_S,"initWithPosition",tolua_Cocos2d_cocos2d_CCRipple3D_initWithPosition00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCRipple3D_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCRipple3D_update00);
    tolua_function(tolua_S,"actionWithPosition",tolua_Cocos2d_cocos2d_CCRipple3D_actionWithPosition00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCShaky3D","cocos2d::CCShaky3D","CCGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCShaky3D");
    tolua_function(tolua_S,"initWithRange",tolua_Cocos2d_cocos2d_CCShaky3D_initWithRange00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCShaky3D_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCShaky3D_update00);
    tolua_function(tolua_S,"actionWithRange",tolua_Cocos2d_cocos2d_CCShaky3D_actionWithRange00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCLiquid","cocos2d::CCLiquid","CCGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCLiquid");
    tolua_function(tolua_S,"getAmplitude",tolua_Cocos2d_cocos2d_CCLiquid_getAmplitude00);
    tolua_function(tolua_S,"setAmplitude",tolua_Cocos2d_cocos2d_CCLiquid_setAmplitude00);
    tolua_function(tolua_S,"getAmplitudeRate",tolua_Cocos2d_cocos2d_CCLiquid_getAmplitudeRate00);
    tolua_function(tolua_S,"setAmplitudeRate",tolua_Cocos2d_cocos2d_CCLiquid_setAmplitudeRate00);
    tolua_function(tolua_S,"initWithWaves",tolua_Cocos2d_cocos2d_CCLiquid_initWithWaves00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCLiquid_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCLiquid_update00);
    tolua_function(tolua_S,"actionWithWaves",tolua_Cocos2d_cocos2d_CCLiquid_actionWithWaves00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCWaves","cocos2d::CCWaves","CCGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCWaves");
    tolua_function(tolua_S,"getAmplitude",tolua_Cocos2d_cocos2d_CCWaves_getAmplitude00);
    tolua_function(tolua_S,"setAmplitude",tolua_Cocos2d_cocos2d_CCWaves_setAmplitude00);
    tolua_function(tolua_S,"getAmplitudeRate",tolua_Cocos2d_cocos2d_CCWaves_getAmplitudeRate00);
    tolua_function(tolua_S,"setAmplitudeRate",tolua_Cocos2d_cocos2d_CCWaves_setAmplitudeRate00);
    tolua_function(tolua_S,"initWithWaves",tolua_Cocos2d_cocos2d_CCWaves_initWithWaves00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCWaves_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCWaves_update00);
    tolua_function(tolua_S,"actionWithWaves",tolua_Cocos2d_cocos2d_CCWaves_actionWithWaves00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCTwirl","cocos2d::CCTwirl","CCGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCTwirl");
    tolua_function(tolua_S,"getPosition",tolua_Cocos2d_cocos2d_CCTwirl_getPosition00);
    tolua_function(tolua_S,"setPosition",tolua_Cocos2d_cocos2d_CCTwirl_setPosition00);
    tolua_function(tolua_S,"getAmplitude",tolua_Cocos2d_cocos2d_CCTwirl_getAmplitude00);
    tolua_function(tolua_S,"setAmplitude",tolua_Cocos2d_cocos2d_CCTwirl_setAmplitude00);
    tolua_function(tolua_S,"getAmplitudeRate",tolua_Cocos2d_cocos2d_CCTwirl_getAmplitudeRate00);
    tolua_function(tolua_S,"setAmplitudeRate",tolua_Cocos2d_cocos2d_CCTwirl_setAmplitudeRate00);
    tolua_function(tolua_S,"initWithPosition",tolua_Cocos2d_cocos2d_CCTwirl_initWithPosition00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCTwirl_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCTwirl_update00);
    tolua_function(tolua_S,"actionWithPosition",tolua_Cocos2d_cocos2d_CCTwirl_actionWithPosition00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCGridBase","cocos2d::CCGridBase","",NULL);
   tolua_beginmodule(tolua_S,"CCGridBase");
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCGridAction","cocos2d::CCGridAction","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCGridAction");
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCGridAction_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCGridAction_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCGridAction_reverse00);
    tolua_function(tolua_S,"initWithSize",tolua_Cocos2d_cocos2d_CCGridAction_initWithSize00);
    tolua_function(tolua_S,"getGrid",tolua_Cocos2d_cocos2d_CCGridAction_getGrid00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCGridAction_actionWithSize00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCAccelDeccelAmplitude","cocos2d::CCAccelDeccelAmplitude","cocos2d::CCActionInterval",tolua_collect_cocos2d__CCAccelDeccelAmplitude);
   #else
   tolua_cclass(tolua_S,"CCAccelDeccelAmplitude","cocos2d::CCAccelDeccelAmplitude","cocos2d::CCActionInterval",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCAccelDeccelAmplitude");
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_delete00);
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_initWithAction00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_reverse00);
    tolua_function(tolua_S,"getRate",tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_getRate00);
    tolua_function(tolua_S,"setRate",tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_setRate00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCAccelDeccelAmplitude_actionWithAction00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCAccelAmplitude","cocos2d::CCAccelAmplitude","cocos2d::CCActionInterval",tolua_collect_cocos2d__CCAccelAmplitude);
   #else
   tolua_cclass(tolua_S,"CCAccelAmplitude","cocos2d::CCAccelAmplitude","cocos2d::CCActionInterval",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCAccelAmplitude");
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCAccelAmplitude_delete00);
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCAccelAmplitude_initWithAction00);
    tolua_function(tolua_S,"getRate",tolua_Cocos2d_cocos2d_CCAccelAmplitude_getRate00);
    tolua_function(tolua_S,"setRate",tolua_Cocos2d_cocos2d_CCAccelAmplitude_setRate00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCAccelAmplitude_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCAccelAmplitude_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCAccelAmplitude_reverse00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCAccelAmplitude_actionWithAction00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCDeccelAmplitude","cocos2d::CCDeccelAmplitude","cocos2d::CCActionInterval",tolua_collect_cocos2d__CCDeccelAmplitude);
   #else
   tolua_cclass(tolua_S,"CCDeccelAmplitude","cocos2d::CCDeccelAmplitude","cocos2d::CCActionInterval",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCDeccelAmplitude");
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCDeccelAmplitude_delete00);
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCDeccelAmplitude_initWithAction00);
    tolua_function(tolua_S,"getRate",tolua_Cocos2d_cocos2d_CCDeccelAmplitude_getRate00);
    tolua_function(tolua_S,"setRate",tolua_Cocos2d_cocos2d_CCDeccelAmplitude_setRate00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCDeccelAmplitude_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCDeccelAmplitude_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCDeccelAmplitude_reverse00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCDeccelAmplitude_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCStopGrid","cocos2d::CCStopGrid","cocos2d::CCActionInstant",NULL);
   tolua_beginmodule(tolua_S,"CCStopGrid");
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCStopGrid_startWithTarget00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCStopGrid_action00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCReuseGrid","cocos2d::CCReuseGrid","cocos2d::CCActionInstant",NULL);
   tolua_beginmodule(tolua_S,"CCReuseGrid");
    tolua_function(tolua_S,"initWithTimes",tolua_Cocos2d_cocos2d_CCReuseGrid_initWithTimes00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCReuseGrid_startWithTarget00);
    tolua_function(tolua_S,"actionWithTimes",tolua_Cocos2d_cocos2d_CCReuseGrid_actionWithTimes00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCActionInstant","cocos2d::CCActionInstant","cocos2d::CCFiniteTimeAction",tolua_collect_cocos2d__CCActionInstant);
   #else
   tolua_cclass(tolua_S,"CCActionInstant","cocos2d::CCActionInstant","cocos2d::CCFiniteTimeAction",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCActionInstant");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCActionInstant_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCActionInstant_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCActionInstant_new00_local);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCActionInstant_copyWithZone00);
    tolua_function(tolua_S,"isDone",tolua_Cocos2d_cocos2d_CCActionInstant_isDone00);
    tolua_function(tolua_S,"step",tolua_Cocos2d_cocos2d_CCActionInstant_step00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCActionInstant_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCActionInstant_reverse00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCShow","cocos2d::CCShow","cocos2d::CCActionInstant",tolua_collect_cocos2d__CCShow);
   #else
   tolua_cclass(tolua_S,"CCShow","cocos2d::CCShow","cocos2d::CCActionInstant",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCShow");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCShow_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCShow_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCShow_new00_local);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCShow_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCShow_reverse00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCShow_action00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCHide","cocos2d::CCHide","cocos2d::CCActionInstant",tolua_collect_cocos2d__CCHide);
   #else
   tolua_cclass(tolua_S,"CCHide","cocos2d::CCHide","cocos2d::CCActionInstant",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCHide");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCHide_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCHide_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCHide_new00_local);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCHide_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCHide_reverse00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCHide_action00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCToggleVisibility","cocos2d::CCToggleVisibility","cocos2d::CCActionInstant",tolua_collect_cocos2d__CCToggleVisibility);
   #else
   tolua_cclass(tolua_S,"CCToggleVisibility","cocos2d::CCToggleVisibility","cocos2d::CCActionInstant",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCToggleVisibility");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCToggleVisibility_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCToggleVisibility_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCToggleVisibility_new00_local);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCToggleVisibility_startWithTarget00);
    tolua_function(tolua_S,"action",tolua_Cocos2d_cocos2d_CCToggleVisibility_action00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCFlipX","cocos2d::CCFlipX","cocos2d::CCActionInstant",tolua_collect_cocos2d__CCFlipX);
   #else
   tolua_cclass(tolua_S,"CCFlipX","cocos2d::CCFlipX","cocos2d::CCActionInstant",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCFlipX");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCFlipX_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCFlipX_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCFlipX_new00_local);
    tolua_function(tolua_S,"actionWithFlipX",tolua_Cocos2d_cocos2d_CCFlipX_actionWithFlipX00);
    tolua_function(tolua_S,"initWithFlipX",tolua_Cocos2d_cocos2d_CCFlipX_initWithFlipX00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCFlipX_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCFlipX_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCFlipX_copyWithZone00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCFlipY","cocos2d::CCFlipY","cocos2d::CCActionInstant",tolua_collect_cocos2d__CCFlipY);
   #else
   tolua_cclass(tolua_S,"CCFlipY","cocos2d::CCFlipY","cocos2d::CCActionInstant",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCFlipY");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCFlipY_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCFlipY_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCFlipY_new00_local);
    tolua_function(tolua_S,"actionWithFlipY",tolua_Cocos2d_cocos2d_CCFlipY_actionWithFlipY00);
    tolua_function(tolua_S,"initWithFlipY",tolua_Cocos2d_cocos2d_CCFlipY_initWithFlipY00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCFlipY_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCFlipY_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCFlipY_copyWithZone00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCPlace","cocos2d::CCPlace","cocos2d::CCActionInstant",tolua_collect_cocos2d__CCPlace);
   #else
   tolua_cclass(tolua_S,"CCPlace","cocos2d::CCPlace","cocos2d::CCActionInstant",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCPlace");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCPlace_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCPlace_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCPlace_new00_local);
    tolua_function(tolua_S,"actionWithPosition",tolua_Cocos2d_cocos2d_CCPlace_actionWithPosition00);
    tolua_function(tolua_S,"initWithPosition",tolua_Cocos2d_cocos2d_CCPlace_initWithPosition00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCPlace_startWithTarget00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCPlace_copyWithZone00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCCallFunc","cocos2d::CCCallFunc","cocos2d::CCActionInstant",tolua_collect_cocos2d__CCCallFunc);
   #else
   tolua_cclass(tolua_S,"CCCallFunc","cocos2d::CCCallFunc","cocos2d::CCActionInstant",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCCallFunc");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCCallFunc_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCCallFunc_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCCallFunc_new00_local);
    tolua_function(tolua_S,"actionWithTarget",tolua_Cocos2d_cocos2d_CCCallFunc_actionWithTarget00);
    tolua_function(tolua_S,"actionWithScriptFuncName",tolua_Cocos2d_cocos2d_CCCallFunc_actionWithScriptFuncName00);
    tolua_function(tolua_S,"initWithTarget",tolua_Cocos2d_cocos2d_CCCallFunc_initWithTarget00);
    tolua_function(tolua_S,"initWithScriptFuncName",tolua_Cocos2d_cocos2d_CCCallFunc_initWithScriptFuncName00);
    tolua_function(tolua_S,"execute",tolua_Cocos2d_cocos2d_CCCallFunc_execute00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCCallFunc_startWithTarget00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCCallFunc_copyWithZone00);
    tolua_function(tolua_S,"getTargetCallback",tolua_Cocos2d_cocos2d_CCCallFunc_getTargetCallback00);
    tolua_function(tolua_S,"setTargetCallback",tolua_Cocos2d_cocos2d_CCCallFunc_setTargetCallback00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCCallFuncN","cocos2d::CCCallFuncN","cocos2d::CCCallFunc",tolua_collect_cocos2d__CCCallFuncN);
   #else
   tolua_cclass(tolua_S,"CCCallFuncN","cocos2d::CCCallFuncN","cocos2d::CCCallFunc",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCCallFuncN");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCCallFuncN_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCCallFuncN_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCCallFuncN_new00_local);
    tolua_function(tolua_S,"actionWithTarget",tolua_Cocos2d_cocos2d_CCCallFuncN_actionWithTarget00);
    tolua_function(tolua_S,"actionWithScriptFuncName",tolua_Cocos2d_cocos2d_CCCallFuncN_actionWithScriptFuncName00);
    tolua_function(tolua_S,"initWithTarget",tolua_Cocos2d_cocos2d_CCCallFuncN_initWithTarget00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCCallFuncN_copyWithZone00);
    tolua_function(tolua_S,"execute",tolua_Cocos2d_cocos2d_CCCallFuncN_execute00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCCallFuncND","cocos2d::CCCallFuncND","cocos2d::CCCallFuncN",NULL);
   tolua_beginmodule(tolua_S,"CCCallFuncND");
    tolua_function(tolua_S,"actionWithTarget",tolua_Cocos2d_cocos2d_CCCallFuncND_actionWithTarget00);
    tolua_function(tolua_S,"actionWithScriptFuncName",tolua_Cocos2d_cocos2d_CCCallFuncND_actionWithScriptFuncName00);
    tolua_function(tolua_S,"initWithTarget",tolua_Cocos2d_cocos2d_CCCallFuncND_initWithTarget00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCCallFuncND_copyWithZone00);
    tolua_function(tolua_S,"execute",tolua_Cocos2d_cocos2d_CCCallFuncND_execute00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCCallFuncO","cocos2d::CCCallFuncO","cocos2d::CCCallFunc",tolua_collect_cocos2d__CCCallFuncO);
   #else
   tolua_cclass(tolua_S,"CCCallFuncO","cocos2d::CCCallFuncO","cocos2d::CCCallFunc",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCCallFuncO");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCCallFuncO_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCCallFuncO_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCCallFuncO_new00_local);
    tolua_function(tolua_S,"actionWithTarget",tolua_Cocos2d_cocos2d_CCCallFuncO_actionWithTarget00);
    tolua_function(tolua_S,"actionWithScriptFuncName",tolua_Cocos2d_cocos2d_CCCallFuncO_actionWithScriptFuncName00);
    tolua_function(tolua_S,"initWithTarget",tolua_Cocos2d_cocos2d_CCCallFuncO_initWithTarget00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCCallFuncO_copyWithZone00);
    tolua_function(tolua_S,"execute",tolua_Cocos2d_cocos2d_CCCallFuncO_execute00);
    tolua_function(tolua_S,"getObject",tolua_Cocos2d_cocos2d_CCCallFuncO_getObject00);
    tolua_function(tolua_S,"setObject",tolua_Cocos2d_cocos2d_CCCallFuncO_setObject00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCSequence","cocos2d::CCSequence","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCSequence");
    tolua_function(tolua_S,"initOneTwo",tolua_Cocos2d_cocos2d_CCSequence_initOneTwo00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCSequence_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCSequence_startWithTarget00);
    tolua_function(tolua_S,"stop",tolua_Cocos2d_cocos2d_CCSequence_stop00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCSequence_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCSequence_reverse00);
    tolua_function(tolua_S,"actionOneTwo",tolua_Cocos2d_cocos2d_CCSequence_actionOneTwo00);
    tolua_function(tolua_S,"actionsWithArray",tolua_Cocos2d_cocos2d_CCSequence_actionsWithArray00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCRepeat","cocos2d::CCRepeat","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCRepeat");
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCRepeat_initWithAction00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCRepeat_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCRepeat_startWithTarget00);
    tolua_function(tolua_S,"stop",tolua_Cocos2d_cocos2d_CCRepeat_stop00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCRepeat_update00);
    tolua_function(tolua_S,"isDone",tolua_Cocos2d_cocos2d_CCRepeat_isDone00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCRepeat_reverse00);
    tolua_function(tolua_S,"setInnerAction",tolua_Cocos2d_cocos2d_CCRepeat_setInnerAction00);
    tolua_function(tolua_S,"getInnerAction",tolua_Cocos2d_cocos2d_CCRepeat_getInnerAction00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCRepeat_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCSpawn","cocos2d::CCSpawn","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCSpawn");
    tolua_function(tolua_S,"initOneTwo",tolua_Cocos2d_cocos2d_CCSpawn_initOneTwo00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCSpawn_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCSpawn_startWithTarget00);
    tolua_function(tolua_S,"stop",tolua_Cocos2d_cocos2d_CCSpawn_stop00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCSpawn_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCSpawn_reverse00);
    tolua_function(tolua_S,"actionOneTwo",tolua_Cocos2d_cocos2d_CCSpawn_actionOneTwo00);
    tolua_function(tolua_S,"actionsWithArray",tolua_Cocos2d_cocos2d_CCSpawn_actionsWithArray00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCRotateTo","cocos2d::CCRotateTo","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCRotateTo");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCRotateTo_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCRotateTo_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCRotateTo_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCRotateTo_update00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCRotateTo_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCRotateBy","cocos2d::CCRotateBy","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCRotateBy");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCRotateBy_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCRotateBy_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCRotateBy_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCRotateBy_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCRotateBy_reverse00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCRotateBy_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCMoveTo","cocos2d::CCMoveTo","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCMoveTo");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCMoveTo_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCMoveTo_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCMoveTo_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCMoveTo_update00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCMoveTo_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCMoveBy","cocos2d::CCMoveBy","cocos2d::CCMoveTo",NULL);
   tolua_beginmodule(tolua_S,"CCMoveBy");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCMoveBy_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCMoveBy_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCMoveBy_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCMoveBy_reverse00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCMoveBy_actionWithDuration00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCSkewTo","cocos2d::CCSkewTo","cocos2d::CCActionInterval",tolua_collect_cocos2d__CCSkewTo);
   #else
   tolua_cclass(tolua_S,"CCSkewTo","cocos2d::CCSkewTo","cocos2d::CCActionInterval",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCSkewTo");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCSkewTo_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCSkewTo_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCSkewTo_new00_local);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCSkewTo_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCSkewTo_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCSkewTo_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCSkewTo_update00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCSkewTo_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCSkewBy","cocos2d::CCSkewBy","cocos2d::CCSkewTo",NULL);
   tolua_beginmodule(tolua_S,"CCSkewBy");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCSkewBy_initWithDuration00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCSkewBy_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCSkewBy_reverse00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCSkewBy_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCJumpBy","cocos2d::CCJumpBy","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCJumpBy");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCJumpBy_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCJumpBy_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCJumpBy_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCJumpBy_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCJumpBy_reverse00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCJumpBy_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCJumpTo","cocos2d::CCJumpTo","cocos2d::CCJumpBy",NULL);
   tolua_beginmodule(tolua_S,"CCJumpTo");
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCJumpTo_startWithTarget00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCJumpTo_copyWithZone00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCJumpTo_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccBezierConfig","cocos2d::ccBezierConfig","",NULL);
   tolua_beginmodule(tolua_S,"ccBezierConfig");
    tolua_variable(tolua_S,"endPosition",tolua_get_cocos2d__ccBezierConfig_endPosition,tolua_set_cocos2d__ccBezierConfig_endPosition);
    tolua_variable(tolua_S,"controlPoint_1",tolua_get_cocos2d__ccBezierConfig_controlPoint_1,tolua_set_cocos2d__ccBezierConfig_controlPoint_1);
    tolua_variable(tolua_S,"controlPoint_2",tolua_get_cocos2d__ccBezierConfig_controlPoint_2,tolua_set_cocos2d__ccBezierConfig_controlPoint_2);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCBezierBy","cocos2d::CCBezierBy","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCBezierBy");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCBezierBy_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCBezierBy_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCBezierBy_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCBezierBy_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCBezierBy_reverse00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCBezierBy_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCBezierTo","cocos2d::CCBezierTo","cocos2d::CCBezierBy",NULL);
   tolua_beginmodule(tolua_S,"CCBezierTo");
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCBezierTo_startWithTarget00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCBezierTo_copyWithZone00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCBezierTo_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCScaleTo","cocos2d::CCScaleTo","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCScaleTo");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCScaleTo_initWithDuration00);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCScaleTo_initWithDuration01);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCScaleTo_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCScaleTo_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCScaleTo_update00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCScaleTo_actionWithDuration00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCScaleTo_actionWithDuration01);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCScaleBy","cocos2d::CCScaleBy","cocos2d::CCScaleTo",NULL);
   tolua_beginmodule(tolua_S,"CCScaleBy");
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCScaleBy_startWithTarget00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCScaleBy_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCScaleBy_copyWithZone00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCScaleBy_actionWithDuration00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCScaleBy_actionWithDuration01);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCBlink","cocos2d::CCBlink","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCBlink");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCBlink_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCBlink_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCBlink_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCBlink_reverse00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCBlink_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCFadeIn","cocos2d::CCFadeIn","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCFadeIn");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCFadeIn_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCFadeIn_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCFadeIn_copyWithZone00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCFadeIn_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCFadeOut","cocos2d::CCFadeOut","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCFadeOut");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCFadeOut_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCFadeOut_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCFadeOut_copyWithZone00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCFadeOut_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCFadeTo","cocos2d::CCFadeTo","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCFadeTo");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCFadeTo_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCFadeTo_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCFadeTo_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCFadeTo_update00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCFadeTo_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCTintTo","cocos2d::CCTintTo","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCTintTo");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCTintTo_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCTintTo_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCTintTo_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCTintTo_update00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCTintTo_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCTintBy","cocos2d::CCTintBy","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCTintBy");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCTintBy_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCTintBy_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCTintBy_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCTintBy_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCTintBy_reverse00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCTintBy_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCDelayTime","cocos2d::CCDelayTime","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCDelayTime");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCDelayTime_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCDelayTime_reverse00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCDelayTime_copyWithZone00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCDelayTime_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCReverseTime","cocos2d::CCReverseTime","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCReverseTime");
    tolua_function(tolua_S,"initWithAction",tolua_Cocos2d_cocos2d_CCReverseTime_initWithAction00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCReverseTime_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCReverseTime_startWithTarget00);
    tolua_function(tolua_S,"stop",tolua_Cocos2d_cocos2d_CCReverseTime_stop00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCReverseTime_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCReverseTime_reverse00);
    tolua_function(tolua_S,"actionWithAction",tolua_Cocos2d_cocos2d_CCReverseTime_actionWithAction00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCAnimate","cocos2d::CCAnimate","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCAnimate");
    tolua_function(tolua_S,"getAnimation",tolua_Cocos2d_cocos2d_CCAnimate_getAnimation00);
    tolua_function(tolua_S,"setAnimation",tolua_Cocos2d_cocos2d_CCAnimate_setAnimation00);
    tolua_function(tolua_S,"initWithAnimation",tolua_Cocos2d_cocos2d_CCAnimate_initWithAnimation00);
    tolua_function(tolua_S,"initWithAnimation",tolua_Cocos2d_cocos2d_CCAnimate_initWithAnimation01);
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCAnimate_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCAnimate_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCAnimate_startWithTarget00);
    tolua_function(tolua_S,"stop",tolua_Cocos2d_cocos2d_CCAnimate_stop00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCAnimate_update00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCAnimate_reverse00);
    tolua_function(tolua_S,"actionWithAnimation",tolua_Cocos2d_cocos2d_CCAnimate_actionWithAnimation00);
    tolua_function(tolua_S,"actionWithAnimation",tolua_Cocos2d_cocos2d_CCAnimate_actionWithAnimation01);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCAnimate_actionWithDuration00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"_hashElement","cocos2d::_hashElement","",NULL);
   tolua_beginmodule(tolua_S,"_hashElement");
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCActionManager","cocos2d::CCActionManager","cocos2d::CCObject",tolua_collect_cocos2d__CCActionManager);
   #else
   tolua_cclass(tolua_S,"CCActionManager","cocos2d::CCActionManager","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCActionManager");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCActionManager_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCActionManager_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCActionManager_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCActionManager_init00);
    tolua_function(tolua_S,"addAction",tolua_Cocos2d_cocos2d_CCActionManager_addAction00);
    tolua_function(tolua_S,"removeAllActions",tolua_Cocos2d_cocos2d_CCActionManager_removeAllActions00);
    tolua_function(tolua_S,"removeAllActionsFromTarget",tolua_Cocos2d_cocos2d_CCActionManager_removeAllActionsFromTarget00);
    tolua_function(tolua_S,"removeAction",tolua_Cocos2d_cocos2d_CCActionManager_removeAction00);
    tolua_function(tolua_S,"removeActionByTag",tolua_Cocos2d_cocos2d_CCActionManager_removeActionByTag00);
    tolua_function(tolua_S,"getActionByTag",tolua_Cocos2d_cocos2d_CCActionManager_getActionByTag00);
    tolua_function(tolua_S,"numberOfRunningActionsInTarget",tolua_Cocos2d_cocos2d_CCActionManager_numberOfRunningActionsInTarget00);
    tolua_function(tolua_S,"pauseTarget",tolua_Cocos2d_cocos2d_CCActionManager_pauseTarget00);
    tolua_function(tolua_S,"resumeTarget",tolua_Cocos2d_cocos2d_CCActionManager_resumeTarget00);
    tolua_function(tolua_S,"purgeSharedManager",tolua_Cocos2d_cocos2d_CCActionManager_purgeSharedManager00);
    tolua_function(tolua_S,"selectorProtocolRetain",tolua_Cocos2d_cocos2d_CCActionManager_selectorProtocolRetain00);
    tolua_function(tolua_S,"selectorProtocolRelease",tolua_Cocos2d_cocos2d_CCActionManager_selectorProtocolRelease00);
    tolua_function(tolua_S,"sharedManager",tolua_Cocos2d_cocos2d_CCActionManager_sharedManager00);
    tolua_variable(tolua_S,"__SelectorProtocol__",tolua_get_cocos2d__CCActionManager___SelectorProtocol__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCPageTurn3D","cocos2d::CCPageTurn3D","CCGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCPageTurn3D");
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCPageTurn3D_update00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCPageTurn3D_actionWithSize00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCProgressTo","cocos2d::CCProgressTo","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCProgressTo");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCProgressTo_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCProgressTo_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCProgressTo_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCProgressTo_update00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCProgressTo_actionWithDuration00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCProgressFromTo","cocos2d::CCProgressFromTo","cocos2d::CCActionInterval",NULL);
   tolua_beginmodule(tolua_S,"CCProgressFromTo");
    tolua_function(tolua_S,"initWithDuration",tolua_Cocos2d_cocos2d_CCProgressFromTo_initWithDuration00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCProgressFromTo_copyWithZone00);
    tolua_function(tolua_S,"reverse",tolua_Cocos2d_cocos2d_CCProgressFromTo_reverse00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCProgressFromTo_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCProgressFromTo_update00);
    tolua_function(tolua_S,"actionWithDuration",tolua_Cocos2d_cocos2d_CCProgressFromTo_actionWithDuration00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCShakyTiles3D","cocos2d::CCShakyTiles3D","CCTiledGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCShakyTiles3D");
    tolua_function(tolua_S,"initWithRange",tolua_Cocos2d_cocos2d_CCShakyTiles3D_initWithRange00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCShakyTiles3D_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCShakyTiles3D_update00);
    tolua_function(tolua_S,"actionWithRange",tolua_Cocos2d_cocos2d_CCShakyTiles3D_actionWithRange00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCShatteredTiles3D","cocos2d::CCShatteredTiles3D","CCTiledGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCShatteredTiles3D");
    tolua_function(tolua_S,"initWithRange",tolua_Cocos2d_cocos2d_CCShatteredTiles3D_initWithRange00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCShatteredTiles3D_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCShatteredTiles3D_update00);
    tolua_function(tolua_S,"actionWithRange",tolua_Cocos2d_cocos2d_CCShatteredTiles3D_actionWithRange00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"Tile","cocos2d::Tile","",NULL);
   tolua_beginmodule(tolua_S,"Tile");
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCShuffleTiles","cocos2d::CCShuffleTiles","CCTiledGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCShuffleTiles");
    tolua_function(tolua_S,"initWithSeed",tolua_Cocos2d_cocos2d_CCShuffleTiles_initWithSeed00);
    tolua_function(tolua_S,"shuffle",tolua_Cocos2d_cocos2d_CCShuffleTiles_shuffle00);
    tolua_function(tolua_S,"getDelta",tolua_Cocos2d_cocos2d_CCShuffleTiles_getDelta00);
    tolua_function(tolua_S,"placeTile",tolua_Cocos2d_cocos2d_CCShuffleTiles_placeTile00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCShuffleTiles_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCShuffleTiles_update00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCShuffleTiles_copyWithZone00);
    tolua_function(tolua_S,"actionWithSeed",tolua_Cocos2d_cocos2d_CCShuffleTiles_actionWithSeed00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCFadeOutTRTiles","cocos2d::CCFadeOutTRTiles","CCTiledGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCFadeOutTRTiles");
    tolua_function(tolua_S,"testFunc",tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_testFunc00);
    tolua_function(tolua_S,"turnOnTile",tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_turnOnTile00);
    tolua_function(tolua_S,"turnOffTile",tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_turnOffTile00);
    tolua_function(tolua_S,"transformTile",tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_transformTile00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_update00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCFadeOutTRTiles_actionWithSize00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCFadeOutBLTiles","cocos2d::CCFadeOutBLTiles","cocos2d::CCFadeOutTRTiles",NULL);
   tolua_beginmodule(tolua_S,"CCFadeOutBLTiles");
    tolua_function(tolua_S,"testFunc",tolua_Cocos2d_cocos2d_CCFadeOutBLTiles_testFunc00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCFadeOutBLTiles_actionWithSize00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCFadeOutUpTiles","cocos2d::CCFadeOutUpTiles","cocos2d::CCFadeOutTRTiles",NULL);
   tolua_beginmodule(tolua_S,"CCFadeOutUpTiles");
    tolua_function(tolua_S,"testFunc",tolua_Cocos2d_cocos2d_CCFadeOutUpTiles_testFunc00);
    tolua_function(tolua_S,"transformTile",tolua_Cocos2d_cocos2d_CCFadeOutUpTiles_transformTile00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCFadeOutUpTiles_actionWithSize00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCFadeOutDownTiles","cocos2d::CCFadeOutDownTiles","cocos2d::CCFadeOutUpTiles",NULL);
   tolua_beginmodule(tolua_S,"CCFadeOutDownTiles");
    tolua_function(tolua_S,"testFunc",tolua_Cocos2d_cocos2d_CCFadeOutDownTiles_testFunc00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCFadeOutDownTiles_actionWithSize00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCTurnOffTiles","cocos2d::CCTurnOffTiles","CCTiledGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCTurnOffTiles");
    tolua_function(tolua_S,"initWithSeed",tolua_Cocos2d_cocos2d_CCTurnOffTiles_initWithSeed00);
    tolua_function(tolua_S,"shuffle",tolua_Cocos2d_cocos2d_CCTurnOffTiles_shuffle00);
    tolua_function(tolua_S,"turnOnTile",tolua_Cocos2d_cocos2d_CCTurnOffTiles_turnOnTile00);
    tolua_function(tolua_S,"turnOffTile",tolua_Cocos2d_cocos2d_CCTurnOffTiles_turnOffTile00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCTurnOffTiles_copyWithZone00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCTurnOffTiles_startWithTarget00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCTurnOffTiles_update00);
    tolua_function(tolua_S,"actionWithSize",tolua_Cocos2d_cocos2d_CCTurnOffTiles_actionWithSize00);
    tolua_function(tolua_S,"actionWithSeed",tolua_Cocos2d_cocos2d_CCTurnOffTiles_actionWithSeed00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCWavesTiles3D","cocos2d::CCWavesTiles3D","CCTiledGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCWavesTiles3D");
    tolua_function(tolua_S,"getAmplitude",tolua_Cocos2d_cocos2d_CCWavesTiles3D_getAmplitude00);
    tolua_function(tolua_S,"setAmplitude",tolua_Cocos2d_cocos2d_CCWavesTiles3D_setAmplitude00);
    tolua_function(tolua_S,"getAmplitudeRate",tolua_Cocos2d_cocos2d_CCWavesTiles3D_getAmplitudeRate00);
    tolua_function(tolua_S,"setAmplitudeRate",tolua_Cocos2d_cocos2d_CCWavesTiles3D_setAmplitudeRate00);
    tolua_function(tolua_S,"initWithWaves",tolua_Cocos2d_cocos2d_CCWavesTiles3D_initWithWaves00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCWavesTiles3D_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCWavesTiles3D_update00);
    tolua_function(tolua_S,"actionWithWaves",tolua_Cocos2d_cocos2d_CCWavesTiles3D_actionWithWaves00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCJumpTiles3D","cocos2d::CCJumpTiles3D","CCTiledGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCJumpTiles3D");
    tolua_function(tolua_S,"getAmplitude",tolua_Cocos2d_cocos2d_CCJumpTiles3D_getAmplitude00);
    tolua_function(tolua_S,"setAmplitude",tolua_Cocos2d_cocos2d_CCJumpTiles3D_setAmplitude00);
    tolua_function(tolua_S,"getAmplitudeRate",tolua_Cocos2d_cocos2d_CCJumpTiles3D_getAmplitudeRate00);
    tolua_function(tolua_S,"setAmplitudeRate",tolua_Cocos2d_cocos2d_CCJumpTiles3D_setAmplitudeRate00);
    tolua_function(tolua_S,"initWithJumps",tolua_Cocos2d_cocos2d_CCJumpTiles3D_initWithJumps00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCJumpTiles3D_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCJumpTiles3D_update00);
    tolua_function(tolua_S,"actionWithJumps",tolua_Cocos2d_cocos2d_CCJumpTiles3D_actionWithJumps00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCSplitRows","cocos2d::CCSplitRows","CCTiledGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCSplitRows");
    tolua_function(tolua_S,"initWithRows",tolua_Cocos2d_cocos2d_CCSplitRows_initWithRows00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCSplitRows_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCSplitRows_update00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCSplitRows_startWithTarget00);
    tolua_function(tolua_S,"actionWithRows",tolua_Cocos2d_cocos2d_CCSplitRows_actionWithRows00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCSplitCols","cocos2d::CCSplitCols","CCTiledGrid3DAction",NULL);
   tolua_beginmodule(tolua_S,"CCSplitCols");
    tolua_function(tolua_S,"initWithCols",tolua_Cocos2d_cocos2d_CCSplitCols_initWithCols00);
    tolua_function(tolua_S,"copyWithZone",tolua_Cocos2d_cocos2d_CCSplitCols_copyWithZone00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCSplitCols_update00);
    tolua_function(tolua_S,"startWithTarget",tolua_Cocos2d_cocos2d_CCSplitCols_startWithTarget00);
    tolua_function(tolua_S,"actionWithCols",tolua_Cocos2d_cocos2d_CCSplitCols_actionWithCols00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCAnimation","cocos2d::CCAnimation","cocos2d::CCObject",NULL);
   tolua_beginmodule(tolua_S,"CCAnimation");
    tolua_function(tolua_S,"getName",tolua_Cocos2d_cocos2d_CCAnimation_getName00);
    tolua_function(tolua_S,"setName",tolua_Cocos2d_cocos2d_CCAnimation_setName00);
    tolua_function(tolua_S,"getDelay",tolua_Cocos2d_cocos2d_CCAnimation_getDelay00);
    tolua_function(tolua_S,"setDelay",tolua_Cocos2d_cocos2d_CCAnimation_setDelay00);
    tolua_function(tolua_S,"getFrames",tolua_Cocos2d_cocos2d_CCAnimation_getFrames00);
    tolua_function(tolua_S,"setFrames",tolua_Cocos2d_cocos2d_CCAnimation_setFrames00);
    tolua_function(tolua_S,"initWithFrames",tolua_Cocos2d_cocos2d_CCAnimation_initWithFrames00);
    tolua_function(tolua_S,"initWithFrames",tolua_Cocos2d_cocos2d_CCAnimation_initWithFrames01);
    tolua_function(tolua_S,"addFrame",tolua_Cocos2d_cocos2d_CCAnimation_addFrame00);
    tolua_function(tolua_S,"addFrameWithFileName",tolua_Cocos2d_cocos2d_CCAnimation_addFrameWithFileName00);
    tolua_function(tolua_S,"addFrameWithTexture",tolua_Cocos2d_cocos2d_CCAnimation_addFrameWithTexture00);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCAnimation_init00);
    tolua_function(tolua_S,"animation",tolua_Cocos2d_cocos2d_CCAnimation_animation00);
    tolua_function(tolua_S,"animationWithFrames",tolua_Cocos2d_cocos2d_CCAnimation_animationWithFrames00);
    tolua_function(tolua_S,"animationWithFrames",tolua_Cocos2d_cocos2d_CCAnimation_animationWithFrames01);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCAnimationCache","cocos2d::CCAnimationCache","cocos2d::CCObject",tolua_collect_cocos2d__CCAnimationCache);
   #else
   tolua_cclass(tolua_S,"CCAnimationCache","cocos2d::CCAnimationCache","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCAnimationCache");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCAnimationCache_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCAnimationCache_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCAnimationCache_new00_local);
    tolua_function(tolua_S,"sharedAnimationCache",tolua_Cocos2d_cocos2d_CCAnimationCache_sharedAnimationCache00);
    tolua_function(tolua_S,"purgeSharedAnimationCache",tolua_Cocos2d_cocos2d_CCAnimationCache_purgeSharedAnimationCache00);
    tolua_function(tolua_S,"addAnimation",tolua_Cocos2d_cocos2d_CCAnimationCache_addAnimation00);
    tolua_function(tolua_S,"removeAnimationByName",tolua_Cocos2d_cocos2d_CCAnimationCache_removeAnimationByName00);
    tolua_function(tolua_S,"animationByName",tolua_Cocos2d_cocos2d_CCAnimationCache_animationByName00);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCAnimationCache_init00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCArray","cocos2d::CCArray","cocos2d::CCObject",NULL);
   tolua_beginmodule(tolua_S,"CCArray");
    tolua_function(tolua_S,"array",tolua_Cocos2d_cocos2d_CCArray_array00);
    tolua_function(tolua_S,"arrayWithCapacity",tolua_Cocos2d_cocos2d_CCArray_arrayWithCapacity00);
    tolua_function(tolua_S,"arrayWithArray",tolua_Cocos2d_cocos2d_CCArray_arrayWithArray00);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCArray_init00);
    tolua_function(tolua_S,"initWithCapacity",tolua_Cocos2d_cocos2d_CCArray_initWithCapacity00);
    tolua_function(tolua_S,"initWithArray",tolua_Cocos2d_cocos2d_CCArray_initWithArray00);
    tolua_function(tolua_S,"count",tolua_Cocos2d_cocos2d_CCArray_count00);
    tolua_function(tolua_S,"capacity",tolua_Cocos2d_cocos2d_CCArray_capacity00);
    tolua_function(tolua_S,"indexOfObject",tolua_Cocos2d_cocos2d_CCArray_indexOfObject00);
    tolua_function(tolua_S,"objectAtIndex",tolua_Cocos2d_cocos2d_CCArray_objectAtIndex00);
    tolua_function(tolua_S,"lastObject",tolua_Cocos2d_cocos2d_CCArray_lastObject00);
    tolua_function(tolua_S,"randomObject",tolua_Cocos2d_cocos2d_CCArray_randomObject00);
    tolua_function(tolua_S,"containsObject",tolua_Cocos2d_cocos2d_CCArray_containsObject00);
    tolua_function(tolua_S,"addObject",tolua_Cocos2d_cocos2d_CCArray_addObject00);
    tolua_function(tolua_S,"addObjectsFromArray",tolua_Cocos2d_cocos2d_CCArray_addObjectsFromArray00);
    tolua_function(tolua_S,"insertObject",tolua_Cocos2d_cocos2d_CCArray_insertObject00);
    tolua_function(tolua_S,"removeLastObject",tolua_Cocos2d_cocos2d_CCArray_removeLastObject00);
    tolua_function(tolua_S,"removeObject",tolua_Cocos2d_cocos2d_CCArray_removeObject00);
    tolua_function(tolua_S,"removeObjectAtIndex",tolua_Cocos2d_cocos2d_CCArray_removeObjectAtIndex00);
    tolua_function(tolua_S,"removeObjectsInArray",tolua_Cocos2d_cocos2d_CCArray_removeObjectsInArray00);
    tolua_function(tolua_S,"removeAllObjects",tolua_Cocos2d_cocos2d_CCArray_removeAllObjects00);
    tolua_function(tolua_S,"fastRemoveObject",tolua_Cocos2d_cocos2d_CCArray_fastRemoveObject00);
    tolua_function(tolua_S,"fastRemoveObjectAtIndex",tolua_Cocos2d_cocos2d_CCArray_fastRemoveObjectAtIndex00);
    tolua_function(tolua_S,"exchangeObject",tolua_Cocos2d_cocos2d_CCArray_exchangeObject00);
    tolua_function(tolua_S,"exchangeObjectAtIndex",tolua_Cocos2d_cocos2d_CCArray_exchangeObjectAtIndex00);
    tolua_function(tolua_S,"reverseObjects",tolua_Cocos2d_cocos2d_CCArray_reverseObjects00);
    tolua_function(tolua_S,"reduceMemoryFootprint",tolua_Cocos2d_cocos2d_CCArray_reduceMemoryFootprint00);
    tolua_variable(tolua_S,"data",tolua_get_cocos2d__CCArray_data_ptr,tolua_set_cocos2d__CCArray_data_ptr);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCAtlasNode","cocos2d::CCAtlasNode","cocos2d::CCNode",tolua_collect_cocos2d__CCAtlasNode);
   #else
   tolua_cclass(tolua_S,"CCAtlasNode","cocos2d::CCAtlasNode","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCAtlasNode");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCAtlasNode_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCAtlasNode_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCAtlasNode_new00_local);
    tolua_function(tolua_S,"atlasWithTileFile",tolua_Cocos2d_cocos2d_CCAtlasNode_atlasWithTileFile00);
    tolua_function(tolua_S,"initWithTileFile",tolua_Cocos2d_cocos2d_CCAtlasNode_initWithTileFile00);
    tolua_function(tolua_S,"updateAtlasValues",tolua_Cocos2d_cocos2d_CCAtlasNode_updateAtlasValues00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCAtlasNode_draw00);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCAtlasNode_convertToRGBAProtocol00);
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCAtlasNode_getTexture00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCAtlasNode_setTexture00);
    tolua_variable(tolua_S,"__CCRGBAProtocol__",tolua_get_cocos2d__CCAtlasNode___CCRGBAProtocol__,NULL);
    tolua_variable(tolua_S,"__CCTextureProtocol__",tolua_get_cocos2d__CCAtlasNode___CCTextureProtocol__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCAutoreleasePool","cocos2d::CCAutoreleasePool","cocos2d::CCObject",tolua_collect_cocos2d__CCAutoreleasePool);
   #else
   tolua_cclass(tolua_S,"CCAutoreleasePool","cocos2d::CCAutoreleasePool","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCAutoreleasePool");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCAutoreleasePool_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCAutoreleasePool_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCAutoreleasePool_new00_local);
    tolua_function(tolua_S,"addObject",tolua_Cocos2d_cocos2d_CCAutoreleasePool_addObject00);
    tolua_function(tolua_S,"removeObject",tolua_Cocos2d_cocos2d_CCAutoreleasePool_removeObject00);
    tolua_function(tolua_S,"clear",tolua_Cocos2d_cocos2d_CCAutoreleasePool_clear00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCPoolManager","cocos2d::CCPoolManager","",tolua_collect_cocos2d__CCPoolManager);
   #else
   tolua_cclass(tolua_S,"CCPoolManager","cocos2d::CCPoolManager","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCPoolManager");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCPoolManager_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCPoolManager_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCPoolManager_new00_local);
    tolua_function(tolua_S,"finalize",tolua_Cocos2d_cocos2d_CCPoolManager_finalize00);
    tolua_function(tolua_S,"push",tolua_Cocos2d_cocos2d_CCPoolManager_push00);
    tolua_function(tolua_S,"pop",tolua_Cocos2d_cocos2d_CCPoolManager_pop00);
    tolua_function(tolua_S,"removeObject",tolua_Cocos2d_cocos2d_CCPoolManager_removeObject00);
    tolua_function(tolua_S,"addObject",tolua_Cocos2d_cocos2d_CCPoolManager_addObject00);
    tolua_function(tolua_S,"getInstance",tolua_Cocos2d_cocos2d_CCPoolManager_getInstance00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL",CC_FIX_ARTIFACTS_BY_STRECHING_TEXEL);
  tolua_constant(tolua_S,"CC_FONT_LABEL_SUPPORT",CC_FONT_LABEL_SUPPORT);
  tolua_constant(tolua_S,"CC_DIRECTOR_FAST_FPS",CC_DIRECTOR_FAST_FPS);
  tolua_constant(tolua_S,"CC_DIRECTOR_FPS_INTERVAL",CC_DIRECTOR_FPS_INTERVAL);
  tolua_constant(tolua_S,"CC_DIRECTOR_DISPATCH_FAST_EVENTS",CC_DIRECTOR_DISPATCH_FAST_EVENTS);
  tolua_constant(tolua_S,"CC_DIRECTOR_MAC_USE_DISPLAY_LINK_THREAD",CC_DIRECTOR_MAC_USE_DISPLAY_LINK_THREAD);
  tolua_constant(tolua_S,"CC_COCOSNODE_RENDER_SUBPIXEL",CC_COCOSNODE_RENDER_SUBPIXEL);
  tolua_constant(tolua_S,"CC_SPRITEBATCHNODE_RENDER_SUBPIXEL",CC_SPRITEBATCHNODE_RENDER_SUBPIXEL);
  tolua_constant(tolua_S,"CC_USES_VBO",CC_USES_VBO);
  tolua_constant(tolua_S,"CC_USES_VBO",CC_USES_VBO);
  tolua_constant(tolua_S,"CC_NODE_TRANSFORM_USING_AFFINE_MATRIX",CC_NODE_TRANSFORM_USING_AFFINE_MATRIX);
  tolua_constant(tolua_S,"CC_OPTIMIZE_BLEND_FUNC_FOR_PREMULTIPLIED_ALPHA",CC_OPTIMIZE_BLEND_FUNC_FOR_PREMULTIPLIED_ALPHA);
  tolua_constant(tolua_S,"CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP",CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP);
  tolua_constant(tolua_S,"CC_TEXTURE_NPOT_SUPPORT",CC_TEXTURE_NPOT_SUPPORT);
  tolua_constant(tolua_S,"CC_RETINA_DISPLAY_SUPPORT",CC_RETINA_DISPLAY_SUPPORT);
  tolua_constant(tolua_S,"CC_USE_LA88_LABELS_ON_NEON_ARCH",CC_USE_LA88_LABELS_ON_NEON_ARCH);
  tolua_constant(tolua_S,"CC_SPRITE_DEBUG_DRAW",CC_SPRITE_DEBUG_DRAW);
  tolua_constant(tolua_S,"CC_SPRITEBATCHNODE_DEBUG_DRAW",CC_SPRITEBATCHNODE_DEBUG_DRAW);
  tolua_constant(tolua_S,"CC_LABELBMFONT_DEBUG_DRAW",CC_LABELBMFONT_DEBUG_DRAW);
  tolua_constant(tolua_S,"CC_LABELATLAS_DEBUG_DRAW",CC_LABELATLAS_DEBUG_DRAW);
  tolua_constant(tolua_S,"CC_ENABLE_PROFILERS",CC_ENABLE_PROFILERS);
  tolua_constant(tolua_S,"CC_IS_RETINA_DISPLAY_SUPPORTED",CC_IS_RETINA_DISPLAY_SUPPORTED);
  tolua_constant(tolua_S,"CC_IS_RETINA_DISPLAY_SUPPORTED",CC_IS_RETINA_DISPLAY_SUPPORTED);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"kCCDirectorProjection2D",cocos2d::kCCDirectorProjection2D);
   tolua_constant(tolua_S,"kCCDirectorProjection3D",cocos2d::kCCDirectorProjection3D);
   tolua_constant(tolua_S,"kCCDirectorProjectionCustom",cocos2d::kCCDirectorProjectionCustom);
   tolua_constant(tolua_S,"kCCDirectorProjectionDefault",cocos2d::kCCDirectorProjectionDefault);
   tolua_constant(tolua_S,"CCDirectorProjection2D",cocos2d::CCDirectorProjection2D);
   tolua_constant(tolua_S,"CCDirectorProjection3D",cocos2d::CCDirectorProjection3D);
   tolua_constant(tolua_S,"CCDirectorProjectionCustom",cocos2d::CCDirectorProjectionCustom);
   tolua_constant(tolua_S,"kCCDirectorTypeNSTimer",cocos2d::kCCDirectorTypeNSTimer);
   tolua_constant(tolua_S,"kCCDirectorTypeMainLoop",cocos2d::kCCDirectorTypeMainLoop);
   tolua_constant(tolua_S,"kCCDirectorTypeThreadMainLoop",cocos2d::kCCDirectorTypeThreadMainLoop);
   tolua_constant(tolua_S,"kCCDirectorTypeDisplayLink",cocos2d::kCCDirectorTypeDisplayLink);
   tolua_constant(tolua_S,"kCCDirectorTypeDefault",cocos2d::kCCDirectorTypeDefault);
   tolua_constant(tolua_S,"CCDirectorTypeNSTimer",cocos2d::CCDirectorTypeNSTimer);
   tolua_constant(tolua_S,"CCDirectorTypeMainLoop",cocos2d::CCDirectorTypeMainLoop);
   tolua_constant(tolua_S,"CCDirectorTypeThreadMainLoop",cocos2d::CCDirectorTypeThreadMainLoop);
   tolua_constant(tolua_S,"CCDirectorTypeDisplayLink",cocos2d::CCDirectorTypeDisplayLink);
   tolua_constant(tolua_S,"CCDirectorTypeDefault",cocos2d::CCDirectorTypeDefault);
   tolua_constant(tolua_S,"kCCDeviceOrientationPortrait",cocos2d::kCCDeviceOrientationPortrait);
   tolua_constant(tolua_S,"kCCDeviceOrientationPortraitUpsideDown",cocos2d::kCCDeviceOrientationPortraitUpsideDown);
   tolua_constant(tolua_S,"kCCDeviceOrientationLandscapeLeft",cocos2d::kCCDeviceOrientationLandscapeLeft);
   tolua_constant(tolua_S,"kCCDeviceOrientationLandscapeRight",cocos2d::kCCDeviceOrientationLandscapeRight);
   tolua_constant(tolua_S,"CCDeviceOrientationPortrait",cocos2d::CCDeviceOrientationPortrait);
   tolua_constant(tolua_S,"CCDeviceOrientationPortraitUpsideDown",cocos2d::CCDeviceOrientationPortraitUpsideDown);
   tolua_constant(tolua_S,"CCDeviceOrientationLandscapeLeft",cocos2d::CCDeviceOrientationLandscapeLeft);
   tolua_constant(tolua_S,"CCDeviceOrientationLandscapeRight",cocos2d::CCDeviceOrientationLandscapeRight);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCLabelTTF","cocos2d::CCLabelTTF","cocos2d::CCSprite",tolua_collect_cocos2d__CCLabelTTF);
   #else
   tolua_cclass(tolua_S,"CCLabelTTF","cocos2d::CCLabelTTF","cocos2d::CCSprite",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCLabelTTF");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCLabelTTF_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCLabelTTF_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCLabelTTF_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCLabelTTF_delete00);
    tolua_function(tolua_S,"description",tolua_Cocos2d_cocos2d_CCLabelTTF_description00);
    tolua_function(tolua_S,"labelWithString",tolua_Cocos2d_cocos2d_CCLabelTTF_labelWithString00);
    tolua_function(tolua_S,"labelWithString",tolua_Cocos2d_cocos2d_CCLabelTTF_labelWithString01);
    tolua_function(tolua_S,"initWithString",tolua_Cocos2d_cocos2d_CCLabelTTF_initWithString00);
    tolua_function(tolua_S,"initWithString",tolua_Cocos2d_cocos2d_CCLabelTTF_initWithString01);
    tolua_function(tolua_S,"setString",tolua_Cocos2d_cocos2d_CCLabelTTF_setString00);
    tolua_function(tolua_S,"getString",tolua_Cocos2d_cocos2d_CCLabelTTF_getString00);
    tolua_function(tolua_S,"convertToLabelProtocol",tolua_Cocos2d_cocos2d_CCLabelTTF_convertToLabelProtocol00);
    tolua_variable(tolua_S,"__CCLabelProtocol__",tolua_get_cocos2d__CCLabelTTF___CCLabelProtocol__,NULL);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCEGLView","cocos2d::CCEGLView","",NULL);
   tolua_beginmodule(tolua_S,"CCEGLView");
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCDirector","cocos2d::CCDirector","cocos2d::CCObject",tolua_collect_cocos2d__CCDirector);
   #else
   tolua_cclass(tolua_S,"CCDirector","cocos2d::CCDirector","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCDirector");
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCDirector_init00);
    tolua_function(tolua_S,"getRunningScene",tolua_Cocos2d_cocos2d_CCDirector_getRunningScene00);
    tolua_function(tolua_S,"getAnimationInterval",tolua_Cocos2d_cocos2d_CCDirector_getAnimationInterval00);
    tolua_function(tolua_S,"setAnimationInterval",tolua_Cocos2d_cocos2d_CCDirector_setAnimationInterval00);
    tolua_function(tolua_S,"isDisplayFPS",tolua_Cocos2d_cocos2d_CCDirector_isDisplayFPS00);
    tolua_function(tolua_S,"setDisplayFPS",tolua_Cocos2d_cocos2d_CCDirector_setDisplayFPS00);
    tolua_function(tolua_S,"getOpenGLView",tolua_Cocos2d_cocos2d_CCDirector_getOpenGLView00);
    tolua_function(tolua_S,"setOpenGLView",tolua_Cocos2d_cocos2d_CCDirector_setOpenGLView00);
    tolua_function(tolua_S,"isNextDeltaTimeZero",tolua_Cocos2d_cocos2d_CCDirector_isNextDeltaTimeZero00);
    tolua_function(tolua_S,"setNextDeltaTimeZero",tolua_Cocos2d_cocos2d_CCDirector_setNextDeltaTimeZero00);
    tolua_function(tolua_S,"isPaused",tolua_Cocos2d_cocos2d_CCDirector_isPaused00);
    tolua_function(tolua_S,"getFrames",tolua_Cocos2d_cocos2d_CCDirector_getFrames00);
    tolua_function(tolua_S,"getProjection",tolua_Cocos2d_cocos2d_CCDirector_getProjection00);
    tolua_function(tolua_S,"setProjection",tolua_Cocos2d_cocos2d_CCDirector_setProjection00);
    tolua_function(tolua_S,"isSendCleanupToScene",tolua_Cocos2d_cocos2d_CCDirector_isSendCleanupToScene00);
    tolua_function(tolua_S,"getWinSize",tolua_Cocos2d_cocos2d_CCDirector_getWinSize00);
    tolua_function(tolua_S,"getWinSizeInPixels",tolua_Cocos2d_cocos2d_CCDirector_getWinSizeInPixels00);
    tolua_function(tolua_S,"getDisplaySizeInPixels",tolua_Cocos2d_cocos2d_CCDirector_getDisplaySizeInPixels00);
    tolua_function(tolua_S,"reshapeProjection",tolua_Cocos2d_cocos2d_CCDirector_reshapeProjection00);
    tolua_function(tolua_S,"convertToGL",tolua_Cocos2d_cocos2d_CCDirector_convertToGL00);
    tolua_function(tolua_S,"convertToUI",tolua_Cocos2d_cocos2d_CCDirector_convertToUI00);
    tolua_function(tolua_S,"getZEye",tolua_Cocos2d_cocos2d_CCDirector_getZEye00);
    tolua_function(tolua_S,"runWithScene",tolua_Cocos2d_cocos2d_CCDirector_runWithScene00);
    tolua_function(tolua_S,"pushScene",tolua_Cocos2d_cocos2d_CCDirector_pushScene00);
    tolua_function(tolua_S,"popScene",tolua_Cocos2d_cocos2d_CCDirector_popScene00);
    tolua_function(tolua_S,"replaceScene",tolua_Cocos2d_cocos2d_CCDirector_replaceScene00);
    tolua_function(tolua_S,"endToLua",tolua_Cocos2d_cocos2d_CCDirector_endToLua00);
    tolua_function(tolua_S,"pause",tolua_Cocos2d_cocos2d_CCDirector_pause00);
    tolua_function(tolua_S,"resume",tolua_Cocos2d_cocos2d_CCDirector_resume00);
    tolua_function(tolua_S,"drawScene",tolua_Cocos2d_cocos2d_CCDirector_drawScene00);
    tolua_function(tolua_S,"purgeCachedData",tolua_Cocos2d_cocos2d_CCDirector_purgeCachedData00);
    tolua_function(tolua_S,"setGLDefaultValues",tolua_Cocos2d_cocos2d_CCDirector_setGLDefaultValues00);
    tolua_function(tolua_S,"setAlphaBlending",tolua_Cocos2d_cocos2d_CCDirector_setAlphaBlending00);
    tolua_function(tolua_S,"setDepthTest",tolua_Cocos2d_cocos2d_CCDirector_setDepthTest00);
    tolua_function(tolua_S,"mainLoop",tolua_Cocos2d_cocos2d_CCDirector_mainLoop00);
    tolua_function(tolua_S,"showProfilers",tolua_Cocos2d_cocos2d_CCDirector_showProfilers00);
    tolua_function(tolua_S,"applyOrientation",tolua_Cocos2d_cocos2d_CCDirector_applyOrientation00);
    tolua_function(tolua_S,"getDeviceOrientation",tolua_Cocos2d_cocos2d_CCDirector_getDeviceOrientation00);
    tolua_function(tolua_S,"setDeviceOrientation",tolua_Cocos2d_cocos2d_CCDirector_setDeviceOrientation00);
    tolua_function(tolua_S,"setContentScaleFactor",tolua_Cocos2d_cocos2d_CCDirector_setContentScaleFactor00);
    tolua_function(tolua_S,"getContentScaleFactor",tolua_Cocos2d_cocos2d_CCDirector_getContentScaleFactor00);
    tolua_function(tolua_S,"enableRetinaDisplay",tolua_Cocos2d_cocos2d_CCDirector_enableRetinaDisplay00);
    tolua_function(tolua_S,"isRetinaDisplay",tolua_Cocos2d_cocos2d_CCDirector_isRetinaDisplay00);
    tolua_function(tolua_S,"setDirectorType",tolua_Cocos2d_cocos2d_CCDirector_setDirectorType00);
    tolua_function(tolua_S,"sharedDirector",tolua_Cocos2d_cocos2d_CCDirector_sharedDirector00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_function(tolua_S,"ccDrawPoint",tolua_Cocos2d_cocos2d_ccDrawPoint00);
   tolua_function(tolua_S,"ccDrawPoints",tolua_Cocos2d_cocos2d_ccDrawPoints00);
   tolua_function(tolua_S,"ccDrawLine",tolua_Cocos2d_cocos2d_ccDrawLine00);
   tolua_function(tolua_S,"ccDrawPoly",tolua_Cocos2d_cocos2d_ccDrawPoly00);
   tolua_function(tolua_S,"ccDrawCircle",tolua_Cocos2d_cocos2d_ccDrawCircle00);
   tolua_function(tolua_S,"ccDrawQuadBezier",tolua_Cocos2d_cocos2d_ccDrawQuadBezier00);
   tolua_function(tolua_S,"ccDrawCubicBezier",tolua_Cocos2d_cocos2d_ccDrawCubicBezier00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCPoint","cocos2d::CCPoint","",tolua_collect_cocos2d__CCPoint);
   #else
   tolua_cclass(tolua_S,"CCPoint","cocos2d::CCPoint","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCPoint");
    tolua_variable(tolua_S,"x",tolua_get_cocos2d__CCPoint_x,tolua_set_cocos2d__CCPoint_x);
    tolua_variable(tolua_S,"y",tolua_get_cocos2d__CCPoint_y,tolua_set_cocos2d__CCPoint_y);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCPoint_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCPoint_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCPoint_new00_local);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCPoint_new01);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCPoint_new01_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCPoint_new01_local);
    tolua_function(tolua_S,"CCPointEqualToPoint",tolua_Cocos2d_cocos2d_CCPoint_CCPointEqualToPoint00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCSize","cocos2d::CCSize","",tolua_collect_cocos2d__CCSize);
   #else
   tolua_cclass(tolua_S,"CCSize","cocos2d::CCSize","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCSize");
    tolua_variable(tolua_S,"width",tolua_get_cocos2d__CCSize_width,tolua_set_cocos2d__CCSize_width);
    tolua_variable(tolua_S,"height",tolua_get_cocos2d__CCSize_height,tolua_set_cocos2d__CCSize_height);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCSize_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCSize_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCSize_new00_local);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCSize_new01);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCSize_new01_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCSize_new01_local);
    tolua_function(tolua_S,"CCSizeEqualToSize",tolua_Cocos2d_cocos2d_CCSize_CCSizeEqualToSize00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCRect","cocos2d::CCRect","",tolua_collect_cocos2d__CCRect);
   #else
   tolua_cclass(tolua_S,"CCRect","cocos2d::CCRect","",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCRect");
    tolua_variable(tolua_S,"origin",tolua_get_cocos2d__CCRect_origin,tolua_set_cocos2d__CCRect_origin);
    tolua_variable(tolua_S,"size",tolua_get_cocos2d__CCRect_size,tolua_set_cocos2d__CCRect_size);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCRect_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCRect_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCRect_new00_local);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCRect_new01);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCRect_new01_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCRect_new01_local);
    tolua_function(tolua_S,"CCRectGetMinX",tolua_Cocos2d_cocos2d_CCRect_CCRectGetMinX00);
    tolua_function(tolua_S,"CCRectGetMaxX",tolua_Cocos2d_cocos2d_CCRect_CCRectGetMaxX00);
    tolua_function(tolua_S,"CCRectGetMidX",tolua_Cocos2d_cocos2d_CCRect_CCRectGetMidX00);
    tolua_function(tolua_S,"CCRectGetMinY",tolua_Cocos2d_cocos2d_CCRect_CCRectGetMinY00);
    tolua_function(tolua_S,"CCRectGetMaxY",tolua_Cocos2d_cocos2d_CCRect_CCRectGetMaxY00);
    tolua_function(tolua_S,"CCRectGetMidY",tolua_Cocos2d_cocos2d_CCRect_CCRectGetMidY00);
    tolua_function(tolua_S,"CCRectEqualToRect",tolua_Cocos2d_cocos2d_CCRect_CCRectEqualToRect00);
    tolua_function(tolua_S,"CCRectContainsPoint",tolua_Cocos2d_cocos2d_CCRect_CCRectContainsPoint00);
    tolua_function(tolua_S,"CCRectIntersectsRect",tolua_Cocos2d_cocos2d_CCRect_CCRectIntersectsRect00);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"CCPointMake",tolua_Cocos2d_cocos2d_CCPointMake00);
   tolua_function(tolua_S,"CCSizeMake",tolua_Cocos2d_cocos2d_CCSizeMake00);
   tolua_function(tolua_S,"CCRectMake",tolua_Cocos2d_cocos2d_CCRectMake00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCIMEKeyboardNotificationInfo","CCIMEKeyboardNotificationInfo","",NULL);
  tolua_beginmodule(tolua_S,"CCIMEKeyboardNotificationInfo");
   tolua_variable(tolua_S,"begin",tolua_get_CCIMEKeyboardNotificationInfo_begin,tolua_set_CCIMEKeyboardNotificationInfo_begin);
   tolua_variable(tolua_S,"end",tolua_get_CCIMEKeyboardNotificationInfo_end,tolua_set_CCIMEKeyboardNotificationInfo_end);
   tolua_variable(tolua_S,"duration",tolua_get_CCIMEKeyboardNotificationInfo_duration,tolua_set_CCIMEKeyboardNotificationInfo_duration);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCIMEDelegate","CCIMEDelegate","",NULL);
  tolua_beginmodule(tolua_S,"CCIMEDelegate");
   tolua_function(tolua_S,"attachWithIME",tolua_Cocos2d_CCIMEDelegate_attachWithIME00);
   tolua_function(tolua_S,"detachWithIME",tolua_Cocos2d_CCIMEDelegate_detachWithIME00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"CCIMEDispatcher","CCIMEDispatcher","",NULL);
  tolua_beginmodule(tolua_S,"CCIMEDispatcher");
   tolua_function(tolua_S,"sharedDispatcher",tolua_Cocos2d_CCIMEDispatcher_sharedDispatcher00);
   tolua_function(tolua_S,"dispatchInsertText",tolua_Cocos2d_CCIMEDispatcher_dispatchInsertText00);
   tolua_function(tolua_S,"dispatchDeleteBackward",tolua_Cocos2d_CCIMEDispatcher_dispatchDeleteBackward00);
   tolua_function(tolua_S,"dispatchKeyboardWillShow",tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardWillShow00);
   tolua_function(tolua_S,"dispatchKeyboardDidShow",tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardDidShow00);
   tolua_function(tolua_S,"dispatchKeyboardWillHide",tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardWillHide00);
   tolua_function(tolua_S,"dispatchKeyboardDidHide",tolua_Cocos2d_CCIMEDispatcher_dispatchKeyboardDidHide00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCKeypadDelegate","cocos2d::CCKeypadDelegate","",NULL);
   tolua_beginmodule(tolua_S,"CCKeypadDelegate");
    tolua_function(tolua_S,"KeypadDestroy",tolua_Cocos2d_cocos2d_CCKeypadDelegate_KeypadDestroy00);
    tolua_function(tolua_S,"KeypadKeep",tolua_Cocos2d_cocos2d_CCKeypadDelegate_KeypadKeep00);
    tolua_function(tolua_S,"keyBackClicked",tolua_Cocos2d_cocos2d_CCKeypadDelegate_keyBackClicked00);
    tolua_function(tolua_S,"keyMenuClicked",tolua_Cocos2d_cocos2d_CCKeypadDelegate_keyMenuClicked00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCKeypadHandler","cocos2d::CCKeypadHandler","cocos2d::CCObject",NULL);
   tolua_beginmodule(tolua_S,"CCKeypadHandler");
    tolua_function(tolua_S,"getDelegate",tolua_Cocos2d_cocos2d_CCKeypadHandler_getDelegate00);
    tolua_function(tolua_S,"setDelegate",tolua_Cocos2d_cocos2d_CCKeypadHandler_setDelegate00);
    tolua_function(tolua_S,"initWithDelegate",tolua_Cocos2d_cocos2d_CCKeypadHandler_initWithDelegate00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"kTypeBackClicked",cocos2d::kTypeBackClicked);
   tolua_constant(tolua_S,"kTypeMenuClicked",cocos2d::kTypeMenuClicked);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCKeypadDispatcher","cocos2d::CCKeypadDispatcher","cocos2d::CCObject",tolua_collect_cocos2d__CCKeypadDispatcher);
   #else
   tolua_cclass(tolua_S,"CCKeypadDispatcher","cocos2d::CCKeypadDispatcher","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCKeypadDispatcher");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_new00_local);
    tolua_function(tolua_S,"sharedDispatcher",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_sharedDispatcher00);
    tolua_function(tolua_S,"purgeSharedDispatcher",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_purgeSharedDispatcher00);
    tolua_function(tolua_S,"addDelegate",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_addDelegate00);
    tolua_function(tolua_S,"removeDelegate",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_removeDelegate00);
    tolua_function(tolua_S,"forceAddDelegate",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_forceAddDelegate00);
    tolua_function(tolua_S,"forceRemoveDelegate",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_forceRemoveDelegate00);
    tolua_function(tolua_S,"dispatchKeypadMSG",tolua_Cocos2d_cocos2d_CCKeypadDispatcher_dispatchKeypadMSG00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCLabelAtlas","cocos2d::CCLabelAtlas","cocos2d::CCAtlasNode",tolua_collect_cocos2d__CCLabelAtlas);
   #else
   tolua_cclass(tolua_S,"CCLabelAtlas","cocos2d::CCLabelAtlas","cocos2d::CCAtlasNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCLabelAtlas");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCLabelAtlas_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCLabelAtlas_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCLabelAtlas_new00_local);
    tolua_function(tolua_S,"labelWithString",tolua_Cocos2d_cocos2d_CCLabelAtlas_labelWithString00);
    tolua_function(tolua_S,"initWithString",tolua_Cocos2d_cocos2d_CCLabelAtlas_initWithString00);
    tolua_function(tolua_S,"updateAtlasValues",tolua_Cocos2d_cocos2d_CCLabelAtlas_updateAtlasValues00);
    tolua_function(tolua_S,"setString",tolua_Cocos2d_cocos2d_CCLabelAtlas_setString00);
    tolua_function(tolua_S,"getString",tolua_Cocos2d_cocos2d_CCLabelAtlas_getString00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCLabelAtlas_draw00);
    tolua_function(tolua_S,"convertToLabelProtocol",tolua_Cocos2d_cocos2d_CCLabelAtlas_convertToLabelProtocol00);
    tolua_function(tolua_S,"atlasWithTileFile",tolua_Cocos2d_cocos2d_CCLabelAtlas_atlasWithTileFile00);
    tolua_function(tolua_S,"initWithTileFile",tolua_Cocos2d_cocos2d_CCLabelAtlas_initWithTileFile00);
    tolua_function(tolua_S,"updateAtlasValues",tolua_Cocos2d_cocos2d_CCLabelAtlas_updateAtlasValues01);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCLabelAtlas_draw01);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCLabelAtlas_convertToRGBAProtocol00);
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCLabelAtlas_getTexture00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCLabelAtlas_setTexture00);
    tolua_variable(tolua_S,"__CCLabelProtocol__",tolua_get_cocos2d__CCLabelAtlas___CCLabelProtocol__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"_KerningHashElement","cocos2d::_KerningHashElement","",NULL);
   tolua_beginmodule(tolua_S,"_KerningHashElement");
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccBMFontDef","cocos2d::ccBMFontDef","",NULL);
   tolua_beginmodule(tolua_S,"ccBMFontDef");
    tolua_variable(tolua_S,"charID",tolua_get_cocos2d__ccBMFontDef_unsigned_charID,tolua_set_cocos2d__ccBMFontDef_unsigned_charID);
    tolua_variable(tolua_S,"rect",tolua_get_cocos2d__ccBMFontDef_rect,tolua_set_cocos2d__ccBMFontDef_rect);
    tolua_variable(tolua_S,"xOffset",tolua_get_cocos2d__ccBMFontDef_xOffset,tolua_set_cocos2d__ccBMFontDef_xOffset);
    tolua_variable(tolua_S,"yOffset",tolua_get_cocos2d__ccBMFontDef_yOffset,tolua_set_cocos2d__ccBMFontDef_yOffset);
    tolua_variable(tolua_S,"xAdvance",tolua_get_cocos2d__ccBMFontDef_xAdvance,tolua_set_cocos2d__ccBMFontDef_xAdvance);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"ccBMFontPadding","cocos2d::ccBMFontPadding","",NULL);
   tolua_beginmodule(tolua_S,"ccBMFontPadding");
    tolua_variable(tolua_S,"left",tolua_get_cocos2d__ccBMFontPadding_left,tolua_set_cocos2d__ccBMFontPadding_left);
    tolua_variable(tolua_S,"top",tolua_get_cocos2d__ccBMFontPadding_top,tolua_set_cocos2d__ccBMFontPadding_top);
    tolua_variable(tolua_S,"right",tolua_get_cocos2d__ccBMFontPadding_right,tolua_set_cocos2d__ccBMFontPadding_right);
    tolua_variable(tolua_S,"bottom",tolua_get_cocos2d__ccBMFontPadding_bottom,tolua_set_cocos2d__ccBMFontPadding_bottom);
   tolua_endmodule(tolua_S);
   tolua_constant(tolua_S,"kCCBMFontMaxChars",cocos2d::kCCBMFontMaxChars);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCBMFontConfiguration","cocos2d::CCBMFontConfiguration","cocos2d::CCObject",tolua_collect_cocos2d__CCBMFontConfiguration);
   #else
   tolua_cclass(tolua_S,"CCBMFontConfiguration","cocos2d::CCBMFontConfiguration","cocos2d::CCObject",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCBMFontConfiguration");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCBMFontConfiguration_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCBMFontConfiguration_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCBMFontConfiguration_new00_local);
    tolua_function(tolua_S,"description",tolua_Cocos2d_cocos2d_CCBMFontConfiguration_description00);
    tolua_function(tolua_S,"configurationWithFNTFile",tolua_Cocos2d_cocos2d_CCBMFontConfiguration_configurationWithFNTFile00);
    tolua_function(tolua_S,"initWithFNTfile",tolua_Cocos2d_cocos2d_CCBMFontConfiguration_initWithFNTfile00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCLabelBMFont","cocos2d::CCLabelBMFont","cocos2d::CCSpriteBatchNode",tolua_collect_cocos2d__CCLabelBMFont);
   #else
   tolua_cclass(tolua_S,"CCLabelBMFont","cocos2d::CCLabelBMFont","cocos2d::CCSpriteBatchNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCLabelBMFont");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCLabelBMFont_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCLabelBMFont_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCLabelBMFont_new00_local);
    tolua_function(tolua_S,"purgeCachedData",tolua_Cocos2d_cocos2d_CCLabelBMFont_purgeCachedData00);
    tolua_function(tolua_S,"labelWithString",tolua_Cocos2d_cocos2d_CCLabelBMFont_labelWithString00);
    tolua_function(tolua_S,"initWithString",tolua_Cocos2d_cocos2d_CCLabelBMFont_initWithString00);
    tolua_function(tolua_S,"createFontChars",tolua_Cocos2d_cocos2d_CCLabelBMFont_createFontChars00);
    tolua_function(tolua_S,"setString",tolua_Cocos2d_cocos2d_CCLabelBMFont_setString00);
    tolua_function(tolua_S,"getString",tolua_Cocos2d_cocos2d_CCLabelBMFont_getString00);
    tolua_function(tolua_S,"setCString",tolua_Cocos2d_cocos2d_CCLabelBMFont_setCString00);
    tolua_function(tolua_S,"setAnchorPoint",tolua_Cocos2d_cocos2d_CCLabelBMFont_setAnchorPoint00);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCLabelBMFont_convertToRGBAProtocol00);
    tolua_function(tolua_S,"convertToLabelProtocol",tolua_Cocos2d_cocos2d_CCLabelBMFont_convertToLabelProtocol00);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCLabelBMFont_draw00);
    tolua_variable(tolua_S,"__CCLabelProtocol__",tolua_get_cocos2d__CCLabelBMFont___CCLabelProtocol__,NULL);
    tolua_variable(tolua_S,"__CCRGBAProtocol__",tolua_get_cocos2d__CCLabelBMFont___CCRGBAProtocol__,NULL);
   tolua_endmodule(tolua_S);
   tolua_function(tolua_S,"FNTConfigLoadFile",tolua_Cocos2d_cocos2d_FNTConfigLoadFile00);
   tolua_function(tolua_S,"FNTConfigRemoveCache",tolua_Cocos2d_cocos2d_FNTConfigRemoveCache00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCLayer","cocos2d::CCLayer","cocos2d::CCNode",tolua_collect_cocos2d__CCLayer);
   #else
   tolua_cclass(tolua_S,"CCLayer","cocos2d::CCLayer","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCLayer");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCLayer_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCLayer_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCLayer_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCLayer_init00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCLayer_node00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCLayer_onEnter00);
    tolua_function(tolua_S,"onExit",tolua_Cocos2d_cocos2d_CCLayer_onExit00);
    tolua_function(tolua_S,"onEnterTransitionDidFinish",tolua_Cocos2d_cocos2d_CCLayer_onEnterTransitionDidFinish00);
    tolua_function(tolua_S,"ccTouchBegan",tolua_Cocos2d_cocos2d_CCLayer_ccTouchBegan00);
    tolua_function(tolua_S,"destroy",tolua_Cocos2d_cocos2d_CCLayer_destroy00);
    tolua_function(tolua_S,"keep",tolua_Cocos2d_cocos2d_CCLayer_keep00);
    tolua_function(tolua_S,"didAccelerate",tolua_Cocos2d_cocos2d_CCLayer_didAccelerate00);
    tolua_function(tolua_S,"KeypadDestroy",tolua_Cocos2d_cocos2d_CCLayer_KeypadDestroy00);
    tolua_function(tolua_S,"KeypadKeep",tolua_Cocos2d_cocos2d_CCLayer_KeypadKeep00);
    tolua_function(tolua_S,"registerWithTouchDispatcher",tolua_Cocos2d_cocos2d_CCLayer_registerWithTouchDispatcher00);
    tolua_function(tolua_S,"setIsTouchEnabled",tolua_Cocos2d_cocos2d_CCLayer_setIsTouchEnabled00);
    tolua_function(tolua_S,"getIsTouchEnabled",tolua_Cocos2d_cocos2d_CCLayer_getIsTouchEnabled00);
    tolua_function(tolua_S,"setIsAccelerometerEnabled",tolua_Cocos2d_cocos2d_CCLayer_setIsAccelerometerEnabled00);
    tolua_function(tolua_S,"getIsAccelerometerEnabled",tolua_Cocos2d_cocos2d_CCLayer_getIsAccelerometerEnabled00);
    tolua_function(tolua_S,"setIsKeypadEnabled",tolua_Cocos2d_cocos2d_CCLayer_setIsKeypadEnabled00);
    tolua_function(tolua_S,"getIsKeypadEnabled",tolua_Cocos2d_cocos2d_CCLayer_getIsKeypadEnabled00);
    tolua_function(tolua_S,"ccTouchesBegan",tolua_Cocos2d_cocos2d_CCLayer_ccTouchesBegan00);
    tolua_function(tolua_S,"ccTouchesMoved",tolua_Cocos2d_cocos2d_CCLayer_ccTouchesMoved00);
    tolua_function(tolua_S,"ccTouchesEnded",tolua_Cocos2d_cocos2d_CCLayer_ccTouchesEnded00);
    tolua_function(tolua_S,"ccTouchesCancelled",tolua_Cocos2d_cocos2d_CCLayer_ccTouchesCancelled00);
    tolua_variable(tolua_S,"__CCTouchDelegate__",tolua_get_cocos2d__CCLayer___CCTouchDelegate__,NULL);
    tolua_variable(tolua_S,"__CCAccelerometerDelegate__",tolua_get_cocos2d__CCLayer___CCAccelerometerDelegate__,NULL);
    tolua_variable(tolua_S,"__CCKeypadDelegate__",tolua_get_cocos2d__CCLayer___CCKeypadDelegate__,NULL);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCLayerColor","cocos2d::CCLayerColor","cocos2d::CCLayer",tolua_collect_cocos2d__CCLayerColor);
   #else
   tolua_cclass(tolua_S,"CCLayerColor","cocos2d::CCLayerColor","cocos2d::CCLayer",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCLayerColor");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCLayerColor_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCLayerColor_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCLayerColor_new00_local);
    tolua_function(tolua_S,"draw",tolua_Cocos2d_cocos2d_CCLayerColor_draw00);
    tolua_function(tolua_S,"setContentSize",tolua_Cocos2d_cocos2d_CCLayerColor_setContentSize00);
    tolua_function(tolua_S,"layerWithColorWidthHeight",tolua_Cocos2d_cocos2d_CCLayerColor_layerWithColorWidthHeight00);
    tolua_function(tolua_S,"layerWithColor",tolua_Cocos2d_cocos2d_CCLayerColor_layerWithColor00);
    tolua_function(tolua_S,"initWithColorWidthHeight",tolua_Cocos2d_cocos2d_CCLayerColor_initWithColorWidthHeight00);
    tolua_function(tolua_S,"initWithColor",tolua_Cocos2d_cocos2d_CCLayerColor_initWithColor00);
    tolua_function(tolua_S,"changeWidth",tolua_Cocos2d_cocos2d_CCLayerColor_changeWidth00);
    tolua_function(tolua_S,"changeHeight",tolua_Cocos2d_cocos2d_CCLayerColor_changeHeight00);
    tolua_function(tolua_S,"changeWidthAndHeight",tolua_Cocos2d_cocos2d_CCLayerColor_changeWidthAndHeight00);
    tolua_function(tolua_S,"getOpacity",tolua_Cocos2d_cocos2d_CCLayerColor_getOpacity00);
    tolua_function(tolua_S,"setOpacity",tolua_Cocos2d_cocos2d_CCLayerColor_setOpacity00);
    tolua_function(tolua_S,"setColor",tolua_Cocos2d_cocos2d_CCLayerColor_setColor00);
    tolua_function(tolua_S,"getColor",tolua_Cocos2d_cocos2d_CCLayerColor_getColor00);
    tolua_function(tolua_S,"setBlendFunc",tolua_Cocos2d_cocos2d_CCLayerColor_setBlendFunc00);
    tolua_function(tolua_S,"getBlendFunc",tolua_Cocos2d_cocos2d_CCLayerColor_getBlendFunc00);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCLayerColor_convertToRGBAProtocol00);
    tolua_variable(tolua_S,"__CCRGBAProtocol__",tolua_get_cocos2d__CCLayerColor___CCRGBAProtocol__,NULL);
    tolua_variable(tolua_S,"__CCBlendProtocol__",tolua_get_cocos2d__CCLayerColor___CCBlendProtocol__,NULL);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCLayerGradient","cocos2d::CCLayerGradient","cocos2d::CCLayerColor",NULL);
   tolua_beginmodule(tolua_S,"CCLayerGradient");
    tolua_function(tolua_S,"layerWithColor",tolua_Cocos2d_cocos2d_CCLayerGradient_layerWithColor00);
    tolua_function(tolua_S,"layerWithColor",tolua_Cocos2d_cocos2d_CCLayerGradient_layerWithColor01);
    tolua_function(tolua_S,"initWithColor",tolua_Cocos2d_cocos2d_CCLayerGradient_initWithColor00);
    tolua_function(tolua_S,"initWithColor",tolua_Cocos2d_cocos2d_CCLayerGradient_initWithColor01);
    tolua_function(tolua_S,"getStartColor",tolua_Cocos2d_cocos2d_CCLayerGradient_getStartColor00);
    tolua_function(tolua_S,"setStartColor",tolua_Cocos2d_cocos2d_CCLayerGradient_setStartColor00);
    tolua_function(tolua_S,"setEndColor",tolua_Cocos2d_cocos2d_CCLayerGradient_setEndColor00);
    tolua_function(tolua_S,"getEndColor",tolua_Cocos2d_cocos2d_CCLayerGradient_getEndColor00);
    tolua_function(tolua_S,"setStartOpacity",tolua_Cocos2d_cocos2d_CCLayerGradient_setStartOpacity00);
    tolua_function(tolua_S,"getStartOpacity",tolua_Cocos2d_cocos2d_CCLayerGradient_getStartOpacity00);
    tolua_function(tolua_S,"setEndOpacity",tolua_Cocos2d_cocos2d_CCLayerGradient_setEndOpacity00);
    tolua_function(tolua_S,"getEndOpacity",tolua_Cocos2d_cocos2d_CCLayerGradient_getEndOpacity00);
    tolua_function(tolua_S,"setVector",tolua_Cocos2d_cocos2d_CCLayerGradient_setVector00);
    tolua_function(tolua_S,"getVector",tolua_Cocos2d_cocos2d_CCLayerGradient_getVector00);
    tolua_function(tolua_S,"setIsCompressedInterpolation",tolua_Cocos2d_cocos2d_CCLayerGradient_setIsCompressedInterpolation00);
    tolua_function(tolua_S,"getIsCompressedInterpolation",tolua_Cocos2d_cocos2d_CCLayerGradient_getIsCompressedInterpolation00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCLayerMultiplex","cocos2d::CCLayerMultiplex","cocos2d::CCLayer",tolua_collect_cocos2d__CCLayerMultiplex);
   #else
   tolua_cclass(tolua_S,"CCLayerMultiplex","cocos2d::CCLayerMultiplex","cocos2d::CCLayer",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCLayerMultiplex");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCLayerMultiplex_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCLayerMultiplex_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCLayerMultiplex_new00_local);
    tolua_function(tolua_S,"layerWithLayer",tolua_Cocos2d_cocos2d_CCLayerMultiplex_layerWithLayer00);
    tolua_function(tolua_S,"addLayer",tolua_Cocos2d_cocos2d_CCLayerMultiplex_addLayer00);
    tolua_function(tolua_S,"initWithLayer",tolua_Cocos2d_cocos2d_CCLayerMultiplex_initWithLayer00);
    tolua_function(tolua_S,"initWithLayers",tolua_Cocos2d_cocos2d_CCLayerMultiplex_initWithLayers00);
    tolua_function(tolua_S,"switchTo",tolua_Cocos2d_cocos2d_CCLayerMultiplex_switchTo00);
    tolua_function(tolua_S,"switchToAndReleaseMe",tolua_Cocos2d_cocos2d_CCLayerMultiplex_switchToAndReleaseMe00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_constant(tolua_S,"kCCMenuStateWaiting",cocos2d::kCCMenuStateWaiting);
   tolua_constant(tolua_S,"kCCMenuStateTrackingTouch",cocos2d::kCCMenuStateTrackingTouch);
   tolua_constant(tolua_S,"kCCMenuTouchPriority",cocos2d::kCCMenuTouchPriority);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMenu","cocos2d::CCMenu","cocos2d::CCLayer",tolua_collect_cocos2d__CCMenu);
   #else
   tolua_cclass(tolua_S,"CCMenu","cocos2d::CCMenu","cocos2d::CCLayer",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMenu");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMenu_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMenu_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMenu_new00_local);
    tolua_function(tolua_S,"delete",tolua_Cocos2d_cocos2d_CCMenu_delete00);
    tolua_function(tolua_S,"menuWithItem",tolua_Cocos2d_cocos2d_CCMenu_menuWithItem00);
    tolua_function(tolua_S,"initWithItems",tolua_Cocos2d_cocos2d_CCMenu_initWithItems00);
    tolua_function(tolua_S,"alignItemsVertically",tolua_Cocos2d_cocos2d_CCMenu_alignItemsVertically00);
    tolua_function(tolua_S,"alignItemsVerticallyWithPadding",tolua_Cocos2d_cocos2d_CCMenu_alignItemsVerticallyWithPadding00);
    tolua_function(tolua_S,"alignItemsHorizontally",tolua_Cocos2d_cocos2d_CCMenu_alignItemsHorizontally00);
    tolua_function(tolua_S,"alignItemsHorizontallyWithPadding",tolua_Cocos2d_cocos2d_CCMenu_alignItemsHorizontallyWithPadding00);
    tolua_function(tolua_S,"alignItemsInColumns",tolua_Cocos2d_cocos2d_CCMenu_alignItemsInColumns00);
    tolua_function(tolua_S,"alignItemsInRows",tolua_Cocos2d_cocos2d_CCMenu_alignItemsInRows00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCMenu_addChild00);
    tolua_function(tolua_S,"addChild",tolua_Cocos2d_cocos2d_CCMenu_addChild01);
    tolua_function(tolua_S,"registerWithTouchDispatcher",tolua_Cocos2d_cocos2d_CCMenu_registerWithTouchDispatcher00);
    tolua_function(tolua_S,"ccTouchBegan",tolua_Cocos2d_cocos2d_CCMenu_ccTouchBegan00);
    tolua_function(tolua_S,"ccTouchEnded",tolua_Cocos2d_cocos2d_CCMenu_ccTouchEnded00);
    tolua_function(tolua_S,"ccTouchCancelled",tolua_Cocos2d_cocos2d_CCMenu_ccTouchCancelled00);
    tolua_function(tolua_S,"ccTouchMoved",tolua_Cocos2d_cocos2d_CCMenu_ccTouchMoved00);
    tolua_function(tolua_S,"destroy",tolua_Cocos2d_cocos2d_CCMenu_destroy00);
    tolua_function(tolua_S,"keep",tolua_Cocos2d_cocos2d_CCMenu_keep00);
    tolua_function(tolua_S,"onExit",tolua_Cocos2d_cocos2d_CCMenu_onExit00);
    tolua_function(tolua_S,"setOpacity",tolua_Cocos2d_cocos2d_CCMenu_setOpacity00);
    tolua_function(tolua_S,"getOpacity",tolua_Cocos2d_cocos2d_CCMenu_getOpacity00);
    tolua_function(tolua_S,"getColor",tolua_Cocos2d_cocos2d_CCMenu_getColor00);
    tolua_function(tolua_S,"setColor",tolua_Cocos2d_cocos2d_CCMenu_setColor00);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCMenu_convertToRGBAProtocol00);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCMenu_init00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCMenu_node00);
    tolua_function(tolua_S,"onEnter",tolua_Cocos2d_cocos2d_CCMenu_onEnter00);
    tolua_function(tolua_S,"onExit",tolua_Cocos2d_cocos2d_CCMenu_onExit01);
    tolua_function(tolua_S,"onEnterTransitionDidFinish",tolua_Cocos2d_cocos2d_CCMenu_onEnterTransitionDidFinish00);
    tolua_function(tolua_S,"ccTouchBegan",tolua_Cocos2d_cocos2d_CCMenu_ccTouchBegan01);
    tolua_function(tolua_S,"destroy",tolua_Cocos2d_cocos2d_CCMenu_destroy01);
    tolua_function(tolua_S,"keep",tolua_Cocos2d_cocos2d_CCMenu_keep01);
    tolua_function(tolua_S,"didAccelerate",tolua_Cocos2d_cocos2d_CCMenu_didAccelerate00);
    tolua_function(tolua_S,"KeypadDestroy",tolua_Cocos2d_cocos2d_CCMenu_KeypadDestroy00);
    tolua_function(tolua_S,"KeypadKeep",tolua_Cocos2d_cocos2d_CCMenu_KeypadKeep00);
    tolua_function(tolua_S,"registerWithTouchDispatcher",tolua_Cocos2d_cocos2d_CCMenu_registerWithTouchDispatcher01);
    tolua_function(tolua_S,"setIsTouchEnabled",tolua_Cocos2d_cocos2d_CCMenu_setIsTouchEnabled00);
    tolua_function(tolua_S,"getIsTouchEnabled",tolua_Cocos2d_cocos2d_CCMenu_getIsTouchEnabled00);
    tolua_function(tolua_S,"setIsAccelerometerEnabled",tolua_Cocos2d_cocos2d_CCMenu_setIsAccelerometerEnabled00);
    tolua_function(tolua_S,"getIsAccelerometerEnabled",tolua_Cocos2d_cocos2d_CCMenu_getIsAccelerometerEnabled00);
    tolua_function(tolua_S,"setIsKeypadEnabled",tolua_Cocos2d_cocos2d_CCMenu_setIsKeypadEnabled00);
    tolua_function(tolua_S,"getIsKeypadEnabled",tolua_Cocos2d_cocos2d_CCMenu_getIsKeypadEnabled00);
    tolua_variable(tolua_S,"__CCRGBAProtocol__",tolua_get_cocos2d__CCMenu___CCRGBAProtocol__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMenuItem","cocos2d::CCMenuItem","cocos2d::CCNode",tolua_collect_cocos2d__CCMenuItem);
   #else
   tolua_cclass(tolua_S,"CCMenuItem","cocos2d::CCMenuItem","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMenuItem");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMenuItem_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMenuItem_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMenuItem_new00_local);
    tolua_function(tolua_S,"itemWithTarget",tolua_Cocos2d_cocos2d_CCMenuItem_itemWithTarget00);
    tolua_function(tolua_S,"initWithTarget",tolua_Cocos2d_cocos2d_CCMenuItem_initWithTarget00);
    tolua_function(tolua_S,"rect",tolua_Cocos2d_cocos2d_CCMenuItem_rect00);
    tolua_function(tolua_S,"activate",tolua_Cocos2d_cocos2d_CCMenuItem_activate00);
    tolua_function(tolua_S,"selected",tolua_Cocos2d_cocos2d_CCMenuItem_selected00);
    tolua_function(tolua_S,"unselected",tolua_Cocos2d_cocos2d_CCMenuItem_unselected00);
    tolua_function(tolua_S,"registerScriptHandler",tolua_Cocos2d_cocos2d_CCMenuItem_registerScriptHandler00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMenuItemLabel","cocos2d::CCMenuItemLabel","cocos2d::CCMenuItem",tolua_collect_cocos2d__CCMenuItemLabel);
   #else
   tolua_cclass(tolua_S,"CCMenuItemLabel","cocos2d::CCMenuItemLabel","cocos2d::CCMenuItem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMenuItemLabel");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMenuItemLabel_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMenuItemLabel_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMenuItemLabel_new00_local);
    tolua_function(tolua_S,"itemWithLabel",tolua_Cocos2d_cocos2d_CCMenuItemLabel_itemWithLabel00);
    tolua_function(tolua_S,"itemWithLabel",tolua_Cocos2d_cocos2d_CCMenuItemLabel_itemWithLabel01);
    tolua_function(tolua_S,"initWithLabel",tolua_Cocos2d_cocos2d_CCMenuItemLabel_initWithLabel00);
    tolua_function(tolua_S,"setString",tolua_Cocos2d_cocos2d_CCMenuItemLabel_setString00);
    tolua_function(tolua_S,"activate",tolua_Cocos2d_cocos2d_CCMenuItemLabel_activate00);
    tolua_function(tolua_S,"selected",tolua_Cocos2d_cocos2d_CCMenuItemLabel_selected00);
    tolua_function(tolua_S,"unselected",tolua_Cocos2d_cocos2d_CCMenuItemLabel_unselected00);
    tolua_function(tolua_S,"setIsEnabled",tolua_Cocos2d_cocos2d_CCMenuItemLabel_setIsEnabled00);
    tolua_function(tolua_S,"setOpacity",tolua_Cocos2d_cocos2d_CCMenuItemLabel_setOpacity00);
    tolua_function(tolua_S,"getOpacity",tolua_Cocos2d_cocos2d_CCMenuItemLabel_getOpacity00);
    tolua_function(tolua_S,"setColor",tolua_Cocos2d_cocos2d_CCMenuItemLabel_setColor00);
    tolua_function(tolua_S,"getColor",tolua_Cocos2d_cocos2d_CCMenuItemLabel_getColor00);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCMenuItemLabel_convertToRGBAProtocol00);
    tolua_variable(tolua_S,"__CCRGBAProtocol__",tolua_get_cocos2d__CCMenuItemLabel___CCRGBAProtocol__,NULL);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMenuItemAtlasFont","cocos2d::CCMenuItemAtlasFont","cocos2d::CCMenuItemLabel",tolua_collect_cocos2d__CCMenuItemAtlasFont);
   #else
   tolua_cclass(tolua_S,"CCMenuItemAtlasFont","cocos2d::CCMenuItemAtlasFont","cocos2d::CCMenuItemLabel",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMenuItemAtlasFont");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_new00_local);
    tolua_function(tolua_S,"itemFromString",tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_itemFromString00);
    tolua_function(tolua_S,"itemFromString",tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_itemFromString01);
    tolua_function(tolua_S,"initFromString",tolua_Cocos2d_cocos2d_CCMenuItemAtlasFont_initFromString00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMenuItemFont","cocos2d::CCMenuItemFont","cocos2d::CCMenuItemLabel",tolua_collect_cocos2d__CCMenuItemFont);
   #else
   tolua_cclass(tolua_S,"CCMenuItemFont","cocos2d::CCMenuItemFont","cocos2d::CCMenuItemLabel",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMenuItemFont");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMenuItemFont_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMenuItemFont_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMenuItemFont_new00_local);
    tolua_function(tolua_S,"setFontSize",tolua_Cocos2d_cocos2d_CCMenuItemFont_setFontSize00);
    tolua_function(tolua_S,"fontSize",tolua_Cocos2d_cocos2d_CCMenuItemFont_fontSize00);
    tolua_function(tolua_S,"setFontName",tolua_Cocos2d_cocos2d_CCMenuItemFont_setFontName00);
    tolua_function(tolua_S,"fontName",tolua_Cocos2d_cocos2d_CCMenuItemFont_fontName00);
    tolua_function(tolua_S,"itemFromString",tolua_Cocos2d_cocos2d_CCMenuItemFont_itemFromString00);
    tolua_function(tolua_S,"itemFromString",tolua_Cocos2d_cocos2d_CCMenuItemFont_itemFromString01);
    tolua_function(tolua_S,"initFromString",tolua_Cocos2d_cocos2d_CCMenuItemFont_initFromString00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMenuItemSprite","cocos2d::CCMenuItemSprite","cocos2d::CCMenuItem",tolua_collect_cocos2d__CCMenuItemSprite);
   #else
   tolua_cclass(tolua_S,"CCMenuItemSprite","cocos2d::CCMenuItemSprite","cocos2d::CCMenuItem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMenuItemSprite");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMenuItemSprite_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMenuItemSprite_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMenuItemSprite_new00_local);
    tolua_function(tolua_S,"itemFromNormalSprite",tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite00);
    tolua_function(tolua_S,"itemFromNormalSprite",tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite01);
    tolua_function(tolua_S,"itemFromNormalSprite",tolua_Cocos2d_cocos2d_CCMenuItemSprite_itemFromNormalSprite02);
    tolua_function(tolua_S,"initFromNormalSprite",tolua_Cocos2d_cocos2d_CCMenuItemSprite_initFromNormalSprite00);
    tolua_function(tolua_S,"setColor",tolua_Cocos2d_cocos2d_CCMenuItemSprite_setColor00);
    tolua_function(tolua_S,"getColor",tolua_Cocos2d_cocos2d_CCMenuItemSprite_getColor00);
    tolua_function(tolua_S,"setOpacity",tolua_Cocos2d_cocos2d_CCMenuItemSprite_setOpacity00);
    tolua_function(tolua_S,"getOpacity",tolua_Cocos2d_cocos2d_CCMenuItemSprite_getOpacity00);
    tolua_function(tolua_S,"selected",tolua_Cocos2d_cocos2d_CCMenuItemSprite_selected00);
    tolua_function(tolua_S,"unselected",tolua_Cocos2d_cocos2d_CCMenuItemSprite_unselected00);
    tolua_function(tolua_S,"setIsEnabled",tolua_Cocos2d_cocos2d_CCMenuItemSprite_setIsEnabled00);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCMenuItemSprite_convertToRGBAProtocol00);
    tolua_variable(tolua_S,"__CCRGBAProtocol__",tolua_get_cocos2d__CCMenuItemSprite___CCRGBAProtocol__,NULL);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMenuItemImage","cocos2d::CCMenuItemImage","cocos2d::CCMenuItemSprite",tolua_collect_cocos2d__CCMenuItemImage);
   #else
   tolua_cclass(tolua_S,"CCMenuItemImage","cocos2d::CCMenuItemImage","cocos2d::CCMenuItemSprite",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMenuItemImage");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMenuItemImage_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMenuItemImage_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMenuItemImage_new00_local);
    tolua_function(tolua_S,"itemFromNormalImage",tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage00);
    tolua_function(tolua_S,"itemFromNormalImage",tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage01);
    tolua_function(tolua_S,"itemFromNormalImage",tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage02);
    tolua_function(tolua_S,"itemFromNormalImage",tolua_Cocos2d_cocos2d_CCMenuItemImage_itemFromNormalImage03);
    tolua_function(tolua_S,"initFromNormalImage",tolua_Cocos2d_cocos2d_CCMenuItemImage_initFromNormalImage00);
    tolua_function(tolua_S,"setColor",tolua_Cocos2d_cocos2d_CCMenuItemImage_setColor00);
    tolua_function(tolua_S,"getColor",tolua_Cocos2d_cocos2d_CCMenuItemImage_getColor00);
    tolua_function(tolua_S,"setOpacity",tolua_Cocos2d_cocos2d_CCMenuItemImage_setOpacity00);
    tolua_function(tolua_S,"getOpacity",tolua_Cocos2d_cocos2d_CCMenuItemImage_getOpacity00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMenuItemToggle","cocos2d::CCMenuItemToggle","cocos2d::CCMenuItem",tolua_collect_cocos2d__CCMenuItemToggle);
   #else
   tolua_cclass(tolua_S,"CCMenuItemToggle","cocos2d::CCMenuItemToggle","cocos2d::CCMenuItem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMenuItemToggle");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMenuItemToggle_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMenuItemToggle_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMenuItemToggle_new00_local);
    tolua_function(tolua_S,"itemWithItem",tolua_Cocos2d_cocos2d_CCMenuItemToggle_itemWithItem00);
    tolua_function(tolua_S,"initWithItem",tolua_Cocos2d_cocos2d_CCMenuItemToggle_initWithItem00);
    tolua_function(tolua_S,"addSubItem",tolua_Cocos2d_cocos2d_CCMenuItemToggle_addSubItem00);
    tolua_function(tolua_S,"selectedItem",tolua_Cocos2d_cocos2d_CCMenuItemToggle_selectedItem00);
    tolua_function(tolua_S,"activate",tolua_Cocos2d_cocos2d_CCMenuItemToggle_activate00);
    tolua_function(tolua_S,"selected",tolua_Cocos2d_cocos2d_CCMenuItemToggle_selected00);
    tolua_function(tolua_S,"unselected",tolua_Cocos2d_cocos2d_CCMenuItemToggle_unselected00);
    tolua_function(tolua_S,"setIsEnabled",tolua_Cocos2d_cocos2d_CCMenuItemToggle_setIsEnabled00);
    tolua_function(tolua_S,"convertToRGBAProtocol",tolua_Cocos2d_cocos2d_CCMenuItemToggle_convertToRGBAProtocol00);
    tolua_variable(tolua_S,"__CCRGBAProtocol__",tolua_get_cocos2d__CCMenuItemToggle___CCRGBAProtocol__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCMotionStreak","cocos2d::CCMotionStreak","cocos2d::CCNode",tolua_collect_cocos2d__CCMotionStreak);
   #else
   tolua_cclass(tolua_S,"CCMotionStreak","cocos2d::CCMotionStreak","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCMotionStreak");
    tolua_function(tolua_S,"getRibbon",tolua_Cocos2d_cocos2d_CCMotionStreak_getRibbon00);
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCMotionStreak_getTexture00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCMotionStreak_setTexture00);
    tolua_function(tolua_S,"getBlendFunc",tolua_Cocos2d_cocos2d_CCMotionStreak_getBlendFunc00);
    tolua_function(tolua_S,"setBlendFunc",tolua_Cocos2d_cocos2d_CCMotionStreak_setBlendFunc00);
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCMotionStreak_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCMotionStreak_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCMotionStreak_new00_local);
    tolua_function(tolua_S,"streakWithFade",tolua_Cocos2d_cocos2d_CCMotionStreak_streakWithFade00);
    tolua_function(tolua_S,"initWithFade",tolua_Cocos2d_cocos2d_CCMotionStreak_initWithFade00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCMotionStreak_update00);
    tolua_variable(tolua_S,"__CCTextureProtocol__",tolua_get_cocos2d__CCMotionStreak___CCTextureProtocol__,NULL);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_function(tolua_S,"CCLuaLog",tolua_Cocos2d_cocos2d_CCLuaLog00);
   tolua_function(tolua_S,"CCMessageBox",tolua_Cocos2d_cocos2d_CCMessageBox00);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   tolua_cclass(tolua_S,"CCFileUtils","cocos2d::CCFileUtils","",NULL);
   tolua_beginmodule(tolua_S,"CCFileUtils");
    tolua_function(tolua_S,"fullPathFromRelativePath",tolua_Cocos2d_cocos2d_CCFileUtils_fullPathFromRelativePath00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
  tolua_module(tolua_S,"cocos2d",0);
  tolua_beginmodule(tolua_S,"cocos2d");
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleSystem","cocos2d::CCParticleSystem","cocos2d::CCNode",tolua_collect_cocos2d__CCParticleSystem);
   #else
   tolua_cclass(tolua_S,"CCParticleSystem","cocos2d::CCParticleSystem","cocos2d::CCNode",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleSystem");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleSystem_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleSystem_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleSystem_new00_local);
    tolua_function(tolua_S,"particleWithFile",tolua_Cocos2d_cocos2d_CCParticleSystem_particleWithFile00);
    tolua_function(tolua_S,"initWithFile",tolua_Cocos2d_cocos2d_CCParticleSystem_initWithFile00);
    tolua_function(tolua_S,"initWithDictionary",tolua_Cocos2d_cocos2d_CCParticleSystem_initWithDictionary00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleSystem_initWithTotalParticles00);
    tolua_function(tolua_S,"getGravity",tolua_Cocos2d_cocos2d_CCParticleSystem_getGravity00);
    tolua_function(tolua_S,"setGravity",tolua_Cocos2d_cocos2d_CCParticleSystem_setGravity00);
    tolua_function(tolua_S,"getSpeed",tolua_Cocos2d_cocos2d_CCParticleSystem_getSpeed00);
    tolua_function(tolua_S,"setSpeed",tolua_Cocos2d_cocos2d_CCParticleSystem_setSpeed00);
    tolua_function(tolua_S,"getSpeedVar",tolua_Cocos2d_cocos2d_CCParticleSystem_getSpeedVar00);
    tolua_function(tolua_S,"setSpeedVar",tolua_Cocos2d_cocos2d_CCParticleSystem_setSpeedVar00);
    tolua_function(tolua_S,"getTangentialAccel",tolua_Cocos2d_cocos2d_CCParticleSystem_getTangentialAccel00);
    tolua_function(tolua_S,"setTangentialAccel",tolua_Cocos2d_cocos2d_CCParticleSystem_setTangentialAccel00);
    tolua_function(tolua_S,"getTangentialAccelVar",tolua_Cocos2d_cocos2d_CCParticleSystem_getTangentialAccelVar00);
    tolua_function(tolua_S,"setTangentialAccelVar",tolua_Cocos2d_cocos2d_CCParticleSystem_setTangentialAccelVar00);
    tolua_function(tolua_S,"getRadialAccel",tolua_Cocos2d_cocos2d_CCParticleSystem_getRadialAccel00);
    tolua_function(tolua_S,"setRadialAccel",tolua_Cocos2d_cocos2d_CCParticleSystem_setRadialAccel00);
    tolua_function(tolua_S,"getRadialAccelVar",tolua_Cocos2d_cocos2d_CCParticleSystem_getRadialAccelVar00);
    tolua_function(tolua_S,"setRadialAccelVar",tolua_Cocos2d_cocos2d_CCParticleSystem_setRadialAccelVar00);
    tolua_function(tolua_S,"getStartRadius",tolua_Cocos2d_cocos2d_CCParticleSystem_getStartRadius00);
    tolua_function(tolua_S,"setStartRadius",tolua_Cocos2d_cocos2d_CCParticleSystem_setStartRadius00);
    tolua_function(tolua_S,"getStartRadiusVar",tolua_Cocos2d_cocos2d_CCParticleSystem_getStartRadiusVar00);
    tolua_function(tolua_S,"setStartRadiusVar",tolua_Cocos2d_cocos2d_CCParticleSystem_setStartRadiusVar00);
    tolua_function(tolua_S,"getEndRadius",tolua_Cocos2d_cocos2d_CCParticleSystem_getEndRadius00);
    tolua_function(tolua_S,"setEndRadius",tolua_Cocos2d_cocos2d_CCParticleSystem_setEndRadius00);
    tolua_function(tolua_S,"getEndRadiusVar",tolua_Cocos2d_cocos2d_CCParticleSystem_getEndRadiusVar00);
    tolua_function(tolua_S,"setEndRadiusVar",tolua_Cocos2d_cocos2d_CCParticleSystem_setEndRadiusVar00);
    tolua_function(tolua_S,"getRotatePerSecond",tolua_Cocos2d_cocos2d_CCParticleSystem_getRotatePerSecond00);
    tolua_function(tolua_S,"setRotatePerSecond",tolua_Cocos2d_cocos2d_CCParticleSystem_setRotatePerSecond00);
    tolua_function(tolua_S,"getRotatePerSecondVar",tolua_Cocos2d_cocos2d_CCParticleSystem_getRotatePerSecondVar00);
    tolua_function(tolua_S,"setRotatePerSecondVar",tolua_Cocos2d_cocos2d_CCParticleSystem_setRotatePerSecondVar00);
    tolua_function(tolua_S,"addParticle",tolua_Cocos2d_cocos2d_CCParticleSystem_addParticle00);
    tolua_function(tolua_S,"initParticle",tolua_Cocos2d_cocos2d_CCParticleSystem_initParticle00);
    tolua_function(tolua_S,"stopSystem",tolua_Cocos2d_cocos2d_CCParticleSystem_stopSystem00);
    tolua_function(tolua_S,"resetSystem",tolua_Cocos2d_cocos2d_CCParticleSystem_resetSystem00);
    tolua_function(tolua_S,"isFull",tolua_Cocos2d_cocos2d_CCParticleSystem_isFull00);
    tolua_function(tolua_S,"updateQuadWithParticle",tolua_Cocos2d_cocos2d_CCParticleSystem_updateQuadWithParticle00);
    tolua_function(tolua_S,"postStep",tolua_Cocos2d_cocos2d_CCParticleSystem_postStep00);
    tolua_function(tolua_S,"update",tolua_Cocos2d_cocos2d_CCParticleSystem_update00);
    tolua_function(tolua_S,"getTexture",tolua_Cocos2d_cocos2d_CCParticleSystem_getTexture00);
    tolua_function(tolua_S,"setTexture",tolua_Cocos2d_cocos2d_CCParticleSystem_setTexture00);
    tolua_function(tolua_S,"getBlendFunc",tolua_Cocos2d_cocos2d_CCParticleSystem_getBlendFunc00);
    tolua_function(tolua_S,"setBlendFunc",tolua_Cocos2d_cocos2d_CCParticleSystem_setBlendFunc00);
    tolua_variable(tolua_S,"__CCTextureProtocol__",tolua_get_cocos2d__CCParticleSystem___CCTextureProtocol__,NULL);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCParticleSystemQuad","cocos2d::CCParticleSystemQuad","cocos2d::CCParticleSystem",NULL);
   tolua_beginmodule(tolua_S,"CCParticleSystemQuad");
    tolua_function(tolua_S,"particleWithFile",tolua_Cocos2d_cocos2d_CCParticleSystemQuad_particleWithFile00);
   tolua_endmodule(tolua_S);
   tolua_cclass(tolua_S,"CCParticleSystemPoint","cocos2d::CCParticleSystemPoint","cocos2d::CCParticleSystem",NULL);
   tolua_beginmodule(tolua_S,"CCParticleSystemPoint");
    tolua_function(tolua_S,"particleWithFile",tolua_Cocos2d_cocos2d_CCParticleSystemPoint_particleWithFile00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleFire","cocos2d::CCParticleFire","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleFire);
   #else
   tolua_cclass(tolua_S,"CCParticleFire","cocos2d::CCParticleFire","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleFire");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleFire_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleFire_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleFire_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleFire_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleFire_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleFire_node00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleFireworks","cocos2d::CCParticleFireworks","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleFireworks);
   #else
   tolua_cclass(tolua_S,"CCParticleFireworks","cocos2d::CCParticleFireworks","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleFireworks");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleFireworks_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleFireworks_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleFireworks_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleFireworks_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleFireworks_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleFireworks_node00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleSun","cocos2d::CCParticleSun","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleSun);
   #else
   tolua_cclass(tolua_S,"CCParticleSun","cocos2d::CCParticleSun","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleSun");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleSun_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleSun_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleSun_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleSun_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleSun_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleSun_node00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleGalaxy","cocos2d::CCParticleGalaxy","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleGalaxy);
   #else
   tolua_cclass(tolua_S,"CCParticleGalaxy","cocos2d::CCParticleGalaxy","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleGalaxy");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleGalaxy_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleGalaxy_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleGalaxy_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleGalaxy_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleGalaxy_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleGalaxy_node00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleMeteor","cocos2d::CCParticleMeteor","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleMeteor);
   #else
   tolua_cclass(tolua_S,"CCParticleMeteor","cocos2d::CCParticleMeteor","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleMeteor");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleMeteor_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleMeteor_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleMeteor_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleMeteor_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleMeteor_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleMeteor_node00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleSpiral","cocos2d::CCParticleSpiral","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleSpiral);
   #else
   tolua_cclass(tolua_S,"CCParticleSpiral","cocos2d::CCParticleSpiral","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleSpiral");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleSpiral_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleSpiral_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleSpiral_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleSpiral_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleSpiral_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleSpiral_node00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleExplosion","cocos2d::CCParticleExplosion","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleExplosion);
   #else
   tolua_cclass(tolua_S,"CCParticleExplosion","cocos2d::CCParticleExplosion","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleExplosion");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleExplosion_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleExplosion_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleExplosion_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleExplosion_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleExplosion_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleExplosion_node00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleSmoke","cocos2d::CCParticleSmoke","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleSmoke);
   #else
   tolua_cclass(tolua_S,"CCParticleSmoke","cocos2d::CCParticleSmoke","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleSmoke");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleSmoke_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleSmoke_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleSmoke_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleSmoke_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleSmoke_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleSmoke_node00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleSnow","cocos2d::CCParticleSnow","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleSnow);
   #else
   tolua_cclass(tolua_S,"CCParticleSnow","cocos2d::CCParticleSnow","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleSnow");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleSnow_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleSnow_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleSnow_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleSnow_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleSnow_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleSnow_node00);
   tolua_endmodule(tolua_S);
   #ifdef __cplusplus
   tolua_cclass(tolua_S,"CCParticleRain","cocos2d::CCParticleRain","cocos2d::CCParticleSystem",tolua_collect_cocos2d__CCParticleRain);
   #else
   tolua_cclass(tolua_S,"CCParticleRain","cocos2d::CCParticleRain","cocos2d::CCParticleSystem",NULL);
   #endif
   tolua_beginmodule(tolua_S,"CCParticleRain");
    tolua_function(tolua_S,"new",tolua_Cocos2d_cocos2d_CCParticleRain_new00);
    tolua_function(tolua_S,"new_local",tolua_Cocos2d_cocos2d_CCParticleRain_new00_local);
    tolua_function(tolua_S,".call",tolua_Cocos2d_cocos2d_CCParticleRain_new00_local);
    tolua_function(tolua_S,"init",tolua_Cocos2d_cocos2d_CCParticleRain_init00);
    tolua_function(tolua_S,"initWithTotalParticles",tolua_Cocos2d_cocos2d_CCParticleRain_initWithTotalParticles00);
    tolua_function(tolua_S,"node",tolua_Cocos2d_cocos2d_CCParticleRain_node00);
   tolua_endmodule(tolua_S);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_Cocos2d (lua_State* tolua_S) {
 return tolua_Cocos2d_open(tolua_S);
};
#endif


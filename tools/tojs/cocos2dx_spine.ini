[cocos2dx_spine]
prefix = cocos2dx_spine

target_namespace = sp

android_headers = -I%(androidndkdir)s/platforms/android-14/arch-arm/usr/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.9/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.9/include
android_flags = -D_SIZE_T_DEFINED_ 

clang_headers = -I%(clangllvmdir)s/%(clang_include)s 
clang_flags = -nostdinc -x c++ -std=c++11 -U __SSE__ -DNO_JS_ASSERT -DUINT32_MAX=0xffffffff

cocos_headers = -I%(cocosdir)s/cocos -I%(cocosdir)s/cocos/editor-support -I%(cocosdir)s/cocos/platform/android -I%(cocosdir)s/external/spidermonkey/include/android -I%(cocosdir)s/external

cocos_flags = -DANDROID

cxxgenerator_headers = 

# extra arguments for clang
extra_arguments = %(android_headers)s %(clang_headers)s %(cxxgenerator_headers)s %(cocos_headers)s %(android_flags)s %(clang_flags)s %(cocos_flags)s %(extra_flags)s 

headers = %(cocosdir)s/cocos/editor-support/spine/spine-cocos2dx.h %(jsbdir)s/manual/spine/jsb_cocos2dx_spine_manual.h

classes = SkeletonRenderer SkeletonAnimation

classes_need_extend = SkeletonAnimation

skip =	SkeletonRenderer::[createWithData findBone findSlot getAttachment],
		SkeletonAnimation::[createWithData getCurrent setAnimation addAnimation]

remove_prefix = 

classes_have_no_parents =

base_classes_to_skip =

abstract_classes =

script_control_cpp =

rename_functions =	SkeletonAnimation::[createWithFile=create],
					SkeletonRenderer::[createWithFile=create]

rename_classes = SkeletonRenderer::Skeleton

# Determining whether to use script object(js object) to control the lifecycle of native(cpp) object or the other way around. Supported values are 'yes' or 'no'.
script_control_cpp = yes

apply plugin: 'com.android.application'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "org.cocos2dx.hellojavascript"
        minSdkVersion 10
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            ndkBuild {
                targets 'cocos2djs'
                arguments 'NDK_MODULE_PATH=../../../cocos2d-x:../../../cocos2d-x/cocos:../../../cocos2d-x/external'
                arguments '-j' + Runtime.runtime.availableProcessors()
                abiFilters 'armeabi'
            }
        }
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }

    externalNativeBuild {
        ndkBuild {
            path "jni/Android.mk"
        }
    }

    signingConfigs {

       release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
    }
}

android.applicationVariants.all { variant ->
    def copyAssets = task("${variant.dirName}copyAssets", type: Copy) {

        // delete previous files first
        delete "${buildDir}/intermediates/assets/${variant.dirName}"

        copy {
           from "${buildDir}/../../../../../res"
           into "${buildDir}/intermediates/assets/${variant.dirName}/res"
        }

        copy {
            from "${buildDir}/../../../../../src"
            into "${buildDir}/intermediates/assets/${variant.dirName}/src"
        }

        copy {
            from "${buildDir}/../../../../cocos2d-x/cocos/scripting/js-bindings/script"
            into  "${buildDir}/intermediates/assets/${variant.dirName}/script"
        }

        copy {
            from "${buildDir}/../../../../../main.js"
            from "${buildDir}/../../../../../project.json"
            into "${buildDir}/intermediates/assets/${variant.dirName}"
        }
    }

    variant.mergeAssets.finalizedBy copyAssets
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libcocos2dx')
}
